define([], function () {
   bslMetadata = {
      "catalogs":{
         "name":"Справочники",
         "name_en":"Catalogs",
         "query_name":"Справочник",
         "query_name_en":"Catalog",
         "items":{
            "Товары":{
               "properties":{
                  "Код":{
                     "name": "Код"
                  },
                  "Наименование":{
                     "name": "Наименование товара"
                  },
                  "Цена":{
                     "name": "Цена товара"
                  },
                  "СтавкаНДС":{
                     "name": "Наименование товара",
                     "ref": "catalogs.СтавкиНДС"
                  },
                  "СоставнойРеквизит":{
                     "name": "Реквизит составного типа",
                     "ref": "catalogs.СтавкиНДС, documents.ПриходнаяНакладная"
                  },
               },
               "predefined":{
                  "Товар":"",
                  "Услуга":""                  
               }
            },
            "СтавкиНДС":{
               "properties":{
                  "Код":{
                     "name": "Код"
                  },
                  "Наименование":{
                     "name": "Наименование"
                  },
                  "Ставка":{
                     "name": "Значение ставки"
                  }
               }
            }
         },
         "methods":{
            "Выбрать":{
               "name":"Выбрать",
               "name_en":"Select",
               "description":"Формирует выборку элементов справочника по заданным условиям.",
               "returns":"СправочникВыборка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Родитель?, Владелец?, Отбор?, Порядок?) : СправочникВыборка",
                     "Параметры":{
                        "Родитель":"СправочникСсылка, Отбор по родителю. Имеет смысл только для многоуровневых справочников. Если параметр не задан, то отбор по родителю не производится. Чтобы отобрать элементы верхнего уровня, нужно в качестве данного параметра указать пустую ссылку на элемент справочника.",
                        "Владелец":"СправочникСсылка, Отбор по владельцу. Имеет смысл только для подчиненных справочников. Если параметр не задан, то отбор по владельцу не производится.",
                        "Отбор":"Структура, Задает поле и значение отбора открываемой выборки. Ключ структуры описывает имя поля, а значение структуры - значение отбора по этому полю. В качестве полей для отбора могут задаваться только поля 'Код', 'Наименование' и реквизиты справочника, для которых в конфигураторе признак индексирования установлен в значение 'Индексировать' или в значение 'Индексировать с доп. упорядоч.'. Важно! Структура может содержать только один элемент. Если параметр не указан, то отбор не используется.",
                        "Порядок":"Строка с именем реквизита справочника, определяющая упорядочивание элементов в выборке. Может быть указано 'Код', 'Наименование' или имя одного из реквизитов примитивного типа (Число, Строка, Дата, Булево), для которого установлен признак 'Индексирование' в значение 'Индексировать' или в 'Индексировать с дополнительным упорядочиванием' в конфигураторе. После имени реквизита через пробел может быть указано направление сортировки. Направление определяется: 'Убыв' ('Desc') - упорядочивать по убыванию; 'Возр' ('Asc') - упорядочивать по возрастанию. По умолчанию сортировка производится по возрастанию. Если параметр не указан, то порядок определяется основным представлением справочника. Значение по умолчанию: Пустая строка"
                     }
                  }
               }
            },
            "ВыбратьИерархически":{
               "name":"ВыбратьИерархически",
               "name_en":"SelectHierarchically",
               "description":"Формирует иерархическую выборку элементов справочника по заданным условиям. При иерархической выборке для каждого элемента сначала выбираются элементы, для которых он является родителем, а затем уже выбираются элементы следующего уровня.",
               "returns":"СправочникВыборка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Родитель?, Владелец?, Отбор?, Порядок?) : СправочникВыборка",
                     "Параметры":{
                        "Родитель":"СправочникСсылка, Отбор по родителю. Имеет смысл только для многоуровневых справочников. Если параметр не задан, то отбор по родителю не производится. Чтобы отобрать элементы верхнего уровня, нужно в качестве данного параметра указать пустую ссылку на элемент справочника.",
                        "Владелец":"СправочникСсылка, Отбор по владельцу. Имеет смысл только для подчиненных справочников. Если параметр не задан, то отбор по владельцу не производится.",
                        "Отбор":"Структура, Задает поле и значение отбора открываемой выборки. Ключ структуры описывает имя поля, а значение структуры - значение отбора по этому полю. В качестве полей для отбора могут задаваться только поля 'Код', 'Наименование' и реквизиты справочника, для которых в конфигураторе признак индексирования установлен в значение 'Индексировать' или в значение 'Индексировать с доп. упорядоч.'. Важно! Структура может содержать только один элемент. Если параметр не указан, то отбор не используется.",
                        "Порядок":"Строка с именем реквизита справочника, определяющая упорядочивание элементов в выборке. Может быть указано 'Код', 'Наименование' или имя одного из реквизитов примитивного типа (Число, Строка, Дата, Булево), для которого установлен признак 'Индексирование' в значение 'Индексировать' или в 'Индексировать с дополнительным упорядочиванием' в конфигураторе. После имени реквизита через пробел может быть указано направление сортировки. Направление определяется: 'Убыв' ('Desc') - упорядочивать по убыванию; 'Возр' ('Asc') - упорядочивать по возрастанию. По умолчанию сортировка производится по возрастанию. Если параметр не указан, то порядок определяется основным представлением справочника. Значение по умолчанию: Пустая строка"
                     }
                  }
               }
            },
            "НайтиПоКоду":{
               "name":"НайтиПоКоду",
               "name_en":"FindByCode",
               "description":"Осуществляет поиск элемента по его коду.",
               "returns":"СправочникСсылка.<Имя справочника>; Неопределено",
               "ref": "catalogs:ref",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Код, ПоискПоПолномуКоду, Родитель, Владелец) : СправочникСсылка.<Имя справочника>; Неопределено",
                     "Параметры":{
                        "Код":"Число/Строка, Искомый код. Строка или число в зависимости от настроек справочника в конфигураторе. ",
                        "ПоискПоПолномуКоду":"Булево, Определяет режим поиска по полному коду. Истина - искомый код следует задавать в виде строки, состоящей из последовательности кодов по уровням справочника, разделенных символом '/'.Значение по умолчанию: Ложь",
                        "Родитель":"СправочникСсылка, Родитель, в пределах которого нужно выполнять поиск. Если не указан, то поиск будет проводиться во всем справочнике.",
                        "Владелец":"СправочникСсылка, Владелец, в пределах которого нужно выполнять поиск. Если не указан, то поиск будет проводиться во всем справочнике. "
                     }
                  }
               }
            },
            "НайтиПоНаименованию":{
               "name":"НайтиПоНаименованию",
               "name_en":"FindByDescription",
               "description":"Осуществляет поиск элемента по его наименованию.",
               "returns":"СправочникСсылка.<Имя справочника>; Неопределено",
               "ref": "catalogs:ref",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Наименование, ТочноеСоответствие?, Родитель?, Владелец?) : СправочникСсылка.<Имя справочника>; Неопределено",
                     "Параметры":{
                        "Наименование":"Строка, содержащая искомое наименование",
                        "ТочноеСоответствие":"Определяет режим поиска по полному соответствию. Поиск будет успешным, если строка поиска: в случае значения параметра Ложь - будет соответствовать левой части наименования; в случае значения параметра Истина - будет полностью совпадать с наименованием (за исключением 'хвостовых'' пробелов в наименовании).",
                        "Родитель":"СправочникСсылка, Родитель, в пределах которого нужно выполнять поиск. Если не указан, то поиск будет проводиться во всем справочнике.",
                        "Владелец":"СправочникСсылка, Владелец, в пределах которого нужно выполнять поиск. Если не указан, то поиск будет проводиться во всем справочнике. "
                     }
                  }
               }
            },
            "НайтиПоРеквизиту":{
               "name":"НайтиПоРеквизиту",
               "name_en":"FindByAttribute",
               "description":"Осуществляет поиск элемента по значению реквизита.",
               "returns":"СправочникСсылка.<Имя справочника>; Неопределено",
               "ref": "catalogs:ref",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ИмяРеквизита, ЗначениеРеквизита, Родитель?, Владелец?) : СправочникСсылка.<Имя справочника>; Неопределено",
                     "Параметры":{
                        "ИмяРеквизита":"Имя реквизита, как он задан в конфигураторе, по значению которого осуществляется поиск. Тип значения произвольный, кроме ХранилищеЗначения и строк произвольной длины.",
                        "ЗначениеРеквизита":"Значение реквизита, по которому должен выполняться поиск. ",
                        "Родитель":"СправочникСсылка, Родитель, в пределах которого нужно выполнять поиск. Если не указан, то поиск будет проводиться во всем справочнике.",
                        "Владелец":"СправочникСсылка, Владелец, в пределах которого нужно выполнять поиск. Если не указан, то поиск будет проводиться во всем справочнике. "
                     }
                  }
               }
            },
            "ПолучитьДанныеВыбора":{
               "name":"ПолучитьДанныеВыбора",
               "name_en":"GetChoiceData",
               "description":"Формирует список значений данных выбора при вводе по строке, автоподборе текста и быстром выборе.",
               "returns":"СписокЗначений",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Параметры) : СписокЗначений",
                     "Параметры":{
                        "Параметры":"Содержит параметры для формирования списка значений: Структура, в которой обязательно должны содержаться следующие ключи:  Отбор (Filter) - отбор, используемый для поиска данных, тип Структура; значения элементов отбора могут иметь тип Массив или иной тип, не являющийся коллекцией; для типа Массив сравнение выполняется с видом сравнения ВСписке, иначе вид сравнения Равно;  СтрокаПоиска (SearchString) - содержит строку, используемую при поиске данных; для быстрого выбора содержит значение Неопределено;  ВыборГруппИЭлементов (ChoiceFoldersAndItems) - указывается использование групп и элементов (только для иерархических данных); тип ИспользованиеГруппИЭлементов."
                     }
                  }
               }
            },
            "ПолучитьИмяПредопределенного":{
               "name":"ПолучитьИмяПредопределенного",
               "name_en":"GetPredefinedItemName",
               "description":"Получает имя предопределенного элемента. Если данный элемент не является предопределенным, то возвращается пустая строка.",
               "returns":"Строка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Ссылка) : Строка",
                     "Параметры":{
                        "Ссылка":"Ссылка на элемент, имя которого требуется получить. "
                     }
                  }
               }
            },
            "ПолучитьМакет":{
               "name":"ПолучитьМакет",
               "name_en":"GetTemplate",
               "description":"Получает макет справочника.",
               "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Макет) : Объект",
                     "Параметры":{
                        "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                     }
                  }
               }
            },
            "ПолучитьСсылку":{
               "name":"ПолучитьСсылку",
               "name_en":"GetRef",
               "description":"Формирует ссылку из значения типа УникальныйИдентификатор. Данный уникальный идентификатор может быть в дальнейшем получен из ссылки методом УникальныйИдентификатор.",
               "returns":"СправочникСсылка",
               "ref": "catalogs:ref",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(УникальныйИдентификатор) : СправочникСсылка",
                     "Параметры":{
                        "УникальныйИдентификатор":"Уникальный идентификатор, из которого будет формироваться ссылка."
                     }
                  }
               }
            },
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму справочника. Если получаемая форма - форма для редактирования элемента или группы справочника, то будет получена форма нового элемента или группы.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПолучитьФормуВыбора":{
               "name":"ПолучитьФормуВыбора",
               "name_en":"GetChoiceForm",
               "description":"Получает форму списка для выбора элементов справочника.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПолучитьФормуВыбораГруппы":{
               "name":"ПолучитьФормуВыбораГруппы",
               "name_en":"GetChoiceForm",
               "description":"Получает форму списка для выбора группы справочника.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПолучитьФормуНовогоЭлемента":{
               "name":"ПолучитьФормуНовогоЭлемента",
               "name_en":"GetNewItemForm",
               "description":"Получает форму нового элемента.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПолучитьФормуНовойГруппы":{
               "name":"ПолучитьФормуНовойГруппы",
               "name_en":"GetNewFolderForm",
               "description":"Получает форму новой группы.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПолучитьФормуСписка":{
               "name":"ПолучитьФормуСписка",
               "name_en":"GetListForm",
               "description":"Получает форму списка элементов справочника.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПустаяСсылка":{
               "name":"ПустаяСсылка",
               "name_en":"EmptyRef",
               "description":"Получает пустое значение ссылки на справочник данного вида.",
               "returns":"СправочникСсылка",
               "ref": "catalogs:ref"
            },
            "СоздатьГруппу":{
               "name":"СоздатьГруппу",
               "name_en":"CreateFolder",
               "description":"Создает новую группу справочника.",
               "returns":"СправочникОбъект",
               "ref": "catalogs:obj"
            },
            "СоздатьЭлемент":{
               "name":"СоздатьЭлемент",
               "name_en":"CreateItem",
               "description":"Создает новый элемент справочника.",
               "returns":"СправочникОбъект",
               "ref": "catalogs:obj"
            }
         },
         "objMethods":{
            "Заблокирован":{
               "name":"Заблокирован",
               "name_en":"IsLocked",
               "description":"Определяет, заблокирован ли элемент данным объектом.",
               "returns":"Булево, Истина - элемент заблокирован; Ложь - в противном случае."
            },
            "Заблокировать":{
               "name":"Заблокировать",
               "name_en":"Lock",
               "description":"Выполняет блокировку объекта от изменения другими режимами или пользователями."
            },
            "Записать":{
               "name":"Записать",
               "name_en":"Write",
               "description":"Записывает элемент справочника в базу данных."
            },
            "Заполнить":{
               "name":"Заполнить",
               "name_en":"Fill",
               "description":"Заполняет данные элемента данными из другого объекта. Инициирует событие ОбработкаЗаполнения и вызов его процедуры-обработчика в модуле плана счетов. В ней может размещаться алгоритм, заполняющий данные элемента из переданного значения.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ДанныеЗаполнения) ",
                     "Параметры":{
                        "ДанныеЗаполнения":"Произвольный, Значение, на основании которого выполняется заполнение счета."
                     }
                  }
               }
            },
            "Метаданные":{
               "name":"Метаданные",
               "name_en":"Metadata",               
               "description":"Предоставляет доступ к объекту описания метаданных справочника. Другой путь получения того же значения - через свойство глобального контекста Метаданные. Например: Метаданные.Справочники.Номенклатура.",
               "returns":"ОбъектМетаданных"               
            },
            "Модифицированность":{
               "name":"Модифицированность",
               "name_en":"Modified",               
               "description":"Определяет, был ли изменен объект после считывания из базы данных.",
               "returns":"Истина - объект изменен; Ложь - в противном случае."
            },            
            "ПолучитьСсылкуНового":{
               "name":"ПолучитьСсылкуНового",
               "name_en":"GetNewObjectRef",
               "description":"Позволяет для нового (созданного и еще не записанного) объекта получить ранее установленное методом УстановитьСсылкуНового значение ссылки.",
               "returns":"СправочникСсылка"               
            },
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму элемента справочника, на который указывает ссылка.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },            
            "ПроверитьЗаполнение":{
               "name":"ПроверитьЗаполнение",
               "name_en":"CheckFilling",
               "description":"Проверяет заполнение реквизитов. Для реквизитов, у которых при конфигурировании свойство 'Проверка заполнения' установлено в значение 'Показывать ошибку' и реквизит не заполнен, будет сформировано сообщение об ошибке.",
               "returns":"Булево, Истина - ошибок не обнаружено, Ложь - в противном случае."               
            },
            "Прочитать":{
               "name":"Прочитать",
               "name_en":"Read",
               "description":"Считывает данные элемента справочника из базы данных."               
            },
            "Разблокировать":{
               "name":"Разблокировать",
               "name_en":"Unlock",
               "description":"Выполняет разблокировку элемента, если он заблокирован данным объектом."               
            },
            "Скопировать":{
               "name":"Скопировать",
               "name_en":"Copy",
               "description":"Создает новый элемент справочника копированием существующего",
               "returns":"СправочникОбъект",
               "ref": "catalogs:obj"
            },
            "Удалить":{
               "name":"Удалить",
               "name_en":"Delete",
               "description":"Удаляет элемент справочника из базы данных. Важно! В отличие от метода УстановитьПометкуУдаления, данный метод производит непосредственное удаление элемента справочника без возможности восстановления и без проверки ссылочной целостности. Использовать данный метод нужно крайне осмотрительно."
            },
            "Уровень":{
               "name":"Уровень",
               "name_en":"Level",
               "description":"Получает уровень элемента справочника.",
               "returns":"Число, Уровень элемента справочника. "
            },
            "УстановитьНовыйКод":{
               "name":"УстановитьНовыйКод",
               "name_en":"SetNewCode",
               "description":"Устанавливает новый код. Если в коде присутствует числовая часть, то новый код автоматически устанавливается следующим за имеющимся максимальным. При этом определяется текущий максимальный код среди элементов данного справочника. Если передан префикс, то новый код устанавливается следующим образом: выполняется поиск максимального кода среди кодов, имеющих данный префикс, новый код выбирается как следующий от найденного кода.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ПрефиксКода?)",
                     "Параметры":{
                        "ПрефиксКода":"Строковое значение префикса. Если префикс указан, то новый код будет формироваться с учетом префикса. "
                     }
                  }
               }
            },
            "УстановитьПометкуУдаления":{
               "name":"УстановитьПометкуУдаления",
               "name_en":"SetDeletionMark",
               "description":"Устанавливает/снимет пометку на удаление. Объект при этом не удаляется из базы данных. Окончательное удаление помеченных счетов происходит при удалении помеченных объектов.",               
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ПометкаУдаления, ВключаяПодчиненные?)",
                     "Параметры":{
                        "ПометкаУдаления":"Булево, Признак установки / снятие пометки на удаление. Истина - пометка будет установлена; Ложь - пометка будет снята.",
                        "ВключаяПодчиненные":"Булево, Если параметр установлен в Истина, то будут помечены на удаление, кроме данного элемента, все его подчиненные элементы в данном счете и во всех подчиненных счетах. Если параметр установлен в Ложь, то будет помечен на удаление только данный элемент."
                     }
                  }
               }
            },
            "УстановитьСсылкуНового":{
               "name":"УстановитьСсылкуНового",
               "name_en":"SetNewObjectRef",
               "description":"Устанавливает значение для нового (созданного и еще не записанного) объекта, которое будет назначено при записи в качестве ссылки. Значение не может равняться ссылке какого-либо из имеющихся в базе данных объекта данного типа. Уникальность ссылки проверяется при записи объекта.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Ссылка)",
                     "Параметры":{
                        "Ссылка":" СправочникСсылка, Ссылка, которая будет назначена при записи нового объекта. "
                     }
                  }
               }
            },
            "ЭтоНовый":{
               "name":"ЭтоНовый",
               "name_en":"IsNew",
               "description":"Определяет, записан ли элемент в базу данных.",
               "returns":"Булево, Истина - изменяется еще ни разу не записанный элемент; Ложь - элемент уже записан."
            }            
         },
         "refMethods":{               
            "Метаданные":{
               "name":"Метаданные",
               "name_en":"Metadata",               
               "description":"Предоставляет доступ к объекту описания метаданных справочника. Другой путь получения того же значения - через свойство глобального контекста Метаданные. Например: Метаданные.Справочники.Номенклатура.",
               "returns":"ОбъектМетаданных"               
            },               
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму элемента справочника, на который указывает ссылка.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },                           
            "Скопировать":{
               "name":"Скопировать",
               "name_en":"Copy",
               "description":"Создает новый элемент справочника копированием существующего",
               "returns":"СправочникОбъект",
               "ref": "catalogs:obj"
            },               
            "Уровень":{
               "name":"Уровень",
               "name_en":"Level",
               "description":"Получает уровень элемента справочника.",
               "returns":"Число, Уровень элемента справочника. "
            },               
            "ПолучитьОбъект":{
               "name":"ПолучитьОбъект",
               "name_en":"GetObject",
               "description":"Получает по ссылке объект, предназначенный для модификации справочника.",
               "returns":"СправочникОбъект/Неопределено, Неопределено - объекта в базе нет (например, при обмене данными или после непосредственного удаления объекта, на который есть ссылки).",
               "ref": "catalogs:obj"
            },
            "Пустая":{
               "name":"Пустая",
               "name_en":"GetObject",
               "description":"Определяет, является ли ссылка пустой или нет.",
               "returns":"Булево, Истина - ссылка не указывает ни на какой объект (пустая ссылка); Ложь - в противном случае."
            },            
            "УникальныйИдентификатор":{
               "name":"УникальныйИдентификатор",
               "name_en":"UUID",
               "description":"Получает уникальный идентификатор ссылки. Ссылка может быть получена из уникального идентификатора с помощью метода менеджера ПолучитьСсылку.",
               "returns":"УникальныйИдентификатор"
            }
         }
      },
      "documents":{
         "name":"Документы",
         "name_en":"Documents",
         "query_name":"Документ",
         "query_name_en":"Document",
         "items":{
            "ПриходнаяНакладная":{
               "properties":{
                  "Номер":{
                     "name": "Номер документа"
                  },
                  "Дата":{
                     "name": "Дата документа"
                  },
                  "Товар":{
                     "name": "Полученный товар",
                     "ref": "catalogs.Товары"
                  },
                  "СуммаДокумента":{
                     "name": "Сумма (руб.коп)"
                  }
               },
               "registerRecords":{
                  "name": "Движения",
                  "name_en": "RegisterRecords",
                  "registers":[
                     "infoRegs.ТестовыйЭлемент.obj",
                     "accumRegs.ОстаткиТоваров.obj",
                     "accountRegs.Хозрасчетный.obj"
                  ]
               }
            },
            "АвансовыйОтчет":{
               "properties":{
                  "Номер":"Номер документа",
                  "Дата":"Дата документа",
                  "ПодотчетноеЛицо":"Подотчетное лицо"
               }
            }
         },
         "methods":{
            "Выбрать":{
               "name":"Выбрать",
               "name_en":"Select",
               "description":"Формирует выборку документов за определенный период. Получаемая выборка может быть упорядочена по реквизитам документа.",
               "returns":"ДокументВыборка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ДатаНачала?, ДатаОкончания?, Отбор?, Порядок?) : ДокументВыборка",
                     "Параметры":{
                        "ДатаНачала":"Дата, Дата и время начала периода выборки документов. Если параметр не указан, то выбираются все документы, начиная с самого первого документа в базе данных.",
                        "ДатаОкончания":"Дата, Дата окончания периода выбираемых документов. Если параметр не указан, то выбираются все документы, заканчивая самым последним документом в базе данных.",
                        "Отбор":"Структура, Задает поле и значение отбора открываемой выборки. Ключ структуры описывает имя поля, а значение структуры - значение отбора по этому полю. В качестве полей для отбора могут задаваться только поля 'Код', 'Наименование' и реквизиты справочника, для которых в конфигураторе признак индексирования установлен в значение 'Индексировать' или в значение 'Индексировать с доп. упорядоч.'. Важно! Структура может содержать только один элемент. Если параметр не указан, то отбор не используется.",
                        "Порядок":"Строка с именем реквизита справочника, определяющая упорядочивание элементов в выборке. Может быть указано 'Код', 'Наименование' или имя одного из реквизитов примитивного типа (Число, Строка, Дата, Булево), для которого установлен признак 'Индексирование' в значение 'Индексировать' или в 'Индексировать с дополнительным упорядочиванием' в конфигураторе. После имени реквизита через пробел может быть указано направление сортировки. Направление определяется: 'Убыв' ('Desc') - упорядочивать по убыванию; 'Возр' ('Asc') - упорядочивать по возрастанию. По умолчанию сортировка производится по возрастанию. Если параметр не указан, то порядок определяется основным представлением справочника. Значение по умолчанию: Пустая строка"
                     }
                  }
               }
            },
            "НайтиПоНомеру":{
               "name":"НайтиПоНомеру",
               "name_en":"FindByNumber",
               "description":"Осуществляет поиск документа по номеру.",
               "returns":"ДокументСсылка.<Имя документа>; Неопределено.",
               "ref": "documents:ref",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(НомерДокумента, ДатаИнтервала) : ДокументСсылка.<Имя справочника>; Неопределено",
                     "Параметры":{
                        "НомерДокумента":"Число/Строка, Номер искомого документа. Тип передаваемого значения зависит от установки в конфигураторе представления номера документа.",
                        "Дата":"Дата, Дата из интервала, в котором проводится поиск по номеру. Сам интервал определяется как период уникальности номеров документа, в который входит указанная дата. Например, если номера документов уникальны в пределах месяца и задана дата 10 декабря 2001 года, то поиск будет проводиться в интервале с 01 по 31 декабря 2001 года."
                     }
                  }
               }
            },
            "НайтиПоРеквизиту":{
               "name":"НайтиПоРеквизиту",
               "name_en":"FindByAttribute",
               "description":"Осуществляет поиск документа по реквизиту.",
               "returns":"ДокументСсылка",
               "ref": "documents:ref",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ИмяРеквизита, ЗначениеРеквизита) : ДокументСсылка",
                     "Параметры":{
                        "ИмяРеквизита":"Строка, Имя реквизита, как он задан в конфигураторе, по значению которого осуществляется поиск. Тип значения произвольный, кроме ХранилищеЗначения и строк произвольной длины.",
                        "ЗначениеРеквизита":"Значение реквизита, по которому должен выполняться поиск."
                     }
                  }
               }
            },
            "ПолучитьДанныеВыбора":{
               "name":"ПолучитьДанныеВыбора",
               "name_en":"GetChoiceData",
               "description":"Формирует список значений данных выбора при вводе по строке, автоподборе текста и быстром выборе.",
               "returns":"СписокЗначений",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Параметры) : СписокЗначений",
                     "Параметры":{
                        "Параметры":"Содержит параметры для формирования списка значений: Структура, в которой обязательно должны содержаться следующие ключи:  Отбор (Filter) - отбор, используемый для поиска данных, тип Структура; значения элементов отбора могут иметь тип Массив или иной тип, не являющийся коллекцией; для типа Массив сравнение выполняется с видом сравнения ВСписке, иначе вид сравнения Равно;  СтрокаПоиска (SearchString) - содержит строку, используемую при поиске данных; для быстрого выбора содержит значение Неопределено;  ВыборГруппИЭлементов (ChoiceFoldersAndItems) - указывается использование групп и элементов (только для иерархических данных); тип ИспользованиеГруппИЭлементов."
                     }
                  }
               }
            },
            "ПолучитьМакет":{
               "name":"ПолучитьМакет",
               "name_en":"GetTemplate",
               "description":"Получает макет документа.",
               "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Макет) : Объект",
                     "Параметры":{
                        "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                     }
                  }
               }
            },
            "ПолучитьСсылку":{
               "name":"ПолучитьСсылку",
               "name_en":"GetRef",
               "description":"Формирует ссылку из значения типа УникальныйИдентификатор. Данный уникальный идентификатор может быть в дальнейшем получен из ссылки методом УникальныйИдентификатор.",
               "returns":"ДокументСсылка",
               "ref": "documents:ref",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(УникальныйИдентификатор) : ДокументСсылка",
                     "Параметры":{
                        "УникальныйИдентификатор":"Уникальный идентификатор, из которого будет формироваться ссылка."
                     }
                  }
               }
            },
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму документа. Если получаемая форма - форма для редактирования документа, то будет получена форма нового документа.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПолучитьФормуВыбора":{
               "name":"ПолучитьФормуВыбора",
               "name_en":"GetChoiceForm",
               "description":"Получает форму списка для выбора элементов справочника.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПолучитьФормуНовогоДокумента":{
               "name":"ПолучитьФормуНовогоДокумента",
               "name_en":"GetNewDocumentForm",
               "description":"Получает форму нового документа.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПолучитьФормуСписка":{
               "name":"ПолучитьФормуСписка",
               "name_en":"GetListForm",
               "description":"Получает форму списка документов.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПустаяСсылка":{
               "name":"ПустаяСсылка",
               "name_en":"EmptyRef",
               "description":"Получает пустое значение ссылки на документ данного вида.",
               "returns":"ДокументСсылка",
               "ref": "documents:ref"
            },
            "СоздатьДокумент":{
               "name":"СоздатьДокумент",
               "name_en":"CreateDocument",
               "description":"Создает новый документ.",
               "returns":"ДокументОбъект",
               "ref": "documents:obj"
            }
         },
         "objMethods":{
            "Заблокирован":{
               "name":"Заблокирован",
               "name_en":"IsLocked",
               "description":"Определяет, заблокирован ли элемент данным объектом.",
               "returns":"Булево, Истина - элемент заблокирован; Ложь - в противном случае."
            },
            "Заблокировать":{
               "name":"Заблокировать",
               "name_en":"Lock",
               "description":"Выполняет блокировку объекта от изменения другими режимами или пользователями."
            },
            "Записать":{
               "name":"Записать",
               "name_en":"Write",
               "description":"Записывает документ в базу данных.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(РежимЗаписи?, РежимПроведения?)",
                     "Параметры":{
                        "РежимЗаписи":"РежимЗаписиДокумента, Позволяет выбрать один из возможных режимов записи. Значение по умолчанию: Запись.",
                        "РежимПроведения":"РежимПроведенияДокумента. Позволяет выбрать один из возможных режимов проведения. Значение по умолчанию: Неоперативный."
                     }
                  }
               }
            },
            "Заполнить":{
               "name":"Заполнить",
               "name_en":"Fill",
               "description":"Заполняет данные элемента данными из другого объекта. Инициирует событие ОбработкаЗаполнения и вызов его процедуры-обработчика в модуле плана счетов. В ней может размещаться алгоритм, заполняющий данные элемента из переданного значения.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ДанныеЗаполнения) ",
                     "Параметры":{
                        "ДанныеЗаполнения":"Произвольный, Значение, на основании которого выполняется заполнение счета."
                     }
                  }
               }
            },
            "Метаданные":{
               "name":"Метаданные",
               "name_en":"Metadata",               
               "description":"Предоставляет доступ к объекту описания метаданных документа. Другой путь получения того же значения - через свойство глобального контекста Метаданные. Например: Метаданные.Документы.РасходнаяНакладная.",
               "returns":"ОбъектМетаданных"               
            },
            "Модифицированность":{
               "name":"Модифицированность",
               "name_en":"Modified",               
               "description":"Определяет, был ли изменен объект после считывания из базы данных.",
               "returns":"Истина - объект изменен; Ложь - в противном случае."
            },
            "МоментВремени":{
               "name":"МоментВремени",
               "name_en":"PointInTime",               
               "description":"Получает момент времени документа.",
               "returns":"МоментВремени"
            },
            "ПолучитьМакет":{
               "name":"ПолучитьМакет",
               "name_en":"GetTemplate",
               "description":"Получает макет документа.",
               "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Макет) : Объект",
                     "Параметры":{
                        "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                     }
                  }
               }
            },            
            "ПолучитьСсылкуНового":{
               "name":"ПолучитьСсылкуНового",
               "name_en":"GetNewObjectRef",
               "description":"Позволяет для нового (созданного и еще не записанного) объекта получить ранее установленное методом УстановитьСсылкуНового значение ссылки.",
               "returns":"ДокументСсылка"               
            },
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму документа, которая содержит данный объект встроенного языка.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },            
            "ПроверитьЗаполнение":{
               "name":"ПроверитьЗаполнение",
               "name_en":"CheckFilling",
               "description":"Проверяет заполнение реквизитов. Для реквизитов, у которых при конфигурировании свойство 'Проверка заполнения' установлено в значение 'Показывать ошибку' и реквизит не заполнен, будет сформировано сообщение об ошибке.",
               "returns":"Булево, Истина - ошибок не обнаружено, Ложь - в противном случае."               
            },
            "Прочитать":{
               "name":"Прочитать",
               "name_en":"Read",
               "description":"Считывает данные документа из базы данных."
            },
            "Разблокировать":{
               "name":"Разблокировать",
               "name_en":"Unlock",
               "description":"Выполняет разблокировку документа, если он заблокирован этим объектом."
            },
            "Скопировать":{
               "name":"Скопировать",
               "name_en":"Copy",
               "description":"Создает новый документ копированием существующего.",
               "returns":"ДокументОбъект",
               "ref": "documents:obj"
            },
            "Удалить":{
               "name":"Удалить",
               "name_en":"Delete",
               "description":"Удаляет документ из базы данных. Важно! В отличие от метода УстановитьПометкуУдаления, данный метод производит непосредственное удаление документа без возможности восстановления и без проверки ссылочной целостности. Использовать данный метод нужно крайне осмотрительно."
            },
            "УстановитьВремя":{
               "name":"УстановитьВремя",
               "name_en":"SetTime",
               "description":"Устанавливает время документа.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(РежимОпределенияВремени?, ИспользоватьЖурналы?)",
                     "Параметры":{
                        "РежимОпределенияВремени":"РежимАвтоВремя, Устанавливает режим автоматического определения времени при записи нового документа.",
                        "ИспользоватьЖурналы":"Булево, Определяет, устанавливать ли время с использованием журналов, в которых отражается данный документ."
                     }
                  }
               }
            },
            "УстановитьНовыйНомер":{
               "name":"УстановитьНовыйНомер",
               "name_en":"SetNewNumber",
               "description":"Устанавливает новый номер документа для заданного префикса номера.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ПрефиксНомера?)",
                     "Параметры":{
                        "ПрефиксНомера":"Строка, Префикс устанавливаемого номера.Значение по умолчанию: Пустая строка."
                     }
                  }
               }
            },
            "УстановитьПометкуУдаления":{
               "name":"УстановитьПометкуУдаления",
               "name_en":"SetDeletionMark",
               "description":"Устанавливает/снимет пометку на удаление документа. Документ при этом не удаляется из базы данных. Окончательное удаление помеченных документов происходит при удалении помеченных объектов.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ПометкаУдаления)",
                     "Параметры":{
                        "ПометкаУдаления":"Булево, Признак установки / снятие пометки на удаление. Истина - пометка будет установлена; Ложь - пометка будет снята."
                     }
                  }
               }
            },
            "УстановитьСсылкуНового":{
               "name":"УстановитьСсылкуНового",
               "name_en":"SetNewObjectRef",
               "description":"Устанавливает значение для нового (созданного и еще не записанного) объекта, которое будет назначено при записи в качестве ссылки. Значение не может равняться ссылке какого-либо из имеющихся в базе данных объекта данного типа. Уникальность ссылки проверяется при записи объекта.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Ссылка)",
                     "Параметры":{
                        "Ссылка":" ДокументСсылка, Ссылка, которая будет назначена при записи нового объекта. "
                     }
                  }
               }
            },
            "ЭтоНовый":{
               "name":"ЭтоНовый",
               "name_en":"IsNew",
               "description":"Определяет, записан ли документ в базу данных.",
               "returns":"Булево, Истина - изменяется еще ни разу не записанный элемент; Ложь - элемент уже записан."
            }            
         },
         "refMethods":{               
            "Метаданные":{
               "name":"Метаданные",
               "name_en":"Metadata",               
               "description":"Предоставляет доступ к объекту описания метаданных документа. Другой путь получения того же значения - через свойство глобального контекста Метаданные. Например: Метаданные.Документы.ПриходнаяНакладная.",
               "returns":"ОбъектМетаданных"               
            },               
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму документа, на который указывает ссылка.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },                           
            "Скопировать":{
               "name":"Скопировать",
               "name_en":"Copy",
               "description":"Создает новый документ копированием существующего",
               "returns":"ДокументОбъект"
            },                           
            "ПолучитьОбъект":{
               "name":"ПолучитьОбъект",
               "name_en":"GetObject",
               "description":"Получает по ссылке объект, предназначенный для модификации докумнгьа.",
               "returns":"ДокументОбъект/Неопределено, Неопределено - объекта в базе нет (например, при обмене данными или после непосредственного удаления объекта, на который есть ссылки).",
               "ref": "documents:obj"
            },
            "Пустая":{
               "name":"Пустая",
               "name_en":"GetObject",
               "description":"Определяет, является ли ссылка пустой или нет.",
               "returns":"Булево, Истина - ссылка не указывает ни на какой объект (пустая ссылка); Ложь - в противном случае."
            },            
            "УникальныйИдентификатор":{
               "name":"УникальныйИдентификатор",
               "name_en":"UUID",
               "description":"Получает уникальный идентификатор ссылки. Ссылка может быть получена из уникального идентификатора с помощью метода менеджера ПолучитьСсылку.",
               "returns":"УникальныйИдентификатор"
            }
         }
      },
      "infoRegs":{
         "name":"РегистрыСведений",
         "name_en":"InformationRegisters",
         "query_name":"РегистрСведений",
         "query_name_en":"InformationRegister",
         "items":{            
            "ЦеныНоменклатуры":{
               "type": "periodical",
               "properties":{
                  "Номенклатура":{
                     "name": "Номенклатура"
                  },
                  "Цена":{
                     "name": "Цена"
                  },
                  "ВидЦены":{
                     "name": "Вид цены"
                  }
               }
            },
            "ВерсииОбъектов":{
               "type": "nonperiodical",
               "properties":{
                  "Объект":{
                     "name": "Объект"
                  },
                  "НомерВерсии":{
                     "name": "Номер версии"
                  },
                  "ВерсияОбъекта":{
                     "name": "Версия объекта"
                  }
               }
            },
         },
         "methods":{
            "Выбрать":{
               "name":"Выбрать",
               "name_en":"Select",
               "description":"Формирует выборку записей регистра сведений.",
               "returns":"РегистрСведенийВыборка",
               "signature":{
                  "ДляПериодическогоРегистра":{
                     "СтрокаПараметров":"(НачалоИнтервала?, КонецИнтервала?, Отбор?, Порядок?) : РегистрСведенийВыборка",
                     "Параметры":{
                        "НачалоИнтервала":"Дата/МоментВремени/Граница, Начало интервала, за который будут выдаваться записи периодического регистра сведений. Если не указан, то будут выдаваться записи с самого ранней включительно. Может задаваться значениями типа Дата, МоментВремени или Граница.",
                        "КонецИнтервала":"Дата/МоментВремени/Граница, Конец интервала, за который будут выдаваться записи периодического регистра сведений. Если не указан, то будут выдаваться записи до самой поздней включительно. Может задаваться значениями типа Дата, МоментВремени или Граница.",
                        "Отбор":"Структура, Задает поле и значение отбора открываемой выборки. Ключ структуры описывает имя поля, а значение структуры - значение отбора по этому полю. В качестве полей для отбора могут задаваться измерения или реквизиты, для которых в конфигураторе признак индексирования установлен в значение 'Индексировать' или установлен признак 'Ведущее'. Вид сравнения может быть только Равно. Структура дополнительно может иметь элементы, соответствующие разделителям регистра с уровнем разделения НезависимоИСовместно, в состав которых входит регистр. Если такой элемент структуры задан для используемого в сеансе разделителя, значение для этого элемента должно совпадать со значением разделителя, иначе будет вызвано исключение. Если параметр не указан, то отбор не используется. Важно! Структура может содержать только один элемент.",
                        "Порядок":"Строка, Может содержать слово 'Возр' или 'Убыв', тогда стандартный порядок будет использоваться с указанным направлением.  Может содержать имя поля (реквизита или измерения, для которых указано индексирование) и слово 'Возр' или 'Убыв', тогда упорядочивание будет производится по указанному полю в указанном порядке."
                     }
                  },
                  "ДляНепериодическогоРегистра":{
                     "СтрокаПараметров":"(Отбор?, Порядок?) : РегистрСведенийВыборка",
                     "Параметры":{
                        "Отбор":"Структура, Задает поле и значение отбора открываемой выборки. Ключ структуры описывает имя поля, а значение структуры - значение отбора по этому полю. В качестве полей для отбора могут задаваться измерения или реквизиты, для которых в конфигураторе признак индексирования установлен в значение 'Индексировать' или установлен признак 'Ведущее'. Вид сравнения может быть только Равно. Структура дополнительно может иметь элементы, соответствующие разделителям регистра с уровнем разделения НезависимоИСовместно, в состав которых входит регистр. Если такой элемент структуры задан для используемого в сеансе разделителя, значение для этого элемента должно совпадать со значением разделителя, иначе будет вызвано исключение. Если параметр не указан, то отбор не используется. Важно! Структура может содержать только один элемент.",
                        "Порядок":"Строка, Может содержать слово 'Возр' или 'Убыв', тогда стандартный порядок будет использоваться с указанным направлением.  Может содержать имя поля (реквизита или измерения, для которых указано индексирование) и слово 'Возр' или 'Убыв', тогда упорядочивание будет производится по указанному полю в указанном порядке."
                     }
                  }
               }
            },
            "ВыбратьПоРегистратору":{
               "name":"ВыбратьПоРегистратору",
               "name_en":"SelectByRecorder",
               "description":"Формирует выборку по регистратору записей регистра сведений. Применяется для регистров сведений, для которых в конфигураторе установлен режим записи 'Подчинение регистратору'.",
               "returns":"РегистрСведенийВыборка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Регистратор) : РегистрСведенийВыборка",
                     "Параметры":{
                        "Регистратор":"ДокументСсылка, Ссылка на документ, являющийся регистратором для записей регистра"
                     }
                  }
               }
            },
            "Получить":{
               "name":"Получить",
               "name_en":"Get",
               "description":"Получает ресурсы регистра сведений по указанным ключевым полям.",
               "returns":"Структура",
               "signature":{
                  "ДляПериодическогоРегистра":{
                     "СтрокаПараметров":"(Период, Отбор) : Структура",
                     "Параметры":{
                        "Период":"Дата/МоментВремени, Определяет момент времени, на который необходимо получить значения ресурсов. Если указанный момент времени не совпадает с периодом ни одной записи регистра, то будет возвращена структура, содержащая пустые значения.",
                        "Отбор":"Структура, содержащая отбор по измерениям регистра. В переданной структуре должны содержаться те измерения, по которым должны быть отфильтрованы записи. В элементе структуры задается имя и значение отбора. Должны указываться значения для всех измерений. Параметр обязателен для регистров, имеющих измерения. Структура дополнительно может иметь элементы, соответствующие разделителям регистра с уровнем разделения НезависимоИСовместно, в состав которых входит регистр. Если такой элемент структуры задан для используемого в сеансе разделителя, значение для этого элемента должно совпадать со значением разделителя, иначе будет вызвано исключение. Неиспользуемым в сеансе разделителям регистра в структуре должен соответствовать элемент с указанным значением отбора, так же, как для всех измерений, иначе будет вызвано исключение. Если параметр не указан, то отбор не используется."
                     }
                  },
                  "ДляНепериодическогоРегистра":{
                     "СтрокаПараметров":"(Отбор) : Структура",
                     "Параметры":{                     
                        "Отбор":"Структура, содержащая отбор по измерениям регистра. В переданной структуре должны содержаться те измерения, по которым должны быть отфильтрованы записи. В элементе структуры задается имя и значение отбора. Должны указываться значения для всех измерений. Параметр обязателен для регистров, имеющих измерения. Структура дополнительно может иметь элементы, соответствующие разделителям регистра с уровнем разделения НезависимоИСовместно, в состав которых входит регистр. Если такой элемент структуры задан для используемого в сеансе разделителя, значение для этого элемента должно совпадать со значением разделителя, иначе будет вызвано исключение. Неиспользуемым в сеансе разделителям регистра в структуре должен соответствовать элемент с указанным значением отбора, так же, как для всех измерений, иначе будет вызвано исключение. Если параметр не указан, то отбор не используется."
                     }
                  }
               }
            },
            "ПолучитьМакет":{
               "name":"ПолучитьМакет",
               "name_en":"GetTemplate",
               "description":"Получает макет регистра сведений.",
               "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Макет) : Объект",
                     "Параметры":{
                        "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                     }
                  }
               }
            },
            "ПолучитьПервое":{
               "name":"ПолучитьПервое",
               "name_en":"GetFirst",
               "description":"Получает значения ресурсов наиболее ранней записи регистра, соответствующей указанным периоду и значениям измерений регистра. Поиск по периоду осуществляется 'включительно', т.е. если существует запись с таким же значением одноименного свойства, то она и будет найдена.",
               "returns":"Структура",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(НачалоПериода, Отбор) : Структура",
                     "Параметры":{
                        "НачалоПериода":"Дата/МоментВремени/Граница, Определяет момент времени, начиная с которого необходимо получить значения ресурсов. Может задаваться значениями типа Дата, МоментВремени или Граница. Если параметр не указан, то будут возвращены значения ресурсов самой первой записи регистра.",
                        "Отбор":"Структура, содержащая отбор по измерениям регистра. Имя ключа структуры должно совпадать с именем измерения регистра, заданного в конфигураторе, а значение элемента структуры - задает отбираемое по данному измерению значение. Структура дополнительно может иметь элементы, соответствующие разделителям регистра с уровнем разделения НезависимоИСовместно, в состав которых входит регистр. Если такой элемент структуры задан для используемого в сеансе разделителя, значение для этого элемента должно совпадать со значением разделителя, иначе будет вызвано исключение. Если параметр не указан, то отбор не используется."
                     }
                  }               
               }
            },
            "ПолучитьПоследнее":{
               "name":"ПолучитьПоследнее",
               "name_en":"GetLast",
               "description":"Получает значения ресурсов наиболее поздней записи регистра, соответствующей указанным периоду и значениям измерений регистра.",
               "returns":"Структура",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(КонецПериода, Отбор) : Структура",
                     "Параметры":{
                        "КонецПериода":"Дата/МоментВремени/Граница, Определяет момент времени, по который необходимо получить значения ресурсов. Может задаваться значениями типа Дата, МоментВремени или Граница. Если параметр не указан, то будут возвращены значения ресурсов самой последней записи регистра.",
                        "Отбор":"Структура, содержащая отбор по измерениям регистра. Имя ключа структуры должно совпадать с именем измерения регистра, заданного в конфигураторе, а значение элемента структуры - задает отбираемое по данному измерению значение. Структура дополнительно может иметь элементы, соответствующие разделителям регистра с уровнем разделения НезависимоИСовместно, в состав которых входит регистр. Если такой элемент структуры задан для используемого в сеансе разделителя, значение для этого элемента должно совпадать со значением разделителя, иначе будет вызвано исключение. Если параметр не указан, то отбор не используется."
                     }
                  }               
               }
            },
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму регистра сведений.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },         
            "ПолучитьФормуРедактированияЗаписи":{
               "name":"ПолучитьФормуРедактированияЗаписи",
               "name_en":"GetRecordEditingForm",
               "description":"Получает форму редактирования записи регистра сведений.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПолучитьФормуСписка":{
               "name":"ПолучитьФормуСписка",
               "name_en":"GetListForm",
               "description":"Получает форму списка регистра сведений.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПустойКлюч":{
               "name":"ПустойКлюч",
               "name_en":"EmptyKey",
               "description":"Получает пустое значение ключа записи регистра сведений.",
               "returns":"РегистрСведенийКлючЗаписи"            
            },
            "СоздатьКлючЗаписи":{
               "name":"СоздатьКлючЗаписи",
               "name_en":"CreateRecordKey",
               "description":"Создает ключ записи по переданной структуре.",
               "returns":"РегистрСведенийКлючЗаписи",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ЗначенияКлюча) : РегистрСведенийКлючЗаписи",
                     "Параметры":{
                        "Форма":"Структура, содержащая значения для заполнения свойств ключа записи. Имена элементов структуры должны соответствовать именам ключевых полей."
                     }
                  }
               }
            },
            "СоздатьМенеджерЗаписи":{
               "name":"СоздатьМенеджерЗаписи",
               "name_en":"CreateRecordManager",
               "description":"Создает объект для управления записью регистра сведений.",
               "returns":"РегистрСведенийМенеджерЗаписи"            
            },
            "СоздатьНаборЗаписей":{
               "name":"СоздатьНаборЗаписей",
               "name_en":"CreateRecordSet",
               "description":"Создает набор записей регистра сведений. Набор записей создается пустым.",
               "returns":"РегистрСведенийНаборЗаписей"            
            },
            "СрезПервых":{
               "name":"СрезПервых",
               "name_en":"SliceFirst",
               "description":"Получает наиболее ранние записи регистра, соответствующие установленным в параметрах метода значениям ключевых полей. Записи подбираются для каждого сочетания из всех имеющихся значений измерений регистра.",
               "returns":"ТаблицаЗначений",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(НачалоПериода, Отбор) : ТаблицаЗначений",
                     "Параметры":{
                        "Период":"Дата/МоментВремени/Граница, Определяет момент времени, начиная с которого необходимо выбрать записи. Если параметр не указан, то будут получены записи без ограничения по времени.",
                        "Отбор":"Структура, содержащая отбор по измерениям и реквизитам регистра. Имя ключа структуры должно совпадать с именем измерения регистра, заданного в конфигураторе, а значение элемента структуры - задает отбираемое по данному измерению значение. Структура дополнительно может иметь элементы, соответствующие разделителям регистра с уровнем разделения НезависимоИСовместно, в состав которых входит регистр. Если такой элемент структуры задан для используемого в сеансе разделителя, значение для этого элемента должно совпадать со значением разделителя, иначе будет вызвано исключение. Если параметр не указан, то отбор не используется. "
                     }
                  }               
               }
            },
            "СрезПоследних":{
               "name":"СрезПоследних",
               "name_en":"SliceLast",
               "description":"Получает наиболее поздние записи регистра, соответствующие установленным в параметрах метода значениям ключевых полей. Записи подбираются для каждого сочетания из всех имеющихся значений измерений регистра.",
               "returns":"ТаблицаЗначений",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(КонецПериода, Отбор) : ТаблицаЗначений",
                     "Параметры":{
                        "КонецПериода":"Дата/МоментВремени/Граница, Определяет момент времени, заканчивая которым необходимо выбрать записи. Если параметр не указан, то будут возвращены значения ресурсов самой последней записи регистра.",
                        "Отбор":"Структура, содержащая отбор по измерениям регистра. Имя ключа структуры должно совпадать с именем измерения регистра, заданного в конфигураторе, а значение элемента структуры - задает отбираемое по данному измерению значение. Структура дополнительно может иметь элементы, соответствующие разделителям регистра с уровнем разделения НезависимоИСовместно, в состав которых входит регистр. Если такой элемент структуры задан для используемого в сеансе разделителя, значение для этого элемента должно совпадать со значением разделителя, иначе будет вызвано исключение. Если параметр не указан, то отбор не используется."
                     }
                  }               
               }
            }
         },      
         "objMethods":{
            "Записать":{
               "name":"Записать",
               "name_en":"Write",
               "description":"Записывает в базу данных запись регистра сведений с текущими значениями свойств. Если запись регистра сведений была предварительно считана из базы данных, то при выполнении метода сначала считанная запись удаляется, а затем производится запись измененной записи. С помощью параметра <Замещать> регулируется, будет ли метод замещать запись, если в момент выполнения метода существует другая (исключая считанную) запись с такими же значениями измерений регистра и с таким же периодом для периодических регистров.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Замещать?)",
                     "Параметры":{
                        "Замещать":"Булево, Определяет режим замещения существующей записи с тем же набором значений измерений регистра и с тем же периодом (для периодических регистров). Истина - если запись регистра сведений с таким набором существует, то выполняется замещение; Ложь - запись будет дописана к уже существующим в информационной базе записям."                     
                     }
                  }               
               }
            },
            "Заполнить":{
               "name":"Заполнить",
               "name_en":"Fill",
               "description":"Вызывает заполнение записи данными из какого-либо другого объекта. При этом в модуле набора записей вызывается событие ОбработкаЗаполнения, причем набор в данном случае содержит единственную запись. В обработке может размещаться алгоритм, заполняющий эту запись из переданного значения. Для заполнения может использоваться значение любого типа. Для этого типа в процедуре-обработчике события ОбработкаЗаполнения должен быть описан алгоритм заполнения.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ДанныеЗаполнения?)",
                     "Параметры":{
                        "ДанныеЗаполнения":"Произвольный, Значение, на основании которого выполняется заполнение. "
                     }
                  }               
               }
            },
            "Прочитать":{
               "name":"Прочитать",
               "name_en":"Read",
               "description":"Считывает запись регистра сведений по установленным значениям ключевых полей, включая разделители с уровнем разделения НезависимоИСовместно, в состав которых входит регистр. При этом, если указать значение разделителя, отличное от используемого в сеансе или не указать не испрользуемое в сеансе, Выбран вернет Ложь."            
            },
            "Удалить":{
               "name":"Удалить",
               "name_en":"Delete",
               "description":"Удаляет запись из набора записей с установленными значениями ключевых полей."            
            }
         }
      },
      "accumRegs":{
         "name":"РегистрыНакопления",
         "name_en":"AccumulationRegisters",
         "query_name":"РегистрНакопления",
         "query_name_en":"AccumulationRegister",
         "items":{
            "ОстаткиТоваров":{
               "type": "balance",
               "properties":{
                  "Склад":{
                     "name": "Склад"
                  },
                  "Номеклатура":{
                     "name": "Номеклатура"
                  },
                  "Характеристика":{
                     "name": "Характеристика номенклатуры"
                  }
               },
               "resources":{
                  "Количество":{
                     "name": "Количество"
                  },
                  "Себестоимость":{
                     "name": "Себестоимость"
                  }
               }
            },
            "Продажи":{
               "type": "turnovers",
               "properties":{                  
                  "Номеклатура":{
                     "name": "Номеклатура"
                  },
                  "Сделка":{
                     "name": "Сделка"
                  }
               },
               "resources":{
                  "Количество":{
                     "name": "Количество продажи"
                  },
                  "Сумма":{
                     "name": "Сумма продажи"
                  },
                  "Себестоимость":{
                     "name": "Себестоимость"
                  }
               }
            }
         },
         "methods":{
            "АгрегатыЗаполнены":{
               "name":"АгрегатыЗаполнены",
               "name_en":"AggregatesIsFilled",
               "description":"Проверяет запонение агрегатов.",
               "returns":"Булево, Истина - процесс заполнения агрегатов завершен (заполнены все агрегаты помеченные к использованию)."
            },
            "Выбрать":{
               "name":"Выбрать",
               "name_en":"Select",
               "description":"Формирует выборку записей регистра накопления.",
               "returns":"РегистрНакопленияВыборка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(НачалоИнтервала?, КонецИнтервала?, Отбор?, Порядок?) : РегистрНакопленияВыборка",
                     "Параметры":{
                        "НачалоИнтервала":"Дата/МоментВремени/Граница, Начало интервала, за который будут выдаваться записи регистра накопления. Если не указан, то будут выдаваться записи с самого ранней включительно. Может задаваться значениями типа Дата, МоментВремени или Граница.",
                        "КонецИнтервала":"Дата/МоментВремени/Граница, Конец интервала, за который будут выдаваться записи периодического регистра накопления. Если не указан, то будут выдаваться записи до самой поздней включительно. Может задаваться значениями типа Дата, МоментВремени или Граница.",
                        "Отбор":"Структура, Задает поле и значение отбора открываемой выборки. Ключ структуры описывает имя поля, а значение структуры - значение отбора по этому полю. В качестве полей для отбора могут задаваться измерения или реквизиты, для которых в конфигураторе признак индексирования установлен в значение 'Индексировать' или установлен признак 'Ведущее'. Вид сравнения может быть только Равно. Структура дополнительно может иметь элементы, соответствующие разделителям регистра с уровнем разделения НезависимоИСовместно, в состав которых входит регистр. Если такой элемент структуры задан для используемого в сеансе разделителя, значение для этого элемента должно совпадать со значением разделителя, иначе будет вызвано исключение. Если параметр не указан, то отбор не используется. Важно! Структура может содержать только один элемент.",
                        "Порядок":"Строка, Может содержать слово 'Возр' или 'Убыв', тогда стандартный порядок будет использоваться с указанным направлением.  Может содержать имя поля (реквизита или измерения, для которых указано индексирование) и слово 'Возр' или 'Убыв', тогда упорядочивание будет производится по указанному полю в указанном порядке."
                     }
                  }
               }
            },
            "ВыбратьПоРегистратору":{
               "name":"ВыбратьПоРегистратору",
               "name_en":"SelectByRecorder",
               "description":"Формирует выборку по регистратору записей регистра накопления.",
               "returns":"РегистрНакопленияВыборка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Регистратор) : РегистрНакопленияВыборка",
                     "Параметры":{
                        "Регистратор":"ДокументСсылка, Ссылка на документ, являющийся регистратором для записей"                     
                     }
                  }
               }
            },
            "ОбновитьАгрегаты":{
               "name":"ОбновитьАгрегаты",
               "name_en":"UpdateAggregates",
               "description":"Отражает в агрегатах движения, происшедшие в период от даты прошлого переноса движений, или пересчета агрегатов.",
               "returns":"Булево, Истина - заполнение происходит порциями; иначе – полностью заполняются все агрегаты, помеченные к использованию."
            },
            "Обороты":{
               "name":"Обороты",
               "name_en":"Turnovers",
               "description":"Получает обороты регистра накопления за заданный период времени. Есть возможность фильтрации по значениям измерений. Возвращает таблицу значений, содержащую колонки с измерениями, указанными в параметре Измерения, и по две колонки на каждый ресурс, указанный в параметре <Ресурсы>. Названия колонок для ресурсов формируются следующим образом: для регистров остатков: '<Имя ресурса>Приход' и '<Имя ресурса>Расход' или '<ИдентификаторРесурса>Receipt' и '<ИдентификаторРесурса>Expense'; для регистров оборотов: '<Имя ресурса>'.",
               "returns":"ТаблицаЗначений",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(НачалоПериода?, КонецПериода?, Отбор?, Измерения?, Ресурсы?) : ТаблицаЗначений",
                     "Параметры":{
                        "НачалоПериода":"Дата/МоментВремени/Граница, Момент времени, начиная с которого необходимо получить обороты. Если параметр не указан, то обороты будут получены начиная с момента ведения базы данных. Если в качестве параметра передана Дата или МоментВремени, то обороты за указанную дату (момент времени) будут включены в результирующую таблицу значений.",
                        "КонецПериода":"Дата/МоментВремени/Граница, Момент времени, определяющий конец периода за который необходимо получить обороты. Если параметр не указан, то обороты будут получены до самого позднего движения регистра. Если в качестве параметра передана Дата или МоментВремени, то обороты за указанную дату (момент времени) будут включены в результирующую таблицу значений.",
                        "Отбор":"Структура, содержащая набор значений измерений регистра, по которым надо отбирать обороты. Имя ключа структуры должно совпадать с именем измерения регистра, заданного в конфигураторе, а значение элемента структуры - задает отбираемое по данному измерению значение. Если параметр не указан, то отбор не используется.",
                        "Измерения":"Строка, Список измерений, для которых надо разворачивать обороты. Строка, содержащая имена измерений, разделенные запятыми. Если параметр не указан или указана пустая строка, то обороты будут сформированы по всем измерениям.",
                        "Ресурсы":"Строка, Список ресурсов, для которых надо получить обороты. Строка, содержащая имена ресурсов, разделенные запятыми. Если параметр не указан или указана пустая строка, то обороты будут сформированы по всем ресурсам."
                     }
                  }              
               }
            },
            "ОпределитьОптимальныеАгрегаты":{
               "name":"ОпределитьОптимальныеАгрегаты",
               "name_en":"DetermineOptimalAggregates",
               "description":"Выполняет построение оптимальных агрегатов.",
               "returns":"ИнформацияОбАгрегатах",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(МаксимальныйОтносительныйРазмер?) : ИнформацияОбАгрегатах",
                     "Параметры":{
                        "МаксимальныйОтносительныйРазмер":"Число, Максимальная сумма размеров агрегатов в % от таблицы движений. Если не указан или равен нулю, то не накладывается ограничений на размер агрегатов."
                     }
                  }              
               }
            },
            "Остатки":{
               "name":"Остатки",
               "name_en":"Balance",
               "description":"Получает остатки регистра накопления на заданный момент времени. Есть возможность фильтрации по значениям измерений, а также получения остатков в разрезе других измерений. Возвращает таблицу значений, содержащую колонки с измерениями, указанными в параметре Измерения, и колонки с ресурсами, указанными в параметре <Ресурсы>.",
               "returns":"ТаблицаЗначений",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(МоментВремени?, Отбор?, Измерения?, Ресурсы?) : ТаблицаЗначений",
                     "Параметры":{
                        "МоментВремени":"Дата/МоментВремени/Граница, Момент времени, на который необходимо получить остатки. Если параметр не указан, то будут получены текущие остатки (на максимальную дату движений регистра). Если в качестве параметра передана Дата, то остатки будут получены на начало дня, если МоментВремени - то в остатках не будут учтены движения регистра, произошедшие в тот же момент времени.",
                        "Отбор":"Структура, содержащая набор значений для измерений регистра. Имя ключа структуры должно совпадать с именем измерения регистра, заданного в конфигураторе, а значение элемента структуры - задает отбираемое по данному измерению значение. Если параметр не указан, то отбор не используется",
                        "Измерения":"Список измерений, для которых надо получить остатки. Строка, содержащая имена измерений, разделенные запятыми. Если параметр не указан или указана пустая строка, то остатки будут сформированы по всем измерениям.",
                        "Ресурсы":"Список ресурсов, для которых надо получить остатки. Строка, содержащая имена ресурсов, разделенные запятыми. Если параметр не указан или указана пустая строка, то остатки будут сформированы по всем ресурсам."
                     }
                  }              
               }
            },
            "ОчиститьАгрегаты":{
               "name":"ОчиститьАгрегаты",
               "name_en":"ClearAggregates",
               "description":"Очищает все агрегаты регистра накопления"            
            },
            "ПерестроитьИспользованиеАгрегатов":{
               "name":"ПерестроитьИспользованиеАгрегатов",
               "name_en":"RebuildAggregatesUsing",
               "description":"Перестраивает использование агрегатов. Старая сеть перестраивается, если она больше чем <МаксимальныйОтносительныйРазмер>, или удалось построить сеть с эффективностью большей как минимум на <МинимальныйЭффект>.",
               "returns":"Булево, Истина - сеть изменилась, Ложь - в противном случае. ",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(МаксимальныйОтносительныйРазмер?, МинимальныйЭффект?) : Булево",
                     "Параметры":{
                        "МаксимальныйОтносительныйРазмер":"Число, Максимальная сумма размеров агрегатов в % от таблицы движений. Если не указан или равен нулю, то нет ограничения размера агрегатов.",
                        "МинимальныйЭффект":"Число, Процент, на который необходимо увеличить эффект старой сети при перестроении, если новая сеть увеличивает эффект на <Минимальный эффект>%, то метод реально перестраивает сеть. Если не указан или равен нулю, то нет требований к эффекту."                     
                     }
                  }              
               }
            },
            "ПересчитатьИтоги":{
               "name":"ПересчитатьИтоги",
               "name_en":"RecalcTotals",
               "description":"Выполняет полный пересчет итогов регистра накопления."
            },
            "ПересчитатьИтогиЗаПериод":{
               "name":"ПересчитатьИтогиЗаПериод",
               "name_en":"RecalcTotalsForPeriod",
               "description":"Выполняет пересчет итогов регистра накопления за период.",            
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(НачалоПериода?, КонецПериода?)",
                     "Параметры":{
                        "НачалоПериода":"Дата, Начало периода пересчета. Если параметр не задан, то пересчет выполняется с самого начала.",
                        "КонецПериода":"Дата, Конец периода пересчета. Если параметр не задан, то пересчет выполняется до самого конца."
                     }
                  }              
               }
            },
            "ПересчитатьТекущиеИтоги":{
               "name":"ПересчитатьТекущиеИтоги",
               "name_en":"RecalcPresentTotals",
               "description":"Выполняет пересчет текущих итогов регистра накопления."
            },
            "ПолучитьАгрегаты":{
               "name":"ПолучитьАгрегаты",
               "name_en":"GetAgregates",
               "description":"Получает полный список агрегатов регистра.",
               "returns":"ИнформацияОбАгрегатах"
            },
            "ПолучитьИспользованиеИтогов":{
               "name":"ПолучитьИспользованиеИтогов",
               "name_en":"GetTotalsUsing",
               "description":"Получает признак использования итогов. Если использование итогов отключено, то при записи набора записей регистра не будет производиться пересчет итогов, но при этом будут не доступны виртуальные таблицы расчета остатков и оборотов. Данный режим работы регистра позволяет повысить скорость записи набора записей регистра. Он может быть полезен при массовых загрузках данных.",
               "returns":"Булево"
            },
            "ПолучитьИспользованиеТекущихИтогов":{
               "name":"ПолучитьИспользованиеТекущихИтогов",
               "name_en":"GetPresentTotalsUsing",
               "description":"Получает флаг использования текущих итогов.",
               "returns":"Булево"
            },
            "ПолучитьМакет":{
               "name":"ПолучитьМакет",
               "name_en":"GetTemplate",
               "description":"Получает макет регистра накопления.",
               "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Макет) : Объект",
                     "Параметры":{
                        "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                     }
                  }
               }
            },
            "ПолучитьПериодРассчитанныхИтогов":{
               "name":"ПолучитьПериодРассчитанныхИтогов",
               "name_en":"ПолучитьПериодРассчитанныхИтогов",
               "description":"Получает период рассчитанных итогов.",
               "returns":"Дата"
            },
            "ПолучитьРежимАгрегатов":{
               "name":"ПолучитьРежимАгрегатов",
               "name_en":"GetAggregatesMode",
               "description":"Получить режим использования агрегатов.",
               "returns":"Булево, Истина - регистр находится в режиме агрегатов."
            },
            "ПолучитьРежимРазделенияИтогов":{
               "name":"ПолучитьРежимРазделенияИтогов",
               "name_en":"GetTotalsSplittingMode",
               "description":"Получает флаг включенности механизма разделителя итогов.",
               "returns":"Булево"
            },
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму регистра накопления.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },                  
            "ПолучитьФормуСписка":{
               "name":"ПолучитьФормуСписка",
               "name_en":"GetListForm",
               "description":"Получает форму списка регистра накопления.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "СоздатьКлючЗаписи":{
               "name":"СоздатьКлючЗаписи",
               "name_en":"CreateRecordKey",
               "description":"Создает ключ записи по переданной структуре.",
               "returns":"РегистрНакопленияКлючЗаписи",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ЗначенияКлюча) : РегистрНакопленияКлючЗаписи",
                     "Параметры":{
                        "ЗначенияКлюча":"Структура, содержащая значения для заполнения свойств ключа записи. Идентификаторы элементов структуры должны соответствовать идентификаторам ключевых полей."
                     }
                  }
               }
            },
            "СоздатьНаборЗаписей":{
               "name":"СоздатьНаборЗаписей",
               "name_en":"CreateRecordSet",
               "description":"Создает набор записей регистра накопления.",
               "returns":"РегистрНакопленияНаборЗаписей"
            },
            "УстановитьИспользованиеАгрегатов":{
               "name":"УстановитьИспользованиеАгрегатов",
               "name_en":"SetAggregatesUsing",
               "description":"Устанавливает использование агрегатов. Заполнение агрегатов можно выполнить при помощи метода ОбновитьАгрегаты.",            
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Использование)",
                     "Параметры":{
                        "Использование":"Булево, Режим использования агрегатов. Истина – использование агрегатов разрешается. Ложь – все агрегаты перестают использоваться и очищаются."
                     }
                  }
               }
            },
            "УстановитьИспользованиеИтогов":{
               "name":"УстановитьИспользованиеИтогов",
               "name_en":"SetTotalsUsing",
               "description":"Устанавливает признак использования итогов. Если использование итогов отключено, то при записи набора записей регистра не будет производиться пересчет итогов, но при этом будут не доступны виртуальные таблицы расчета остатков и оборотов. Данный режим работы регистра позволяет повысить скорость записи набора записей регистра. Он может быть полезен при массовых загрузках данных. При установке признака использования итогов производится пересчет всех итогов.",            
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Признак)",
                     "Параметры":{
                        "Признак":"Булево, Признак использования итогов."
                     }
                  }
               }
            },
            "УстановитьИспользованиеТекущихИтогов":{
               "name":"УстановитьИспользованиеТекущихИтогов",
               "name_en":"SetTotalsUsing",
               "description":"Устанавливает флаг использования текущих итогов.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Флаг)",
                     "Параметры":{
                        "Флаг":"Булево, Значение флага использования актуальных итогов."
                     }
                  }
               }
            },
            "УстановитьПериодРассчитанныхИтогов":{
               "name":"УстановитьПериодРассчитанныхИтогов",
               "name_en":"SetTotalsPeriod",
               "description":"Устанавливает период, на который рассчитаны итоги. Влияет только на производительность получения остатков по данному регистру. Периодичность расчета - месяц. Период устанавливается на начало месяца. В параметре указывается конец периода по который должны быть рассчитаны итоги. Если указана дата 31.01.2000 то это значит что будут рассчитаны итоги на 01.02.2000. Для получения итогов после этой даты будут использоваться актуальные итоги.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Период)",
                     "Параметры":{
                        "Период":"Дата, Период, на который необходимо рассчитать итоги."
                     }
                  }
               }
            },
            "УстановитьРежимАгрегатов":{
               "name":"УстановитьРежимАгрегатов",
               "name_en":"SetTotalsPeriod",
               "description":"Устанавливает режим использования агрегатов. Если в составе конфигурации для регистра нет агрегатов, метод вызывает исключение. При включении режима агрегатов итоги очищаются. При выключении режима агрегатов очищаются агрегаты, а итоги пересчитываются",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(РежимАгрегатов)",
                     "Параметры":{
                        "РежимАгрегатов":"Булево, Истина - вместо итогов используются агрегаты. Ложь - используются итоги (режим соответствует поведению регистра накопления версии 1С:Предприятие 8.1)."
                     }
                  }
               }
            },
            "УстановитьРежимРазделенияИтогов":{
               "name":"УстановитьРежимРазделенияИтогов",
               "name_en":"SetTotalsSplittingMode",
               "description":"Устанавливает флаг использования механизма разделителя итогов",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Флаг)",
                     "Параметры":{
                        "Флаг":"Булево, Значение флага использования разделителя итогов. Если флаг установлен в значение Истина, то будет задействован механизм разделения итогов, который обеспечивает более высокую параллельность работы при записи в регистр. Система при одновременной записи движений несколькими сеансами не будет обновлять одни и те же записи итогов, а будет записывать изменения итогов в отдельные записи. При получении итогов эти данные складываются. Таким образом, обеспечивается и поддержание в актуальном состоянии итогов (например, для быстрого получения отчетов) и параллельность записи движений. Этот режим требует дополнительных расходов ресурсов (например, увеличивается количество данных в итоговых таблицах). Записи будут 'размножаться' только при параллельно выполняемых транзакциях. Их количество по каждой комбинации измерений будет зависеть от максимального количества одновременно выполняемых транзакций. При пересчете итогов накопленные отдельные записи сворачиваются."
                     }
                  }
               }
            }
         },
         "objMethods":{
            "Выгрузить":{
               "name":"Выгрузить",
               "name_en":"Unload",
               "description":"Создает таблицу значений и копирует в нее записи набора. Структура полученной таблицы совпадает со структурой набора ",
               "returns":"ТаблицаЗначений",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Строки?, Колонки?): ТаблицаЗначений",
                     "Параметры":{
                        "Строки":"Массив строк для выгрузки. Если не указан, выгружаются все строки набора записей. ",
                        "Колонки":"Строка, Список колонок для выгрузки в формате: 'Колонка1, Колонка2...'. Если список не задан, то будут выгружены все колонки."
                     }
                  }               
               }
            },
            "Загрузить":{
               "name":"Загрузить",
               "name_en":"Load",
               "description":"Загружает набор записей значениями из переданной таблицы значений. При этом все прежние записи набора удаляются. Заполняются значения доступных для записи свойств записей регистра накопления, имена которых совпали c именами колонок таблицы значений.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ТаблицаЗначений)",
                     "Параметры":{
                        "ТаблицаЗначений":"Таблица значений, содержащая данные для заполнения набора записей."
                     }
                  }               
               }
            },
            "Записать":{
               "name":"Записать",
               "name_en":"Write",
               "description":"Записывает в базу данных набор записей регистра накопления. В зависимости от переданного параметра может быть выполнено добавление записей или их замещение.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Замещать?)",
                     "Параметры":{
                        "Замещать":"Булево, Определяет режим замещения существующей записи в соответствии с текущими установками отбора. Истина - перед записью существующие записи будут удалены. Ложь - записи будут дописаны к уже существующим в информационной базе записям."
                     }
                  }               
               }
            },         
            "Прочитать":{
               "name":"Прочитать",
               "name_en":"Read",
               "description":"Считывает записи из базы данных по установленному отбору."
            },
            "Удалить":{
               "name":"Удалить",
               "name_en":"Delete",
               "description":"Удаляет запись из набора по указанному индексу записи или объекту записи регистра накопления.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Запись)",
                     "Параметры":{
                        "Запись":" Число/РегистрНакопленияЗапись, Индекс удаляемой записи либо сама запись. ."
                     }
                  }               
               }
            }
         }
      },
      "accountRegs":{
         "name":"РегистрыБухгалтерии",
         "name_en":"AccountingRegisters",
         "query_name":"РегистрБухгалтерии",
         "query_name_en":"AccountingRegister",
         "items":{
            "Хозрасчетный":{
               "type": "accounting",
               "dimensionCount": "3",
               "properties":{
                  "Организация":{
                     "name": "Организация"
                  },
                  "Валюта":{
                     "name": "Валюта"
                  },
                  "Подразделение":{
                     "name": "Подразделение организации"
                  }
               },
               "resources":{
                  "Количество":{
                     "name": "Количество"
                  },
                  "Сумма":{
                     "name": "Сумма"
                  },
                  "СуммаНУ":{
                     "name": "Сумма НУ"
                  }
               }
            }
         },
         "methods":{         
            "Выбрать":{
               "name":"Выбрать",
               "name_en":"Select",
               "description":"Формирует выборку записей регистра бухгалтерии. Если какая-либо граница интервала не задана, то по данной границе интервала выборка не ограничена.",
               "returns":"РегистрБухгалтерииВыборка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(НачалоИнтервала?, КонецИнтервала?, Отбор?, Порядок?) : РегистрБухгалтерииВыборка",
                     "Параметры":{
                        "НачалоИнтервала":"Дата/МоментВремени/Граница, Определяет начало интервала для выборки записей регистра.",
                        "КонецИнтервала":"Определяет конец интервала для выборки записей регистра. ",
                        "Отбор":"Структура, Задает поле и значение отбора открываемой выборки. Ключ структуры описывает имя поля, а значение структуры - значение отбора по этому полю. В качестве полей для отбора могут задаваться измерения или реквизиты, для которых в конфигураторе признак индексирования установлен в значение 'Индексировать' или установлен признак 'Ведущее'. Вид сравнения может быть только Равно. Структура дополнительно может иметь элементы, соответствующие разделителям регистра с уровнем разделения НезависимоИСовместно, в состав которых входит регистр. Если такой элемент структуры задан для используемого в сеансе разделителя, значение для этого элемента должно совпадать со значением разделителя, иначе будет вызвано исключение. Если параметр не указан, то отбор не используется. Важно! Структура может содержать только один элемент.",
                        "Порядок":"Строка, Может содержать слово 'Возр' или 'Убыв', тогда стандартный порядок будет использоваться с указанным направлением.  Может содержать имя поля (реквизита или измерения, для которых указано индексирование) и слово 'Возр' или 'Убыв', тогда упорядочивание будет производится по указанному полю в указанном порядке."
                     }
                  }
               }
            },
            "ВыбратьПоРегистратору":{
               "name":"ВыбратьПоРегистратору",
               "name_en":"SelectByRecorder",
               "description":"Формирует выборку по регистратору записей регистра бухгалтерии.",
               "returns":"РегистрБухгалтерииВыборка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Регистратор) : РегистрБухгалтерииВыборка",
                     "Параметры":{
                        "Регистратор":"ДокументСсылка, Ссылка на документ, являющийся регистратором для записей"                     
                     }
                  }
               }
            },         
            "Обороты":{
               "name":"Обороты",
               "name_en":"Turnovers",
               "description":"Получает обороты регистра накопления за заданный период времени. Есть возможность фильтрации по значениям измерений. Возвращает таблицу значений, содержащую колонки с измерениями, указанными в параметре Измерения, и по две колонки на каждый ресурс, указанный в параметре <Ресурсы>. Названия колонок для ресурсов формируются следующим образом: для регистров остатков: '<Имя ресурса>Приход' и '<Имя ресурса>Расход' или '<ИдентификаторРесурса>Receipt' и '<ИдентификаторРесурса>Expense'; для регистров оборотов: '<Имя ресурса>'.",
               "returns":"ТаблицаЗначений",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(НачалоПериода?, КонецПериода?, ВидыСубконто?, ВидыКорСубконто?, Отбор?, Измерения?, Ресурсы?) : ТаблицаЗначений",
                     "Параметры":{
                        "НачалоПериода":"Дата/МоментВремени/Граница, Момент времени, начиная с которого необходимо получить обороты. Если параметр не указан, то обороты будут получены начиная с момента ведения базы данных. Если в качестве параметра передана Дата или МоментВремени, то обороты за указанную дату (момент времени) будут включены в результирующую таблицу значений.",
                        "КонецПериода":"Дата/МоментВремени/Граница, Момент времени, определяющий конец периода за который необходимо получить обороты. Если параметр не указан, то обороты будут получены до самого позднего движения регистра. Если в качестве параметра передана Дата или МоментВремени, то обороты за указанную дату (момент времени) будут включены в результирующую таблицу значений.",
                        "ВидыСубконто":"ПланВидовХарактеристикСсылка/Массив/ФиксированныйМассив, Передается ссылка, или массив ссылок, или фиксированный массив ссылок на виды субконто. Виды субконто определяют, какие значения субконто будут доступны по именам 'Субконто1', 'Субконто2' и т.д. Кроме того, обороты будут посчитаны только по счетам, имеющим заданные виды субконто. Если виды субконто не заданы, то обращение к значениям субконто осуществляется по порядку (индексу), как они определены на соответствующем счете. Параметр не существует, если при конфигурировании для плана счетов не указаны субконто.",
                        "ВидыКорСубконто":"ПланВидовХарактеристикСсылка/Массив/ФиксированныйМассив, Передается ссылка, или массив ссылок, или фиксированный массив ссылок на виды субконто. Виды кор. субконто определяют, какие значения корреспондирующих субконто будут доступны по именам 'КорСубконто1', 'КорСубконто2' и т.д. Кроме того, обороты будут посчитаны только по кор. счетам, имеющим заданные виды кор. субконто. Если виды кор. субконто не заданы, то обращение к значениям кор. субконто осуществляется по порядку (индексу), как они определены на соответствующем счете.Важно! Имеет смысл только для регистра бухгалтерии с поддержкой корреспонденцией. Для регистра без корреспонденции параметр не существует! Параметр не существует, если при конфигурировании для плана счетов не указаны субконто.",
                        "Отбор":"Структура, Структура, содержащая набор значений измерений регистра, по которым надо отбирать обороты. Имя ключа структуры должно совпадать с именем измерения регистра, заданного в конфигураторе, а значение элемента структуры - задает отбираемое по данному измерению значение. Если параметр не указан, то отбор не используется.",
                        "Измерения":"Строка, Список измерений, для которых надо разворачивать обороты. Строка, содержащая имена измерений, разделенные запятыми. Если параметр не указан или указана пустая строка, то обороты будут сформированы по всем измерениям.",
                        "Ресурсы":"Строка, Список ресурсов, для которых надо получить обороты. Строка, содержащая имена ресурсов, разделенные запятыми. Если параметр не указан или указана пустая строка, то обороты будут сформированы по всем ресурсам."
                     }
                  }              
               }
            },
            "ОборотыДтКт":{
               "name":"ОборотыДтКт",
               "name_en":"DrCrTurnovers",
               "description":"Получает обороты по регистру бухгалтерии на заданный момент. Обороты получаются в разрезе заданных измерений и по заданным ресурсам. В измерения входят счет дебета, субконто дебета, счет кредита, субконто кредита, измерения кредита, измерения (для балансовых) и измерения дебета, измерения кредита (для не балансовых).",
               "returns":"ТаблицаЗначений",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(НачалоПериода?, КонецПериода?, ВидыСубконтоДт?, ВидыСубконтоКт?, Отбор?, Измерения?, Ресурсы?) : ТаблицаЗначений",
                     "Параметры":{
                        "НачалоПериода":"Дата/МоментВремени/Граница, Момент времени, начиная с которого необходимо получить обороты. Если параметр не указан, то обороты будут получены начиная с момента ведения базы данных. Если в качестве параметра передана Дата или МоментВремени, то обороты за указанную дату (момент времени) будут включены в результирующую таблицу значений.",
                        "КонецПериода":"Дата/МоментВремени/Граница, Момент времени, определяющий конец периода за который необходимо получить обороты. Если параметр не указан, то обороты будут получены до самого позднего движения регистра. Если в качестве параметра передана Дата или МоментВремени, то обороты за указанную дату (момент времени) будут включены в результирующую таблицу значений.",
                        "ВидыСубконтоДт":"ПланВидовХарактеристикСсылка/Массив/ФиксированныйМассив, Передается ссылка, или массив ссылок, или фиксированный массив ссылок на виды субконто. Виды субконто определяют, какие значения субконто будут доступны по именам 'СубконтоДт1', 'СубконтоДт2' и т.д. Кроме того, обороты будут посчитаны только по счетам, имеющим заданные виды субконто. Если виды субконто не заданы, то обращение к значениям субконто осуществляется по порядку (индексу), как они определены на соответствующем счете. Параметр не существует, если при конфигурировании для плана счетов не указаны субконто.",
                        "ВидыСубконтоКт":"ПланВидовХарактеристикСсылка/Массив/ФиксированныйМассив, Передается ссылка, или массив ссылок, или фиксированный массив ссылок на виды субконто. Виды субконто определяют, какие значения субконто будут доступны по именам 'СубконтоКт1', 'СубконтоКт2' и т.д. Кроме того, обороты будут посчитаны только по счетам, имеющим заданные виды субконто. Если виды субконто не заданы, то обращение к значениям субконто осуществляется по порядку (индексу), как они определены на соответствующем счете. Параметр не существует, если при конфигурировании для плана счетов не указаны субконто.",
                        "Отбор":"Структура, Структура, содержащая набор значений измерений регистра, по которым надо отбирать обороты. Имя ключа структуры должно совпадать с именем измерения регистра, заданного в конфигураторе, а значение элемента структуры - задает отбираемое по данному измерению значение. Если параметр не указан, то отбор не используется.",
                        "Измерения":"Строка, Список измерений, для которых надо разворачивать обороты. Строка, содержащая имена измерений, разделенные запятыми. Если параметр не указан или указана пустая строка, то обороты будут сформированы по всем измерениям.",
                        "Ресурсы":"Строка, Список ресурсов, для которых надо получить обороты. Строка, содержащая имена ресурсов, разделенные запятыми. Если параметр не указан или указана пустая строка, то обороты будут сформированы по всем ресурсам."
                     }
                  }              
               }
            },         
            "Остатки":{
               "name":"Остатки",
               "name_en":"Balance",
               "description":"Получает остатки по регистру бухгалтерии на заданный момент. Остатки получаются в разрезе заданных измерений и по заданным ресурсам. В измерения входят счет и субконто, зависящие от счета. Если параметр <ВидыСубконто> не задан, то обращение к субконто осуществляется по индексу в том порядке, как виды субконто определены на соответствующем счете. Если параметр <ВидыСубконто> задан, то остатки будут считаться только по счетам, у которых определены заданные виды субконто, обращение к значениям субконто осуществляется в порядке, заданном параметром <ВидыСубконто>.",
               "returns":"ТаблицаЗначений",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(МоментВремени?, ВидыСубконто?, Отбор?, Измерения?, Ресурсы?) : ТаблицаЗначений",
                     "Параметры":{
                        "МоментВремени":"Дата/МоментВремени/Граница, Момент времени, на который необходимо получить остатки. Если параметр не указан, то будут получены текущие остатки (на максимальную дату движений регистра). Если в качестве параметра передана Дата, то остатки будут получены на начало дня, если МоментВремени - то в остатках не будут учтены движения регистра, произошедшие в тот же момент времени.",
                        "ВидыСубконто":"ПланВидовХарактеристикСсылка/Массив/ФиксированныйМассив, Передается ссылка, или массив ссылок, или фиксированный массив ссылок на виды субконто. Виды субконто определяют, какие значения субконто будут доступны по именам 'Субконто1', 'Субконто2' и т.д. Кроме того, остатки будут посчитаны только по счетам, имеющим заданные виды субконто. Если виды субконто не заданы, то обращение к значениям субконто осуществляется по порядку (индексу), как они определены на соответствующем счете.Параметр не существует, если при конфигурировании для плана счетов не указаны субконто.",
                        "Отбор":"Структура, содержащая набор значений измерений регистра, по которым надо отбирать итоги. Допустимые значения ключа: Счет, Субконто<Номер>, <Имя измерения>. Если параметр не указан, то отбор не используется. ",
                        "Измерения":"Строка/Неопределено, Список измерений, для которых надо получить остатки. Строка, содержащая имена измерений, разделенные запятыми. Допустимые имена измерений: Счет, Субконто<Номер>, <Имя измерения>. Если параметр не указан или указано Неопределено, то остатки будут сформированы по всем измерениям.",
                        "Ресурсы":"Строка/Неопределено, Список ресурсов, для которых надо получить остатки. Строка, содержащая имена ресурсов, разделенные запятыми. Если параметр не указан или указано Неопределено, то остатки будут сформированы по всем ресурсам"
                     }
                  }              
               }
            },         
            "ПересчитатьИтоги":{
               "name":"ПересчитатьИтоги",
               "name_en":"RecalcTotals",
               "description":"Выполняет полный пересчет итогов регистра бухгалтерии."
            },
            "ПересчитатьИтогиЗаПериод":{
               "name":"ПересчитатьИтогиЗаПериод",
               "name_en":"RecalcTotalsForPeriod",
               "description":"Выполняет полный пересчет итогов регистра бухгалтерии.",            
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(НачалоПериода?, КонецПериода?)",
                     "Параметры":{
                        "НачалоПериода":"Дата, Начало периода пересчета. Если параметр не задан, то пересчет выполняется с самого начала.",
                        "КонецПериода":"Дата, Конец периода пересчета. Если параметр не задан, то пересчет выполняется до самого конца."
                     }
                  }              
               }
            },
            "ПересчитатьТекущиеИтоги":{
               "name":"ПересчитатьТекущиеИтоги",
               "name_en":"RecalcPresentTotals",
               "description":"Выполняет пересчет текущих итогов регистра бухгалтерии."
            },         
            "ПолучитьИспользованиеИтогов":{
               "name":"ПолучитьИспользованиеИтогов",
               "name_en":"GetTotalsUsing",
               "description":"Получает признак использования итогов. Если использование итогов отключено, то при записи набора записей регистра не будет производиться пересчет итогов, но при этом будут не доступны виртуальные таблицы расчета остатков и оборотов. Данный режим работы регистра позволяет повысить скорость записи набора записей регистра. Он может быть полезен при массовых загрузках данных.",
               "returns":"Булево"
            },
            "ПолучитьИспользованиеТекущихИтогов":{
               "name":"ПолучитьИспользованиеТекущихИтогов",
               "name_en":"GetPresentTotalsUsing",
               "description":"Получает флаг использования текущих итогов.",
               "returns":"Булево"
            },
            "ПолучитьМакет":{
               "name":"ПолучитьМакет",
               "name_en":"GetTemplate",
               "description":"Получает макет регистра бухгалтерии.",
               "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Макет) : Объект",
                     "Параметры":{
                        "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                     }
                  }
               }
            },
            "ПолучитьПериодРассчитанныхИтогов":{
               "name":"ПолучитьПериодРассчитанныхИтогов",
               "name_en":"ПолучитьПериодРассчитанныхИтогов",
               "description":"Получает период рассчитанных итогов.",
               "returns":"Дата"
            },         
            "ПолучитьРежимРазделенияИтогов":{
               "name":"ПолучитьРежимРазделенияИтогов",
               "name_en":"GetTotalsSplittingMode",
               "description":"Получает флаг включенности механизма разделителя итогов.",
               "returns":"Булево"
            },
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму регистра бухгалтерии.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },                  
            "ПолучитьФормуСписка":{
               "name":"ПолучитьФормуСписка",
               "name_en":"GetListForm",
               "description":"Получает форму списка регистра бухгалтерии.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "СоздатьКлючЗаписи":{
               "name":"СоздатьКлючЗаписи",
               "name_en":"CreateRecordKey",
               "description":"Создает ключ записи по переданной структуре.",
               "returns":"РегистрБухгалтерииКлючЗаписи",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ЗначенияКлюча) : РегистрБухгалтерииКлючЗаписи",
                     "Параметры":{
                        "ЗначенияКлюча":"Структура, содержащая значения для заполнения свойств ключа записи. Идентификаторы элементов структуры должны соответствовать идентификаторам ключевых полей."
                     }
                  }
               }
            },
            "СоздатьНаборЗаписей":{
               "name":"СоздатьНаборЗаписей",
               "name_en":"CreateRecordSet",
               "description":"Создает набор записей регистра бухгалтерии.",
               "returns":"РегистрБухгалтерииНаборЗаписей"
            },         
            "УстановитьИспользованиеИтогов":{
               "name":"УстановитьИспользованиеИтогов",
               "name_en":"SetTotalsUsing",
               "description":"Устанавливает признак использования итогов. Если использование итогов отключено, то при записи набора записей регистра не будет производиться пересчет итогов, но при этом будут не доступны виртуальные таблицы расчета остатков и оборотов. Данный режим работы регистра позволяет повысить скорость записи набора записей регистра. Он может быть полезен при массовых загрузках данных. При установке признака использования итогов производится пересчет всех итогов.",            
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Признак)",
                     "Параметры":{
                        "Признак":"Булево, Признак использования итогов."
                     }
                  }
               }
            },
            "УстановитьИспользованиеТекущихИтогов":{
               "name":"УстановитьИспользованиеТекущихИтогов",
               "name_en":"SetTotalsUsing",
               "description":"Устанавливает флаг использования текущих итогов.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Флаг)",
                     "Параметры":{
                        "Флаг":"Булево, Значение флага использования актуальных итогов."
                     }
                  }
               }
            },
            "УстановитьПериодРассчитанныхИтогов":{
               "name":"УстановитьПериодРассчитанныхИтогов",
               "name_en":"SetTotalsPeriod",
               "description":"Устанавливает период, на который рассчитаны итоги. Влияет только на производительность получения остатков по данному регистру. Периодичность расчета - месяц. Период устанавливается на начало месяца. В параметре указывается конец периода по который должны быть рассчитаны итоги. Если указана дата 31.01.2000 то это значит что будут рассчитаны итоги на 01.02.2000. Для получения итогов после этой даты будут использоваться актуальные итоги.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Период)",
                     "Параметры":{
                        "Период":"Дата, Период, на который необходимо рассчитать итоги."
                     }
                  }
               }
            },         
            "УстановитьРежимРазделенияИтогов":{
               "name":"УстановитьРежимРазделенияИтогов",
               "name_en":"SetTotalsSplittingMode",
               "description":"Устанавливает флаг использования механизма разделителя итогов",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Флаг)",
                     "Параметры":{
                        "Флаг":"Булево, Значение флага использования разделителя итогов. Если флаг установлен в значение Истина, то будет задействован механизм разделения итогов, который обеспечивает более высокую параллельность работы при записи в регистр. Система при одновременной записи движений несколькими сеансами не будет обновлять одни и те же записи итогов, а будет записывать изменения итогов в отдельные записи. При получении итогов эти данные складываются. Таким образом, обеспечивается и поддержание в актуальном состоянии итогов (например, для быстрого получения отчетов) и параллельность записи движений. Этот режим требует дополнительных расходов ресурсов (например, увеличивается количество данных в итоговых таблицах). Записи будут 'размножаться' только при параллельно выполняемых транзакциях. Их количество по каждой комбинации измерений будет зависеть от максимального количества одновременно выполняемых транзакций. При пересчете итогов накопленные отдельные записи сворачиваются."
                     }
                  }
               }
            }
         },
         "objMethods":{
            "Выгрузить":{
               "name":"Выгрузить",
               "name_en":"Unload",
               "description":"Создает таблицу значений и копирует в нее записи набора. Структура полученной таблицы совпадает со структурой набора записей. Значения субконто выгружаются вместе с видами субконто. Для каждого субконто создается пара колонок с идентификаторами вида ВидСубконто<Номер>, Субконто<Номер>, для регистра не поддерживающего корреспонденцию, и ВидСубконтоДт<Номер>, СубконтоДт<Номер>, ВидСубконтоКт<Номер>, СубконтоКт<Номер>, для регистра поддерживающего корреспонденцию. При этом номера <Номер> могут не совпадать с номерами видов субконто на соответствующем счете.",
               "returns":"ТаблицаЗначений",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Строки?, Колонки?): ТаблицаЗначений",
                     "Параметры":{
                        "Строки":"Массив строк для выгрузки. Если не указан, выгружаются все строки набора записей. ",
                        "Колонки":"Строка, Список колонок для выгрузки в формате: 'Колонка1, Колонка2...'. Если список не задан, то будут выгружены все колонки."
                     }
                  }               
               }
            },
            "Загрузить":{
               "name":"Загрузить",
               "name_en":"Load",
               "description":"Загружает набор записей значениями из переданной таблицы значений. При этом все прежние записи набора удаляются. Заполняются значения доступных для записи свойств записей регистра бухгалтерии, имена которых совпали c именами колонок таблицы значений. Для каждого субконто создается пара колонок с идентификаторами вида ВидСубконто<Номер>, Субконто<Номер>, для регистра не поддерживающего корреспонденцию, и ВидСубконтоДт<Номер>, СубконтоДт<Номер>, ВидСубконтоКт<Номер>, СубконтоКт<Номер>, для регистра поддерживающего корреспонденцию. При этом номера <Номер> могут не совпадать с номерами видов субконто на соответствующем счете.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ТаблицаЗначений)",
                     "Параметры":{
                        "ТаблицаЗначений":"Таблица значений, содержащая данные для заполнения набора записей."
                     }
                  }               
               }
            },
            "Записать":{
               "name":"Записать",
               "name_en":"Write",
               "description":"Записывает в базу данных набор записей регистра бухгалтерии. В зависимости от переданного параметра может быть выполнено добавление записей или их замещение.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Замещать?)",
                     "Параметры":{
                        "Замещать":"Булево, Определяет режим замещения существующей записи в соответствии с текущими установками отбора. Истина - перед записью существующие записи будут удалены. Ложь - записи будут дописаны к уже существующим в информационной базе записям."
                     }
                  }               
               }
            },         
            "Прочитать":{
               "name":"Прочитать",
               "name_en":"Read",
               "description":"Считывает записи из базы данных по установленному отбору."
            },
            "Удалить":{
               "name":"Удалить",
               "name_en":"Delete",
               "description":"Удаляет запись из набора по указанному индексу записи или объекту записи регистра накопления.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Запись)",
                     "Параметры":{
                        "Запись":" Число/РегистрБухгалтерииЗапись, Индекс удаляемой записи либо сама запись. ."
                     }
                  }               
               }
            }
         }
      },
      "dataProc":{
         "name":"Обработки",
         "name_en":"DataProcessors",
         "items":{
            "ТестовыйЭлемент":{
               "properties":{
                  "Реквизит1":{
                     "name": "Реквизит №1"
                  },
                  "Реквизит2":{
                     "name": "Реквизит №2"
                  },
                  "Реквизит3":{
                     "name": "Реквизит №3"
                  }
               }
            }
         },
         "methods":{
            "ПолучитьМакет":{
               "name":"ПолучитьМакет",
               "name_en":"GetTemplate",
               "description":"Получает макет обработки.",
               "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Макет) : Объект",
                     "Параметры":{
                        "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                     }
                  }
               }
            },         
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму обработки.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "Создать":{
               "name":"Создать",
               "name_en":"Create",
               "description":"Создает новый экземпляр обработки.",
               "returns":"ОбработкаОбъект"            
            }
         }
      },
      "reports":{
         "name":"Отчеты",
         "name_en":"Reports",
         "items":{
            "ТестовыйЭлемент":{
               "properties":{
                  "Реквизит1":{
                     "name": "Реквизит №1"
                  },
                  "Реквизит2":{
                     "name": "Реквизит №2"
                  },
                  "Реквизит3":{
                     "name": "Реквизит №3"
                  }
               }
            }
         },
         "methods":{
            "ПолучитьМакет":{
               "name":"ПолучитьМакет",
               "name_en":"GetTemplate",
               "description":"Получает макет отчета.",
               "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Макет) : Объект",
                     "Параметры":{
                        "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                     }
                  }
               }
            },         
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму отчета.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "Создать":{
               "name":"Создать",
               "name_en":"Create",
               "description":"Создает новый экземпляр отчета.",
               "returns":"ОтчетОбъект"
            }
         }
      },
      "enums":{
         "name":"Перечисления",
         "name_en":"Enums",
         "query_name":"Перечисленик",
         "query_name_en":"Enum",
         "items":{
            "ТестовыйЭлемент":{
               "properties":{
                  "Реквизит1":{
                     "name": "Реквизит №1"
                  },
                  "Реквизит2":{
                     "name": "Реквизит №2"
                  },
                  "Реквизит3":{
                     "name": "Реквизит №3"
                  }
               }
            }
         }      
      },
      "commonModules": {
         "items":{
            "ОбщийМодульНомер1":{},
            "ОбщийМодульНомер2":{}
         }
      },      
      "сhartsOfAccounts": {
         "name":"ПланыСчетов",
         "name_en":"ChartsOfAccounts",
         "query_name":"ПланСчетов",
         "query_name_en":"ChartOfAccounts",
         "items":{
            "Хозрасчетный":{
               "properties":{
                  "Реквизит1":{
                     "ЗапретитьИспользоватьВПроводках": "Запретить использование в проводках"
                  },
                  "Реквизит2":{
                     "КодБыстрогоВыбора": "Код быстрого выбора"
                  },
                  "Реквизит3":{
                     "Валютный": "Валютный счет"                  
                  }                  
               }
            }
         },
         "methods":{
            "Выбрать":{
               "name":"Выбрать",
               "name_en":"Select",
               "description":"Формирует выборку элементов плана счетов по заданным условиям.",
               "returns":"ПланСчетовВыборка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Родитель?, Отбор?, Порядок?) : ПланСчетовВыборка",
                     "Параметры":{
                        "Родитель":"ПланСчетовСсылка, Отбор по родителю. Если параметр не задан, то отбор по родителю не производится. ",
                        "Отбор":"Структура, Задает поле и значение отбора открываемой выборки. Ключ структуры описывает имя поля, а значение структуры - значение отбора по этому полю. В качестве полей для отбора могут задаваться только поля 'Код', 'Наименование' и реквизиты счета для которых в конфигураторе признак индексирования установлен в значение 'Индексировать' или в значение 'Индексировать с доп. упорядоч.'. Важно! Структура может содержать только один элемент. Если параметр не указан, то отбор не используется. ",
                        "Порядок":"Строка с именем реквизита счета, определяющая упорядочивание элементов в выборке. Может быть указано 'Код', 'Наименование' или имя одного из реквизитов примитивного типа (Число, Строка, Дата, Булево), для которого установлен признак 'Индексирование' в значение 'Индексировать' или в 'Индексировать с дополнительным упорядочиванием' в конфигураторе. После имени реквизита через пробел может быть указано направление сортировки. Направление определяется: 'Убыв' ('Desc') - упорядочивать по убыванию; 'Возр' ('Asc') - упорядочивать по возрастанию. По умолчанию сортировка производится по возрастанию. Если параметр не указан, то порядок определяется основным представлением счета."
                     }
                  }
               }
            },
            "ВыбратьИерархически":{
               "name":"ВыбратьИерархически",
               "name_en":"SelectHierarchically",
               "description":"Формирует иерархическую выборку элементов справочника по заданным условиям. При иерархической выборке для каждого элемента сначала выбираются элементы, для которых он является родителем, а затем уже выбираются элементы следующего уровня.",
               "returns":"ПланСчетовВыборка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Родитель?, Отбор?, Порядок?) : ПланСчетовВыборка",
                     "Параметры":{
                        "Родитель":"ПланСчетовСсылка, Отбор по родителю. Если параметр не задан, то отбор по родителю не производится. ",
                        "Отбор":"Структура, Задает поле и значение отбора открываемой выборки. Ключ структуры описывает имя поля, а значение структуры - значение отбора по этому полю. В качестве полей для отбора могут задаваться только поля 'Код', 'Наименование' и реквизиты счета для которых в конфигураторе признак индексирования установлен в значение 'Индексировать' или в значение 'Индексировать с доп. упорядоч.'. Важно! Структура может содержать только один элемент. Если параметр не указан, то отбор не используется. ",
                        "Порядок":"Строка с именем реквизита счета, определяющая упорядочивание элементов в выборке. Может быть указано 'Код', 'Наименование' или имя одного из реквизитов примитивного типа (Число, Строка, Дата, Булево), для которого установлен признак 'Индексирование' в значение 'Индексировать' или в 'Индексировать с дополнительным упорядочиванием' в конфигураторе. После имени реквизита через пробел может быть указано направление сортировки. Направление определяется: 'Убыв' ('Desc') - упорядочивать по убыванию; 'Возр' ('Asc') - упорядочивать по возрастанию. По умолчанию сортировка производится по возрастанию. Если параметр не указан, то порядок определяется основным представлением счета."
                     }
                  }
               }
            },
            "НайтиПоКоду":{
               "name":"НайтиПоКоду",
               "name_en":"FindByCode",
               "description":"Осуществляет поиск элемента по его коду.",
               "returns":"ПланСчетовСсылка; Неопределено",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Код, Родитель) : ПланСчетовСсылка; Неопределено",
                     "Параметры":{
                        "Код":"Число/Строка, Искомый код",                        
                        "Родитель":"ПланСчетовСсылка, Родитель, в пределах которого нужно выполнять поиск. Если не указан, то во всем плане счетов. "
                     }
                  }
               }
            },
            "НайтиПоНаименованию":{
               "name":"НайтиПоНаименованию",
               "name_en":"FindByDescription",
               "description":"Осуществляет поиск элемента по его наименованию.",
               "returns":"ПланСчетовСсылка; Неопределено",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Наименование, ТочноеСоответствие?, Родитель?) : ПланСчетовСсылка; Неопределено",
                     "Параметры":{
                        "Наименование":"Строка, содержащая искомое наименование",
                        "ТочноеСоответствие":"Определяет режим поиска по полному соответствию. Поиск будет успешным, если строка поиска: в случае значения параметра Ложь - будет соответствовать левой части наименования; в случае значения параметра Истина - будет полностью совпадать с наименованием (за исключением 'хвостовых'' пробелов в наименовании).",
                        "Родитель":"ПланСчетовСсылка, Родитель, в пределах которого нужно выполнять поиск. Если не указан, то поиск будет проводиться во всем плане счетов."                        
                     }
                  }
               }
            },
            "НайтиПоРеквизиту":{
               "name":"НайтиПоРеквизиту",
               "name_en":"FindByAttribute",
               "description":"Осуществляет поиск элемента по значению реквизита.",
               "returns":"ПланСчетовСсылка; Неопределено",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ИмяРеквизита, ЗначениеРеквизита, Родитель?, Владелец?) : ПланСчетовСсылка; Неопределено",
                     "Параметры":{
                        "ИмяРеквизита":"Имя реквизита, как он задан в конфигураторе, по значению которого осуществляется поиск. Тип значения произвольный, кроме ХранилищеЗначения и строк произвольной длины.",
                        "ЗначениеРеквизита":"Значение реквизита, по которому должен выполняться поиск. ",
                        "Родитель":"ПланСчетовСсылка, Родитель, в пределах которого нужно выполнять поиск. Если не указан, то поиск будет проводиться во всем плане счетов."
                     }
                  }
               }
            },
            "ПолучитьДанныеВыбора":{
               "name":"ПолучитьДанныеВыбора",
               "name_en":"GetChoiceData",
               "description":"Формирует список значений данных выбора при вводе по строке, автоподборе текста и быстром выборе.",
               "returns":"СписокЗначений",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Параметры) : СписокЗначений",
                     "Параметры":{
                        "Параметры":"Содержит параметры для формирования списка значений: Структура, в которой обязательно должны содержаться следующие ключи:  Отбор (Filter) - отбор, используемый для поиска данных, тип Структура; значения элементов отбора могут иметь тип Массив или иной тип, не являющийся коллекцией; для типа Массив сравнение выполняется с видом сравнения ВСписке, иначе вид сравнения Равно;  СтрокаПоиска (SearchString) - содержит строку, используемую при поиске данных; для быстрого выбора содержит значение Неопределено;  ВыборГруппИЭлементов (ChoiceFoldersAndItems) - указывается использование групп и элементов (только для иерархических данных); тип ИспользованиеГруппИЭлементов."
                     }
                  }
               }
            },
            "ПолучитьИмяПредопределенного":{
               "name":"ПолучитьИмяПредопределенного",
               "name_en":"GetPredefinedItemName",
               "description":"Получает имя предопределенного элемента. Если данный элемент не является предопределенным, то возвращается пустая строка.",
               "returns":"Строка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Ссылка) : Строка",
                     "Параметры":{
                        "Ссылка":"Ссылка на элемент, имя которого требуется получить. "
                     }
                  }
               }
            },
            "ПолучитьИнициализациюПредопределенныхДанных":{
               "name":"ПолучитьИнициализациюПредопределенныхДанных",
               "name_en":"GetPredefinedDataInitialization",
               "description":"Получает признак того, что предопределенные данные области инициализированы.",
               "returns":"Булево",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Область) : Булево",
                     "Параметры":{
                        "Область":"Соответствие, Данный параметр позволяет задать область объекта, в которой необходимо получить признак проинициализированности. Область описывается соответствием: разделитель - значение. Могут быть использованы только разделители, разделяющие данные в режиме НезависимоИСовместно. Ключом соответствия может быть объект метаданных или имя разделителя. Если разделители, переданные в этом параметре, установлены и используются в сеансе, то они игнорируются. Значение по умолчанию: Неопределено."
                     }
                  }
               }
            },
            "ПолучитьМакет":{
               "name":"ПолучитьМакет",
               "name_en":"GetTemplate",
               "description":"Получает макет счета.",
               "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Макет) : Объект",
                     "Параметры":{
                        "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                     }
                  }
               }
            },
            "ПолучитьОбновлениеПредопределенныхДанных":{
               "name":"ПолучитьОбновлениеПредопределенныхДанных",
               "name_en":"GetPredefinedDataUpdate",
               "description":"Получает текущее значение режима обновления предопределенных элементов. Вычисляется из значений, установленных в метаданных и в данных.",
               "returns":"ОбновлениеПредопределенныхДанных"               
            },
            "ПолучитьСсылку":{
               "name":"ПолучитьСсылку",
               "name_en":"GetRef",
               "description":"Формирует ссылку из значения типа УникальныйИдентификатор. Данный уникальный идентификатор может быть в дальнейшем получен из ссылки методом УникальныйИдентификатор.",
               "returns":"ПланСчетовСсылка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(УникальныйИдентификатор) : ПланСчетовСсылка",
                     "Параметры":{
                        "УникальныйИдентификатор":"Уникальный идентификатор, из которого будет формироваться ссылка."
                     }
                  }
               }
            },
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму счета. Если получаемая форма - форма для редактирования элемента счета то будет получена форма нового элемента или группы.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПолучитьФормуВыбора":{
               "name":"ПолучитьФормуВыбора",
               "name_en":"GetChoiceForm",
               "description":"Получает форму списка для выбора элементов счета.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },            
            "ПолучитьФормуНовогоСчета":{
               "name":"ПолучитьФормуНовогоСчета",
               "name_en":"GetNewAccountForm",
               "description":"Получает форму нового элемента.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },            
            "ПолучитьФормуСписка":{
               "name":"ПолучитьФормуСписка",
               "name_en":"GetListForm",
               "description":"Получает форму списка элементов счета.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПустаяСсылка":{
               "name":"ПустаяСсылка",
               "name_en":"EmptyRef",
               "description":"Получает пустое значение ссылки на справочник данного вида.",
               "returns":"СправочникСсылка"
            },            
            "СоздатьСчет":{
               "name":"СоздатьСчет",
               "name_en":"CreateAccount",
               "description":"Создает новый счет",
               "returns":"ПланСчетовОбъект"
            },
            "УстановитьИнициализациюПредопределенныхДанных":{
               "name":"УстановитьИнициализациюПредопределенныхДанных",
               "name_en":"SetPredefinedDataInitialization",
               "description":"Устанавливает признак инициализации предопределенных данных области. Если значение параметра Инициализированы = Ложь, то предопределенные данные должны фактически отсутствовать.",               
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Область?, Инициализированы?) ",
                     "Параметры":{
                        "Область":"Соответствие, Данный параметр позволяет задать область объекта, в которой необходимо изменить признак проинициализированности. Область описывается соответствием: разделитель - значение. Могут быть использованы только разделители, разделяющие данные в режиме НезависимоИСовместно. Ключом соответствия может быть объект метаданных или имя разделителя. Если разделители, переданные в этом параметре, установлены и используются в сеансе, то они игнорируются. Значение по умолчанию: Неопределено. ",
                        "Инициализированы":"Булево, Указывает, инициализированы ли предопределенные данные в области или нет."
                     }
                  }
               }
            },
            "УстановитьОбновлениеПредопределенныхДанных":{
               "name":"УстановитьОбновлениеПредопределенныхДанных",
               "name_en":"SetPredefinedDataUpdate",
               "description":"Устанавливает режим обновления предопределенных элементов в данных. Для выполнения требуются права администратора информационной базы.",               
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ОбновлениеПредопределенных?) ",
                     "Параметры":{
                        "ОбновлениеПредопределенных":"ОбновлениеПредопределенныхДанных, Режим обновления предопределенных данных объекта метаданных. Значение по умолчанию: Автоматически."
                     }
                  }
               }
            }

         },
         "objMethods":{
            "Заблокирован":{
               "name":"Заблокирован",
               "name_en":"IsLocked",
               "description":"Определяет, заблокирован ли элемент данным объектом.",
               "returns":"Булево, Истина - элемент заблокирован; Ложь - в противном случае."
            },
            "Заблокировать":{
               "name":"Заблокировать",
               "name_en":"Lock",
               "description":"Выполняет блокировку объекта от изменения другими режимами или пользователями."
            },
            "Записать":{
               "name":"Записать",
               "name_en":"Write",
               "description":"Записывает счет в базу данных."
            },
            "Заполнить":{
               "name":"Заполнить",
               "name_en":"Fill",
               "description":"Заполняет данные элемента данными из другого объекта. Инициирует событие ОбработкаЗаполнения и вызов его процедуры-обработчика в модуле плана счетов. В ней может размещаться алгоритм, заполняющий данные элемента из переданного значения.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ДанныеЗаполнения) ",
                     "Параметры":{
                        "ДанныеЗаполнения":"Произвольный, Значение, на основании которого выполняется заполнение счета."
                     }
                  }
               }
            },
            "Метаданные":{
               "name":"Метаданные",
               "name_en":"Metadata",               
               "description":"Предоставляет доступ к объекту описания метаданных плана счетов. Другой путь получения того же значения - через свойство глобального контекста Метаданные. Например: Метаданные.ПланыСчетов.Основной.",
               "returns":"ОбъектМетаданных"               
            },
            "Модифицированность":{
               "name":"Модифицированность",
               "name_en":"Modified",               
               "description":"Определяет, был ли изменен объект после считывания из базы данных.",
               "returns":"Истина - объект изменен; Ложь - в противном случае."
            },
            "ПолучитьМакет":{
               "name":"ПолучитьМакет",
               "name_en":"GetTemplate",
               "description":"Получает макет счета.",
               "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Макет) : Объект",
                     "Параметры":{
                        "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                     }
                  }
               }
            },
            "ПолучитьПорядокКода":{
               "name":"ПолучитьПорядокКода",
               "name_en":"GetCodeOrder",
               "description":"Преобразует код счета в соответствии с маской счета. Если код счета имеет меньшую разрядность, то добавляются пробелы. Числовые фрагменты кода прижимаются вправо.Например, для счета '41.1' при маске '@@@.@@@.@@' метод возвращает строку ' 41. 1'.",
               "returns":"Строка"               
            },
            "ПолучитьСсылкуНового":{
               "name":"ПолучитьСсылкуНового",
               "name_en":"GetNewObjectRef",
               "description":"Позволяет для нового (созданного и еще не записанного) объекта получить ранее установленное методом УстановитьСсылкуНового значение ссылки.",
               "returns":"ПланСчетовСсылка"               
            },
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму элемента плана счетов, которая содержит данный объект встроенного языка.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПринадлежитЭлементу":{
               "name":"ПринадлежитЭлементу",
               "name_en":"BelongsToItem",
               "description":"Определяет подчиненность счета другому счету (элементу) с учетом всех уровней иерархии.",
               "returns":"Булево, Истина - счет подчинен другому счету; Ложь - в противном случае. Если в качестве параметра указать сам счет, то Ложь.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Элемент) : Булево",
                     "Параметры":{
                        "Элемент":"ПланСчетовСсылка, Счет, для которого определяется принадлежность. "
                     }
                  }
               }
            },
            "ПроверитьЗаполнение":{
               "name":"ПроверитьЗаполнение",
               "name_en":"CheckFilling",
               "description":"Проверяет заполнение реквизитов. Для реквизитов, у которых при конфигурировании свойство 'Проверка заполнения' установлено в значение 'Показывать ошибку' и реквизит не заполнен, будет сформировано сообщение об ошибке.",
               "returns":"Булево, Истина - ошибок не обнаружено, Ложь - в противном случае."               
            },
            "Прочитать":{
               "name":"Прочитать",
               "name_en":"Read",
               "description":"Считывает данные счета из базы данных."               
            },
            "Разблокировать":{
               "name":"Разблокировать",
               "name_en":"Unlock",
               "description":"Выполняет разблокировку счета, если он заблокирован данным объектом."               
            },
            "Скопировать":{
               "name":"Скопировать",
               "name_en":"Copy",
               "description":"Создает новый счет копированием существующего.",
               "returns":"ПланСчетовОбъект"
            },
            "Удалить":{
               "name":"Удалить",
               "name_en":"Delete",
               "description":"Удаляет элемент плана счетов из базы данных. Важно! В отличие от метода УстановитьПометкуУдаления, данный метод производит непосредственное удаление элемента плана счетов без возможности восстановления и без проверки ссылочной целостности. Использовать данный метод нужно крайне осмотрительно."               
            },
            "Уровень":{
               "name":"Уровень",
               "name_en":"Level",
               "description":"Получает уровень счета.",
               "returns":"Число"
            },
            "УстановитьПометкуУдаления":{
               "name":"УстановитьПометкуУдаления",
               "name_en":"SetDeletionMark",
               "description":"Устанавливает/снимет пометку на удаление. Объект при этом не удаляется из базы данных. Окончательное удаление помеченных счетов происходит при удалении помеченных объектов.",               
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ПометкаУдаления, ВключаяПодчиненные?)",
                     "Параметры":{
                        "ПометкаУдаления":"Булево, Признак установки / снятие пометки на удаление. Истина - пометка будет установлена; Ложь - пометка будет снята.",
                        "ВключаяПодчиненные":"Булево, Если параметр установлен в Истина, то будут помечены на удаление, кроме данного элемента, все его подчиненные элементы в данном счете и во всех подчиненных счетах. Если параметр установлен в Ложь, то будет помечен на удаление только данный элемент."
                     }
                  }
               }
            },
            "УстановитьСсылкуНового":{
               "name":"УстановитьСсылкуНового",
               "name_en":"SetNewObjectRef",
               "description":"Устанавливает значение для нового (созданного и еще не записанного) объекта, которое будет назначено при записи в качестве ссылки. Значение не может равняться ссылке какого-либо из имеющихся в базе данных объекта данного типа. Уникальность ссылки проверяется при записи объекта.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Ссылка)",
                     "Параметры":{
                        "Ссылка":"ПланСчетовСсылка, Ссылка, которая будет назначена при записи нового объекта. "
                     }
                  }
               }
            },
            "ЭтоНовый":{
               "name":"ЭтоНовый",
               "name_en":"IsNew",
               "description":"Определяет, записан ли элемент в базу данных.",
               "returns":"Булево, Истина - изменяется еще ни разу не записанный элемент; Ложь - элемент уже записан."
            }            
         },
         "refMethods":{               
            "Метаданные":{
               "name":"Метаданные",
               "name_en":"Metadata",               
               "description":"Предоставляет доступ к объекту описания метаданных счета. Другой путь получения того же значения - через свойство глобального контекста Метаданные. Например: Метаданные.ПланыСчетов.Хозрасчетный.",
               "returns":"ОбъектМетаданных"               
            },               
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму счета, на который указывает ссылка.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },                           
            "Скопировать":{
               "name":"Скопировать",
               "name_en":"Copy",
               "description":"Создает новый счет копированием существующего",
               "returns":"ПланСчетовОбъект"
            },                           
            "ПолучитьОбъект":{
               "name":"ПолучитьОбъект",
               "name_en":"GetObject",
               "description":"Получает по ссылке объект, предназначенный для модификации докумнгьа.",
               "returns":"ПланСчетовОбъект/Неопределено, Неопределено - объекта в базе нет (например, при обмене данными или после непосредственного удаления объекта, на который есть ссылки)."
            },
            "Пустая":{
               "name":"Пустая",
               "name_en":"GetObject",
               "description":"Определяет, является ли ссылка пустой или нет.",
               "returns":"Булево, Истина - ссылка не указывает ни на какой объект (пустая ссылка); Ложь - в противном случае."
            },    
            "Уровень":{
               "name":"Уровень",
               "name_en":"Level",
               "description":"Получает уровень счета.",
               "returns":"Число"
            },        
            "УникальныйИдентификатор":{
               "name":"УникальныйИдентификатор",
               "name_en":"UUID",
               "description":"Получает уникальный идентификатор ссылки. Ссылка может быть получена из уникального идентификатора с помощью метода менеджера ПолучитьСсылку.",
               "returns":"УникальныйИдентификатор"
            }
         }
      },
      "businessProcesses": {
         "name":"БизнесПроцессы",
         "name_en":"BusinessProcesses",
         "query_name":"БизнесПроцесс",
         "query_name_en":"BusinessProcess",
         "items":{
            "ВыполнениеЗаказа":{
               "Реквизит1":{
                  "name": "Реквизит №1"
               },
               "Реквизит2":{
                  "name": "Реквизит №2"
               },
               "Реквизит3":{
                  "name": "Реквизит №3"
               }
            }
         },
         "methods":{
            "Выбрать":{
               "name":"Выбрать",
               "name_en":"Select",
               "description":"Формирует выборку бизнес-процессов за определенный период. Получаемая выборка может быть упорядочена по реквизитам бизнес-процесса.",
               "returns":"БизнесПроцессВыборка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ДатаНачала?, ДатаОкончания?, Отбор?, Порядок?) : БизнесПроцессВыборка",
                     "Параметры":{
                        "ДатаНачала":"Дата, Дата и время начала периода выборки бизнес-процессов. Если параметр не указан, выбираются все бизнес-процессы, начиная с самого первого бизнес-процесса в базе данных. Значение по умолчанию: Пустая дата. ",
                        "ДатаОкончания":"Дата, Дата окончания периода выбираемых бизнес-процессов. Если параметр не указан, то выбираются все бизнес-процессы, заканчивая самым последним бизнес-процессом в базе данных. Значение по умолчанию: Пустая дата. ",
                        "Отбор":"Структура, Задает поле и значение отбора открываемой выборки. Ключ структуры описывает имя поля, а значение структуры - значение отбора по этому полю. В качестве полей для отбора могут задаваться только поля Дата и реквизиты бизнес-процесса, для которых в конфигураторе признак индексирования установлен в значение 'Индексировать' или в значение 'Индексировать с доп. упорядочиванием'.  Важно! Структура может содержать только один элемент. Если параметр не указан, то отбор не используется. ",
                        "Порядок":"Строка с именем реквизита бизнес-процесса, определяющая упорядочивание экземпляров в выборке. Может быть указано поле 'Дата' или имя реквизита бизнес-процесса, для которого признак индексирования в конфигураторе установлен в значения 'Индексировать' или 'Индексировать с доп. упорядочиванием'. После указания имени через пробел может быть указано направление сортировки. Направление определяется: 'Убыв' ('Desc') - упорядочивать по убыванию, и 'Возр' ('Asc') - упорядочивать по возрастанию. По умолчанию выборка упорядочивается по возрастанию. Если параметр не задан, выборка упорядочивается по хронологии бизнес-процессов."
                     }
                  }
               }
            },
            "НайтиПоНомеру":{
               "name":"НайтиПоНомеру",
               "name_en":"FindByNumber",
               "description":"Осуществляет поиск бизнес-процесса по номеру.",
               "returns":"БизнесПроцессСсылка; Неопределено.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(НомерБизнесПроцесса) : БизнесПроцессСсылка; Неопределено",
                     "Параметры":{
                        "НомерБизнесПроцесса":"Число/Строка, Номер искомого документа. Тип передаваемого значения зависит от установки в конфигураторе представления номера бизнес-процесса"
                     }
                  },
                  "СНумерациейВПределахПериода":{
                     "СтрокаПараметров":"(НомерБизнесПроцесса, ДатаИнтервала) : БизнесПроцессСсылка; Неопределено",
                     "Параметры":{
                        "НомерБизнесПроцесса":"Число/Строка, Номер искомого документа. Тип передаваемого значения зависит от установки в конфигураторе представления номера бизнес-процесса",
                        "ДатаИнтервала":"Дата из интервала, в котором проводится поиск по номеру. Сам интервал определяется как период уникальности номеров бизнес-процесса, в который входит указанная дата. Например, если номера бизнес-процессов уникальны в пределах месяца и задана дата 10 декабря 2001 года, то поиск будет проводиться в интервале с 01 по 31 декабря 2001 года."
                     }
                  }
               }
            },
            "НайтиПоРеквизиту":{
               "name":"НайтиПоРеквизиту",
               "name_en":"FindByAttribute",
               "description":"Осуществляет поиск бизнес-процесса по реквизиту.",
               "returns":"БизнесПроцессСсылка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ИмяРеквизита, ЗначениеРеквизита) : БизнесПроцессСсылка",
                     "Параметры":{
                        "ИмяРеквизита":"Строка, Имя реквизита, как он задан в конфигураторе, по значению которого осуществляется поиск. Тип значения произвольный, кроме ХранилищеЗначения и строк произвольной длины.",
                        "ЗначениеРеквизита":"Значение реквизита, по которому должен выполняться поиск."
                     }
                  }
               }
            },
            "ПолучитьДанныеВыбора":{
               "name":"ПолучитьДанныеВыбора",
               "name_en":"GetChoiceData",
               "description":"Формирует список значений данных выбора при вводе по строке, автоподборе текста и быстром выборе.",
               "returns":"СписокЗначений",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Параметры) : СписокЗначений",
                     "Параметры":{
                        "Параметры":"Содержит параметры для формирования списка значений: Структура, в которой обязательно должны содержаться следующие ключи:  Отбор (Filter) - отбор, используемый для поиска данных, тип Структура; значения элементов отбора могут иметь тип Массив или иной тип, не являющийся коллекцией; для типа Массив сравнение выполняется с видом сравнения ВСписке, иначе вид сравнения Равно;  СтрокаПоиска (SearchString) - содержит строку, используемую при поиске данных; для быстрого выбора содержит значение Неопределено;  ВыборГруппИЭлементов (ChoiceFoldersAndItems) - указывается использование групп и элементов (только для иерархических данных); тип ИспользованиеГруппИЭлементов."
                     }
                  }
               }
            },
            "ПолучитьКартуМаршрута":{
               "name":"ПолучитьКартуМаршрута",
               "name_en":"GetFlowchart",
               "description":"Получает копию карты маршрута бизнес-процесса.",
               "returns":"ГрафическаяСхема"
            },
            "ПолучитьМакет":{
               "name":"ПолучитьМакет",
               "name_en":"GetTemplate",
               "description":"Получает макет документа.",
               "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Макет) : Объект",
                     "Параметры":{
                        "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                     }
                  }
               }
            },
            "ПолучитьСсылку":{
               "name":"ПолучитьСсылку",
               "name_en":"GetRef",
               "description":"Формирует ссылку из значения типа УникальныйИдентификатор. Данный уникальный идентификатор может быть в дальнейшем получен из ссылки методом УникальныйИдентификатор.",
               "returns":"БизнесПроцессСсылка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(УникальныйИдентификатор) : БизнесПроцессСсылка",
                     "Параметры":{
                        "УникальныйИдентификатор":"Уникальный идентификатор, из которого будет формироваться ссылка."
                     }
                  }
               }
            },
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму бизнес-процесса. Если получаемая форма - форма для редактирования бизнес-процесса, то будет получена форма нового бизнес-процесса.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПолучитьФормуВыбора":{
               "name":"ПолучитьФормуВыбора",
               "name_en":"GetChoiceForm",
               "description":"Получает форму списка для выбора бизнес-процессов.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПолучитьФормуНовогоБизнесПроцесса":{
               "name":"ПолучитьФормуНовогоБизнесПроцесса",
               "name_en":"GetNewBusinessProcessForm",
               "description":"Получает форму нового бизнес-процесса.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПолучитьФормуСписка":{
               "name":"ПолучитьФормуСписка",
               "name_en":"GetListForm",
               "description":"Получает форму списка бизнес-процессов.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПустаяСсылка":{
               "name":"ПустаяСсылка",
               "name_en":"EmptyRef",
               "description":"Получает пустое значение ссылки на бизнес-процесс данного вида.",
               "returns":"БизнесПроцессСсылка"
            },
            "ПустаяСсылкаНаТочкуМаршрута":{
               "name":"ПустаяСсылкаНаТочкуМаршрута",
               "name_en":"EmptyRoutePointRef",
               "description":"Получает пустое значение ссылки на точку маршрута бизнес-процесса данного вида.",
               "returns":"ТочкаМаршрутаБизнесПроцессаСсылка"
            },
            "СоздатьБизнесПроцесс":{
               "name":"СоздатьБизнесПроцесс",
               "name_en":"CreateBusinessProcess",
               "description":"Создает новый бизнес-процесс.",
               "returns":"БизнесПроцессОбъект"
            }
         },
         "objMethods":{
            "Заблокирован":{
               "name":"Заблокирован",
               "name_en":"IsLocked",
               "description":"Определяет, заблокирован ли элемент данным объектом.",
               "returns":"Булево, Истина - элемент заблокирован; Ложь - в противном случае."
            },
            "Заблокировать":{
               "name":"Заблокировать",
               "name_en":"Lock",
               "description":"Выполняет блокировку объекта от изменения другими режимами или пользователями."
            },
            "Записать":{
               "name":"Записать",
               "name_en":"Write",
               "description":"Записывает бизнес-процесс в базу данных."
            },
            "Заполнить":{
               "name":"Заполнить",
               "name_en":"Fill",
               "description":"Заполняет данные элемента данными из другого объекта. Инициирует событие ОбработкаЗаполнения и вызов его процедуры-обработчика в модуле плана счетов. В ней может размещаться алгоритм, заполняющий данные элемента из переданного значения.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ДанныеЗаполнения) ",
                     "Параметры":{
                        "ДанныеЗаполнения":"Произвольный, Значение, на основании которого выполняется заполнение счета."
                     }
                  }
               }
            },
            "Метаданные":{
               "name":"Метаданные",
               "name_en":"Metadata",               
               "description":"Предоставляет доступ к объекту описания метаданных бизнес-процесса. Другой путь получения того же значения - через свойство глобального контекста Метаданные.",
               "returns":"ОбъектМетаданных"               
            },
            "Модифицированность":{
               "name":"Модифицированность",
               "name_en":"Modified",               
               "description":"Определяет, был ли изменен объект после считывания из базы данных.",
               "returns":"Истина - объект изменен; Ложь - в противном случае."
            },
            "ПолучитьКартуМаршрута":{
               "name":"ПолучитьКартуМаршрута",
               "name_en":"GetFlowchart",
               "description":"этому бизнес-процессу задач, как выполненных, так и невыполненных. Если такую карту установить в поле графической схемы, то пройденные точки маршрута будут отображаться с штриховкой фона, а активные (непройденные) обводиться красной пунктирной линией. Полученную карту можно, например, установить в поле графической схемы для просмотра.",
               "returns":"ГрафическаяСхема"               
            },            
            "ПолучитьМакет":{
               "name":"ПолучитьМакет",
               "name_en":"GetTemplate",
               "description":"Получает макет счета.",
               "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Макет) : Объект",
                     "Параметры":{
                        "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                     }
                  }
               }
            },            
            "ПолучитьСсылкуНового":{
               "name":"ПолучитьСсылкуНового",
               "name_en":"GetNewObjectRef",
               "description":"Позволяет для нового (созданного и еще не записанного) объекта получить ранее установленное методом УстановитьСсылкуНового значение ссылки.",
               "returns":"БизнесПроцессСсылка"               
            },
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму бизнес-процесса, которая содержит данный объект встроенного языка.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },            
            "ПроверитьЗаполнение":{
               "name":"ПроверитьЗаполнение",
               "name_en":"CheckFilling",
               "description":"Проверяет заполнение реквизитов. Для реквизитов, у которых при конфигурировании свойство 'Проверка заполнения' установлено в значение 'Показывать ошибку' и реквизит не заполнен, будет сформировано сообщение об ошибке.",
               "returns":"Булево, Истина - ошибок не обнаружено, Ложь - в противном случае."               
            },
            "Прочитать":{
               "name":"Прочитать",
               "name_en":"Read",
               "description":"Считывает данные бизнес-процесса из базы данных."               
            },
            "Разблокировать":{
               "name":"Разблокировать",
               "name_en":"Unlock",
               "description":"Выполняет разблокировку бизнес-процесса, если он заблокирован данным объектом."               
            },
            "Скопировать":{
               "name":"Скопировать",
               "name_en":"Copy",
               "description":"Создает новый бизнес-процесс копированием существующего.",
               "returns":"БизнесПроцессОбъект"
            },
            "Старт":{
               "name":"Старт",
               "name_en":"Start",
               "description":"Выполняет старт бизнес-процесса с указанной точки. Если точка не указана и точек старта несколько, то старт бизнес-процесса невозможен и будет выдано сообщение об ошибке. Выполнение метода Старт приводит к тому, что бизнес-процесс начинает движение по карте маршрута до тех пор, пока не перейдет на точку действия или точку вложенного бизнес-процесса. После чего бизнес-процесс формирует задачи и вложенные бизнес-процессы, и выполнение метода Старт завершается. Если на карте маршрута бизнес-процесса не предусмотрено ни одной точки действия или точки вложенного бизнес-процесса, то такой бизнес-процесс называется автоматическим. В этой случае при вызове метода Старт бизнес-процесс пройдет все точки маршрута автоматически и будет сразу помечен завершенным.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ТочкаМаршрутаБизнесПроцесса)",
                     "Параметры":{
                        "ТочкаМаршрутаБизнесПроцесса":"ТочкаМаршрутаБизнесПроцессаСсылка, Точка маршрута бизнес-процесса, на которой выполняется старт бизнес-процесса. У карты маршрута бизнес-процесса может быть несколько точек старта. В этом случае указание параметра обязательно."
                     }
                  }
               }
               
            },
            "Удалить":{
               "name":"Удалить",
               "name_en":"Delete",
               "description":"Удаляет бизнес-процесс из базы данных. Важно! В отличие от метода УстановитьПометкуУдаления, данный метод производит непосредственное удаление элемента плана счетов без возможности восстановления и без проверки ссылочной целостности. Использовать данный метод нужно крайне осмотрительно."               
            },
            "УстановитьВремя":{
               "name":"УстановитьВремя",
               "name_en":"SetTime",
               "description":"Устанавливает режим определения времени при записи бизнес-процесса.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(РежимОпределенияВремени?)",
                     "Параметры":{
                        "РежимОпределенияВремени":"РежимАвтоВремя, Устанавливает режим автоматического определения времени при записи нового бизнес-процесса."
                     }
                  }
               }
               
            },
            "УстановитьНовыйНомер":{
               "name":"УстановитьНовыйНомер",
               "name_en":"SetNewNumber",
               "description":"Устанавливает новый номер бизнес-процесса для заданного префикса номера.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ПрефиксНомера?)",
                     "Параметры":{
                        "ПрефиксНомера":"Строка, Префикс устанавливаемого номера. Значение по умолчанию: Пустая строка."
                     }
                  }
               }
            },
            "УстановитьПометкуУдаления":{
               "name":"УстановитьПометкуУдаления",
               "name_en":"SetDeletionMark",
               "description":"Устанавливает/снимет пометку на удаление. Объект при этом не удаляется из базы данных. Окончательное удаление помеченных счетов происходит при удалении помеченных объектов.",               
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ПометкаУдаления)",
                     "Параметры":{
                        "ПометкаУдаления":"Булево, Признак установки / снятие пометки на удаление. Истина - пометка будет установлена; Ложь - пометка будет снята."
                     }
                  }
               }
            },
            "УстановитьСсылкуНового":{
               "name":"УстановитьСсылкуНового",
               "name_en":"SetNewObjectRef",
               "description":"Устанавливает значение для нового (созданного и еще не записанного) объекта, которое будет назначено при записи в качестве ссылки. Значение не может равняться ссылке какого-либо из имеющихся в базе данных объекта данного типа. Уникальность ссылки проверяется при записи объекта.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Ссылка)",
                     "Параметры":{
                        "Ссылка":"БизнесПроцессСсылка, Ссылка, которая будет назначена при записи нового объекта. "
                     }
                  }
               }
            },
            "ЭтоНовый":{
               "name":"ЭтоНовый",
               "name_en":"IsNew",
               "description":"Определяет, записан ли бизнес-процесс в базу данных.",
               "returns":"Булево, Истина - изменяется еще ни разу не записанный элемент; Ложь - элемент уже записан."
            }
         },
         "refMethods":{               
            "Метаданные":{
               "name":"Метаданные",
               "name_en":"Metadata",               
               "description":"Предоставляет доступ к объекту описания метаданных бизнес-процесса. Другой путь получения того же значения - через свойство глобального контекста Метаданные. Например: Метаданные.БизнесПроцессы.",
               "returns":"ОбъектМетаданных"               
            },               
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму бизнес-процесса, на который указывает ссылка.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },                           
            "Скопировать":{
               "name":"Скопировать",
               "name_en":"Copy",
               "description":"Создает новый бизнес-процесс копированием существующего",
               "returns":"БизнесПроцессОбъект"
            },                           
            "ПолучитьОбъект":{
               "name":"ПолучитьОбъект",
               "name_en":"GetObject",
               "description":"Получает по ссылке объект, предназначенный для модификации докумнгьа.",
               "returns":"БизнесПроцессОбъект/Неопределено, Неопределено - объекта в базе нет (например, при обмене данными или после непосредственного удаления объекта, на который есть ссылки)."
            },
            "Пустая":{
               "name":"Пустая",
               "name_en":"GetObject",
               "description":"Определяет, является ли ссылка пустой или нет.",
               "returns":"Булево, Истина - ссылка не указывает ни на какой объект (пустая ссылка); Ложь - в противном случае."
            },
            "УникальныйИдентификатор":{
               "name":"УникальныйИдентификатор",
               "name_en":"UUID",
               "description":"Получает уникальный идентификатор ссылки. Ссылка может быть получена из уникального идентификатора с помощью метода менеджера ПолучитьСсылку.",
               "returns":"УникальныйИдентификатор"
            }
         }
      },
      "tasks": {
         "name":"Задачи",
         "name_en":"Tasks",
         "query_name":"Задач",
         "query_name_en":"Task",
         "items":{
            "СогласованиеДоговора":{
               "Реквизит1":{
                  "name": "Реквизит №1"
               },
               "Реквизит2":{
                  "name": "Реквизит №2"
               },
               "Реквизит3":{
                  "name": "Реквизит №3"
               }
            }
         },
         "methods":{
            "Выбрать":{
               "name":"Выбрать",
               "name_en":"Select",
               "description":"Формирует выборку задач по заданным условиям.",
               "returns":"ЗадачаВыборка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Отбор?, Порядок?, ДатаНачала?, ДатаОкончания?) : ЗадачаВыборка",
                     "Параметры":{
                        "Отбор":"Структура, Задает поле и значение отбора открываемой выборки. Ключ структуры описывает имя поля, а значение структуры - значение отбора по этому полю. В качестве полей для отбора могут задаваться только поля 'Код', 'Наименование' и реквизиты задачи, для которых в конфигураторе признак индексирования установлен в значение 'Индексировать' или в значение 'Индексировать с доп. упорядоч.'. Важно! Структура может содержать только один элемент. Если параметр не указан, то отбор не используется. ",
                        "Порядок":"Строка с именем реквизита задачи, определяющая упорядочивание элементов в выборке. Может быть указано 'Код', 'Наименование' или имя одного из реквизитов примитивного типа (Число, Строка, Дата, Булево), для которого установлен признак 'Индексирование' в значение 'Индексировать' или в 'Индексировать с доп. упорядоч.' в конфигураторе. После имени реквизита через пробел может быть указано направление сортировки. Направление определяется: 'Убыв' ('Desc') - упорядочивать по убыванию; 'Возр' ('Asc') - упорядочивать по возрастанию. По умолчанию сортировка производится по возрастанию. Если параметр не указан, то порядок определяется основным представлением задачи. Значение по умолчанию: Пустая строка. ",
                        "ДатаНачала":"Дата, Дата и время начала периода выборки задач. Если параметр не указан, выбираются все задачи, начиная с самой первой задачи в базе данных.",
                        "ДатаОкончания":"Дата, Дата окончания периода выбираемых задач. Если параметр не указан, то выбираются все задачи, заканчивая самой последней задачей в базе данных."
                     }
                  }
               }
            },                        
            "НайтиПоНаименованию":{
               "name":"НайтиПоНаименованию",
               "name_en":"FindByDescription",
               "description":"Осуществляет поиск задачи по ее наименованию.",
               "returns":"ЗадачаСсылка; Неопределено",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Наименование, ТочноеСоответствие?) : ЗадачаСсылка; Неопределено",
                     "Параметры":{
                        "Наименование":"Строка, содержащая искомое наименование задачи",
                        "ТочноеСоответствие":"Определяет режим поиска по полному соответствию. Поиск будет успешным, если строка поиска: в случае значения параметра Ложь - будет соответствовать левой части наименования; в случае значения параметра Истина - будет полностью совпадать с наименованием (за исключением 'хвостовых'' пробелов в наименовании)."                        
                     }
                  }
               }
            },
            "НайтиПоНомеру":{
               "name":"НайтиПоНомеру",
               "name_en":"FindByNumber",
               "description":"Осуществляет поиск задачи по номеру.",
               "returns":"ЗадачаСсылка; Неопределено",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(НомерЗадачи) : ЗадачаСсылка; Неопределено",
                     "Параметры":{
                        "НомерЗадачи":"Число/Строка, Номер искомой задачи. Тип передаваемого значения зависит от установки в конфигураторе представления номера задачи."
                     }
                  }
               }
            },
            "НайтиПоРеквизиту":{
               "name":"НайтиПоРеквизиту",
               "name_en":"FindByAttribute",
               "description":"Осуществляет поиск задачи по реквизиту.",
               "returns":"ПланСчетовСсылка; Неопределено",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ИмяРеквизита, ЗначениеРеквизита, Родитель?, Владелец?) : ПланСчетовСсылка; Неопределено",
                     "Параметры":{
                        "ИмяРеквизита":"Имя реквизита, как он задан в конфигураторе, по значению которого осуществляется поиск. Тип значения произвольный, кроме ХранилищеЗначения и строк произвольной длины.",
                        "ЗначениеРеквизита":"Значение реквизита, по которому должен выполняться поиск. ",
                        "Родитель":"ПланСчетовСсылка, Родитель, в пределах которого нужно выполнять поиск. Если не указан, то поиск будет проводиться во всем плане счетов."
                     }
                  }
               }
            },
            "ПолучитьДанныеВыбора":{
               "name":"ПолучитьДанныеВыбора",
               "name_en":"GetChoiceData",
               "description":"Формирует список значений данных выбора при вводе по строке, автоподборе текста и быстром выборе.",
               "returns":"СписокЗначений",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Параметры) : СписокЗначений",
                     "Параметры":{
                        "Параметры":"Содержит параметры для формирования списка значений: Структура, в которой обязательно должны содержаться следующие ключи:  Отбор (Filter) - отбор, используемый для поиска данных, тип Структура; значения элементов отбора могут иметь тип Массив или иной тип, не являющийся коллекцией; для типа Массив сравнение выполняется с видом сравнения ВСписке, иначе вид сравнения Равно;  СтрокаПоиска (SearchString) - содержит строку, используемую при поиске данных; для быстрого выбора содержит значение Неопределено;  ВыборГруппИЭлементов (ChoiceFoldersAndItems) - указывается использование групп и элементов (только для иерархических данных); тип ИспользованиеГруппИЭлементов."
                     }
                  }
               }
            },                        
            "ПолучитьМакет":{
               "name":"ПолучитьМакет",
               "name_en":"GetTemplate",
               "description":"Получает макет счета.",
               "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Макет) : Объект",
                     "Параметры":{
                        "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                     }
                  }
               }
            },            
            "ПолучитьСсылку":{
               "name":"ПолучитьСсылку",
               "name_en":"GetRef",
               "description":"Формирует ссылку из значения типа УникальныйИдентификатор. Данный уникальный идентификатор может быть в дальнейшем получен из ссылки методом УникальныйИдентификатор.",
               "returns":"ЗадачаСсылка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(УникальныйИдентификатор) : ЗадачаСсылка",
                     "Параметры":{
                        "УникальныйИдентификатор":"Уникальный идентификатор, из которого будет формироваться ссылка."
                     }
                  }
               }
            },
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму задачи. Если получаемая форма - форма для редактирования задачи, то будет получена форма нового элемента или группы.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПолучитьФормуВыбора":{
               "name":"ПолучитьФормуВыбора",
               "name_en":"GetChoiceForm",
               "description":"Получает форму списка для выбора задачи.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },            
            "ПолучитьФормуНовойЗадачи":{
               "name":"ПолучитьФормуНовойЗадачи",
               "name_en":"GetNewTaskForm",
               "description":"Получает форму новой задачи.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },            
            "ПолучитьФормуСписка":{
               "name":"ПолучитьФормуСписка",
               "name_en":"GetListForm",
               "description":"Получает форму списка задач.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПустаяСсылка":{
               "name":"ПустаяСсылка",
               "name_en":"EmptyRef",
               "description":"Получает пустое значение ссылки на справочник данного вида.",
               "returns":"СправочникСсылка"
            },            
            "СоздатьЗадачу":{
               "name":"СоздатьСчет",
               "name_en":"CreateAccount",
               "description":"Создает новую задачу.",
               "returns":"ЗадачаОбъект"
            }            

         },
         "objMethods":{            
            "АктивироватьИнтерактивно":{
               "name":"АктивироватьИнтерактивно",
               "name_en":"ActivateInteractively",
               "description":"Выполняет интерактивную активацию задачи. Это приводит к возникновению события ОбработкаИнтерактивнойАктивации задачи, а потом, если разрешена стандартная обработка, события ОбработкаИнтерактивнойАктивации у точки бизнес-процесса."               
            },
            "ВыполнитьЗадачу":{
               "name":"ВыполнитьЗадачу",
               "name_en":"ExecuteTask",
               "description":"Выполняет задачу. Для задачи свойство Выполнена устанавливается равным Истина и она записывается. При выполнении этого метода бизнес-процесс, породивший задачу, получает соответствующую нотификацию и выполняет переход к следующей точке маршрута бизнес-процесса. В процессе выполнения этого метода происходит вызов событий ПередВыполнением и ПриВыполнении у задачи и соответствующей ей точке маршрута."
            },
            "ВыполнитьЗадачуИнтерактивно":{
               "name":"ВыполнитьЗадачуИнтерактивно",
               "name_en":"ExecuteTaskInteractively",
               "description":"Интерактивно выполняет задачу с вызовом события ПередИнтерактивнымВыполнением у задачи и соответствующей ей точке маршрута. Для задачи свойство Выполнена устанавливается равным Истина и она записывается. При выполнении этого метода бизнес-процесс, породивший задачу, получает соответствующую нотификацию и выполняет переход к следующей точке маршрута бизнес-процесса."
            },
            "Заблокирован":{
               "name":"Заблокирован",
               "name_en":"IsLocked",
               "description":"Определяет, заблокирован ли элемент данным объектом.",
               "returns":"Булево, Истина - элемент заблокирован; Ложь - в противном случае."
            },
            "Заблокировать":{
               "name":"Заблокировать",
               "name_en":"Lock",
               "description":"Выполняет блокировку объекта от изменения другими режимами или пользователями."
            },
            "Записать":{
               "name":"Записать",
               "name_en":"Write",
               "description":"Записывает задачу в базу данных."
            },
            "Заполнить":{
               "name":"Заполнить",
               "name_en":"Fill",
               "description":"Заполняет данные элемента данными из другого объекта. Инициирует событие ОбработкаЗаполнения и вызов его процедуры-обработчика в модуле плана счетов. В ней может размещаться алгоритм, заполняющий данные элемента из переданного значения.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ДанныеЗаполнения) ",
                     "Параметры":{
                        "ДанныеЗаполнения":"Произвольный, Значение, на основании которого выполняется заполнение счета."
                     }
                  }
               }
            },
            "Метаданные":{
               "name":"Метаданные",
               "name_en":"Metadata",               
               "description":"Предоставляет доступ к объекту описания метаданных задачи. Другой путь получения того же значения - через свойство глобального контекста Метаданные.",
               "returns":"ОбъектМетаданных"               
            },
            "Модифицированность":{
               "name":"Модифицированность",
               "name_en":"Modified",               
               "description":"Определяет, был ли изменен объект после считывания из базы данных.",
               "returns":"Истина - объект изменен; Ложь - в противном случае."
            },
            "ПолучитьМакет":{
               "name":"ПолучитьМакет",
               "name_en":"GetTemplate",
               "description":"Получает макет счета.",
               "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Макет) : Объект",
                     "Параметры":{
                        "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                     }
                  }
               }
            },            
            "ПолучитьСсылкуНового":{
               "name":"ПолучитьСсылкуНового",
               "name_en":"GetNewObjectRef",
               "description":"Позволяет для нового (созданного и еще не записанного) объекта получить ранее установленное методом УстановитьСсылкуНового значение ссылки.",
               "returns":"ЗадачаСсылка"               
            },
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму элемента плана счетов, которая содержит данный объект встроенного языка.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПроверитьВыполнение":{
               "name":"ПроверитьВыполнение",
               "name_en":"CheckExecution",
               "description":"Показывает результат вызова обработчиков события ОбработкаПроверкиВыполнения у задачи и обработчика события ОбработкаПроверкиВыполнения у точки. Если обработчик задачи вернул Ложь, то обработчик у точки не вызывается. Используется, например, для автоматизированного выполнения задач роботами.",
               "returns":"Булево, Истина, если все достаточные условия выполнения задачи соблюдены, Ложь – в противном случае. Если обработчики не определены, возвращает Ложь. "
            },
            "ПроверитьЗаполнение":{
               "name":"ПроверитьЗаполнение",
               "name_en":"CheckFilling",
               "description":"Проверяет заполнение реквизитов. Для реквизитов, у которых при конфигурировании свойство 'Проверка заполнения' установлено в значение 'Показывать ошибку' и реквизит не заполнен, будет сформировано сообщение об ошибке.",
               "returns":"Булево, Истина - ошибок не обнаружено, Ложь - в противном случае."               
            },
            "Прочитать":{
               "name":"Прочитать",
               "name_en":"Read",
               "description":"Считывает данные задачи из базы данных."               
            },
            "Разблокировать":{
               "name":"Разблокировать",
               "name_en":"Unlock",
               "description":"Выполняет разблокировку задачи, если он заблокирован данным объектом."               
            },
            "Скопировать":{
               "name":"Скопировать",
               "name_en":"Copy",
               "description":"Создает новую задачу копированием существующей.",
               "returns":"ПланСчетовОбъект"
            },
            "Удалить":{
               "name":"Удалить",
               "name_en":"Delete",
               "description":"Удаляет задачу из базы данных. Важно! В отличие от метода УстановитьПометкуУдаления, данный метод производит непосредственное удаление элемента плана счетов без возможности восстановления и без проверки ссылочной целостности. Использовать данный метод нужно крайне осмотрительно."               
            },
            "УстановитьВремя":{
               "name":"УстановитьВремя",
               "name_en":"SetTime",
               "description":"Устанавливает режим определения времени при записи задачи.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(РежимОпределенияВремени?)",
                     "Параметры":{
                        "РежимОпределенияВремени":"РежимАвтоВремя, Устанавливает режим автоматического определения времени при записи нового бизнес-процесса."
                     }
                  }
               }
               
            },
            "УстановитьНовыйНомер":{
               "name":"УстановитьНовыйНомер",
               "name_en":"SetNewNumber",
               "description":"Устанавливает новый номер задачи для заданного префикса номера.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ПрефиксНомера?)",
                     "Параметры":{
                        "ПрефиксНомера":"Строка, Префикс устанавливаемого номера. Значение по умолчанию: Пустая строка."
                     }
                  }
               }
            },
            "УстановитьПометкуУдаления":{
               "name":"УстановитьПометкуУдаления",
               "name_en":"SetDeletionMark",
               "description":"Устанавливает/снимет пометку на удаление. Объект при этом не удаляется из базы данных. Окончательное удаление помеченных счетов происходит при удалении помеченных объектов.",               
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ПометкаУдаления)",
                     "Параметры":{
                        "ПометкаУдаления":"Булево, Признак установки / снятие пометки на удаление. Истина - пометка будет установлена; Ложь - пометка будет снята."                        
                     }
                  }
               }
            },
            "УстановитьСсылкуНового":{
               "name":"УстановитьСсылкуНового",
               "name_en":"SetNewObjectRef",
               "description":"Устанавливает значение для нового (созданного и еще не записанного) объекта, которое будет назначено при записи в качестве ссылки. Значение не может равняться ссылке какого-либо из имеющихся в базе данных объекта данного типа. Уникальность ссылки проверяется при записи объекта.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Ссылка)",
                     "Параметры":{
                        "Ссылка":"ЗадачаСсылка, Ссылка, которая будет назначена при записи нового объекта. "
                     }
                  }
               }
            },
            "ЭтоНовый":{
               "name":"ЭтоНовый",
               "name_en":"IsNew",
               "description":"Определяет, записан ли элемент в базу данных.",
               "returns":"Булево, Истина - изменяется еще ни разу не записанный элемент; Ложь - элемент уже записан."
            }            
         },
         "refMethods":{               
            "Метаданные":{
               "name":"Метаданные",
               "name_en":"Metadata",               
               "description":"Предоставляет доступ к объекту описания метаданных задачи. Другой путь получения того же значения - через свойство глобального контекста Метаданные. Например: Метаданные.Задачи.",
               "returns":"ОбъектМетаданных"               
            },               
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму задачи, на который указывает ссылка.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },                           
            "Скопировать":{
               "name":"Скопировать",
               "name_en":"Copy",
               "description":"Создает новую задачу копированием существующей",
               "returns":"ЗадачаОбъект"
            },                           
            "ПолучитьОбъект":{
               "name":"ПолучитьОбъект",
               "name_en":"GetObject",
               "description":"Получает по ссылке объект, предназначенный для модификации докумнгьа.",
               "returns":"ЗадачаОбъект/Неопределено, Неопределено - объекта в базе нет (например, при обмене данными или после непосредственного удаления объекта, на который есть ссылки)."
            },
            "Пустая":{
               "name":"Пустая",
               "name_en":"GetObject",
               "description":"Определяет, является ли ссылка пустой или нет.",
               "returns":"Булево, Истина - ссылка не указывает ни на какой объект (пустая ссылка); Ложь - в противном случае."
            },
            "УникальныйИдентификатор":{
               "name":"УникальныйИдентификатор",
               "name_en":"UUID",
               "description":"Получает уникальный идентификатор ссылки. Ссылка может быть получена из уникального идентификатора с помощью метода менеджера ПолучитьСсылку.",
               "returns":"УникальныйИдентификатор"
            }
         }
      },
      "exchangePlans": {
         "name":"ПланыОбмена",
         "name_en":"ExchangePlans",
         "query_name":"ПланОбмена",
         "query_name_en":"ExchangePlan",
         "items":{
            "ОбменСЧемНибудь":{
               "Реквизит1":{
                  "name": "Реквизит №1"
               },
               "Реквизит2":{
                  "name": "Реквизит №2"
               },
               "Реквизит3":{
                  "name": "Реквизит №3"
               }
            }
         },
         "methods":{
            "ВыбратьИзменения":{
               "name":"ВыбратьИзменения",
               "name_en":"SelectChanges",
               "description":"Формирует выборку измененные данные для передачи их в тот или иной узел плана обмена. При этом в процессе выборки изменений в записи регистрации изменений проставляется номер сообщения обмена данными, в котором должны передаваться изменения. Номер сообщения в записи регистрации проставляется для того, чтобы при подтверждении приема сообщения, в котором передавались изменения соответствующие записи регистрации изменений были удалены и в дальнейшем изменения больше не передавались.",
               "returns":"ВыборкаДанных",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Узел, НомерСообщения, ФильтрВыборки?) : ВыборкаДанных",
                     "Параметры":{
                        "Узел":"ПланОбменаСсылка, Узел, для передачи в который отбираются изменения.",
                        "НомерСообщения":"Число, Номер сообщения обмена данными, в который будут помещены выбранные изменения. ",
                        "ФильтрВыборки":"Произвольный, Неопределено - фильтр пуст, выбираются все изменения по узлу; ОбъектМетаданных - выбираются изменения в основной таблице, связанной с данным объектом метаданных; СсылкаНаОбъект - фактически, может быть выбрана только одна запись об изменении данного объекта, либо ни одной, если объект не менялся; НаборЗаписей - набор записей регистра, может быть не выбран, для фильтрации изменений используется лишь отбор набора записей; Массив - все элементы массива имеют один из перечисленных выше типов, кроме Неопределено. Условия фильтрации соединяются по ИЛИ."
                     }
                  }
               }
            },
            "ГлавныйУзел":{
               "name":"ГлавныйУзел",
               "name_en":"MasterNode",
               "description":"Получает узел распределенной информационной базы, являющийся главным для текущей информационной базы.",
               "returns":"ПланОбменаСсылка; Неопределено, Если текущая информационная база не является узлом распределенной информационной базы или главный узел для нее не определен (она сама является корневым узлом) - метод возвращает Неопределено"
            },
            "ЗаписатьИзменения":{
               "name":"ЗаписатьИзменения",
               "name_en":"WriteChanges",
               "description":"Предназначен для помещения в сообщение обмена данными всех изменений данных и конфигурации для отправки в другой узел распределенной информационной базы.",               
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ЗаписьСообщенияОбмена, ЭлементовВТранзакции?)",
                     "Параметры":{
                        "ЗаписьСообщенияОбмена":"Объект, через который осуществляется запись сообщения обмена данными. У этого объекта должен быть выполнен метод НачатьЗапись, но еще не выполнен метод ЗакончитьЗапись. ",
                        "ЭлементовВТранзакции":"Число, Определяет максимальное число элементов данных, которые помещаются в сообщение в рамках одной транзакции базы данных. Если значение параметра равно 0 (значение по умолчанию), то все данные помещаются в рамках одной транзакции. Значение по умолчанию: 0. "
                     }
                  }
               }
            },
            "ЗарегистрироватьИзменения":{
               "name":"ЗарегистрироватьИзменения",
               "name_en":"RecordChanges",
               "description":"Регистрирует изменения одного или группы элементов данных для последующей выборки и передачи изменений в адрес одного или нескольких узлов планов обмена.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Узлы, Данные?)",
                     "Параметры":{
                        "Узлы":"ПланОбменаСсылка/Массив, Одиночное значение типа ПланОбменаСсылка.<Имя плана обмена> или массив таких значений, показывающие для пересылки в какие узлы регистрируются изменения",
                        "Данные":"Произвольный, Значением данного параметра может быть объект метаданных, объект, представляющий данные, хранимые в базе данных, такой как документ, элемент справочника, счет бухгалтерского учета, менеджер записи константы, набор записей регистра и т. п., ссылка на объект базы данных, а также Неопределено. Если указан объект метаданных, то регистрация изменений будет произведена для всех элементов данных, относящихся к указанному объекту метаданных. Объект метаданных должен входить в состав планов обмена всех узлов, указанных в первом параметре. Если указан объект представляющий данные, хранимые в базе данных, или ссылка, то регистрация изменений будет произведена только для указанных данных. Объект метаданных, соответствующий данным, должен входить в состав всех планов обмена всех узлов, указанных в первом параметре. Если указан УдалениеОбъекта, то регистрация изменений выполняется для объекта базы данных, на который 'указывает' ссылка, содержащаяся в объекте УдалениеОбъекта. Если указано Неопределено или не указан, то в качестве первого параметра может быть указан только одиночный узел. И в этом случае будет выполнена регистрация изменений для всех объектов, метаданные которых входят в состав плана обмена, к которому относится узел, указанный в качестве первого параметра. Для набора записей регистра сведений, в случае, если регистратор не определен, в качестве ключа используется совокупность измерений, входящих в основной отбор. А если регистр сведений является периодическим и включен основной отбор по периоду, то в ключ входит еще и период."
                     }
                  }
               }
            },
            "ИзменениеЗарегистрировано":{
               "name":"ИзменениеЗарегистрировано",
               "name_en":"IsChangeRecorded",
               "description":"Определяет, зарегистрировано ли изменение одиночного элемента данных по отношению к тому или иному узлу плана обмена.",
               "returns":"Булево, Истина - изменение зарегистрировано; Ложь - в противном случае.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Узел, Данные) : Булево",
                     "Параметры":{
                        "Узел":"ПланОбменаСсылка, Узел, по отношению к которому может быть зарегистрировано изменение.",
                        "Данные":"Произвольный, Этот параметр показывает данные, для которых может быть зарегистрировано изменение. Значением данного параметра может быть объект, представляющий данные, хранимые в базе данных, такой как документ, элемент справочника, счет бухгалтерского учета, менеджер записи константы, набор записей регистра и т. п., ссылка на объект базы данных. Если указан УдалениеОбъекта, то проверяется регистрация изменений для объекта базы данных, на который указывает ссылка, содержащаяся в объекте УдалениеОбъекта."
                     }
                  }
               }
            },
            "ПрочитатьИзменения":{
               "name":"ПрочитатьИзменения",
               "name_en":"ReadChanges",
               "description":"Считывает из сообщения обмена данными изменения конфигурации и данных, переданные этому узлу от другого узла распределенной информационной базы. Если сообщение содержит изменения конфигурации, переданные данному узлу от его главного узла и еще не помещенные в конфигурацию базы данных этого узла, то метод вызывает исключение, текст сообщения которого содержит указание о необходимости запустить Конфигуратор и выполнить обновление конфигурации базы данных.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ЧтениеСообщенияОбмена, ЭлементовВТранзакции?)",
                     "Параметры":{
                        "ЧтениеСообщенияОбмена":"Объект, через который осуществляется чтение сообщения обмена данными. У этого объекта должен быть выполнен метод НачатьЧтение, но еще не выполнен метод ЗакончитьЧтение. ",
                        "ЭлементовВТранзакции":"Число, Определяет максимальное число элементов данных, которые читаются из сообщение и записываются в базу данных в рамках одной транзакции. Если значение параметра равно 0 (значение по умолчанию), то все данные обрабатываются в рамках одной транзакции."
                     }
                  }
               }
            },            
            "СоздатьЗаписьСообщения":{
               "name":"СоздатьЗаписьСообщения",
               "name_en":"CreateMessageWriter",
               "description":"Создает объект, с помощью которого может быть произведена запись одного или нескольких сообщений обмена данными.",
               "returns":"ЗаписьСообщенияОбмена"               
            },
            "СоздатьНачальныйОбраз":{
               "name":"СоздатьНачальныйОбраз",
               "name_en":"CreateInitialImage",
               "description":"Создает начальный образ подчиненного узла распределенной информационной базы. Начальный образ выгружается в информационную базу, которая создается в процессе создания начального образа или должна быть пустой.",               
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Узел, СтрокаСоединения)",
                     "Параметры":{
                        "Узел":"ПланОбменаСсылка, Ссылка на узел плана обмена или объект, представляющий узел плана обмена. Данный узел должен относиться к плану обмена распределенной информационной базы и не должен быть главным узлом для данного узла распределенной информационной базы.",
                        "СтрокаСоединения":"Строка соединения, указывающая информационную базу, в которой будет создан начальный образ подчиненного узла распределенной ИБ. Информационная база для создания начального образа должна быть пустой или не должна существовать вовсе. "
                     }
                  }
               }
            },
            "СоздатьЧтениеСообщения":{
               "name":"СоздатьЧтениеСообщения",
               "name_en":"CreateMessageReader",
               "description":"Создает объект, с помощью которого может быть произведено чтение одного или нескольких сообщений обмена данными.",
               "returns":"ЧтениеСообщенияОбмена"               
            },
            "ТипВсеСсылки":{
               "name":"ТипВсеСсылки",
               "name_en":"AllRefsType",
               "description":"Получает описание типов, содержащее типы ссылок планов обмена.",
               "returns":"ОписаниеТипов"               
            }, 
            "УдалитьРегистрациюИзменений":{
               "name":"УдалитьРегистрациюИзменений",
               "name_en":"DeleteChangeRecords",
               "description":"Удаляет записи регистрации изменений одного или группы элементов данных для одного или нескольких узлов планов обмена.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Узлы, Данные?)",
                     "Параметры":{
                        "Узлы":"ПланОбменаСсылка/Массив, Одиночное значение типа ПланОбменаСсылка.<Имя плана обмена> или массив таких значений, показывающие для каких узлов удаляются записи регистрации изменений",
                        "Данные":"Произвольный, Значением данного параметра может быть объект метаданных, объект, представляющий данные, хранимые в базе данных, такой как документ, элемент справочника, счет бухгалтерского учета, менеджер записи константы, набор записей регистра и т. п., ссылка на объект базы данных, а также Неопределено. Если указан объект метаданных, то записи регистрации изменений будут удалены для всех элементов данных, относящихся к указанному объекту метаданных. Объект метаданных должен входить в состав планов обмена всех узлов, указанных в первом параметре. Если указан УдалениеОбъекта, то удаление записи регистрации изменений выполняется для объекта базы данных, на который 'указывает' ссылка, содержащаяся в объекте УдалениеОбъекта. Если указан объект представляющий данные, хранимые в базе данных, или ссылка, то записи регистрации изменений будут удалены только для указанных данных. Объект метаданных, соответствующий данным должен входить в состав всех планов обмена всех узлов, указанных в первом параметре. Если указано Неопределено или не указан, то в качестве первого параметра может быть указан только одиночный узел. И в этом случае записи регистрации изменений будут удалены для всех объектов, метаданные которых входят в состав плана обмена, к которому относится узел, указанный в качестве первого параметра. Если в качестве первого параметра указан одиночный узел, то в параметре может быть указан номер сообщения. В этом случае метод УдалитьРегистрациюИзменений удаляет из всех таблиц регистрации изменений все записи относящиеся к указанному узлу, у которых номер сообщения меньше или равен значению второго параметра. Значение по умолчанию: Неопределено. "
                     }
                  }
               }
            },
            "УстановитьГлавныйУзел":{
               "name":"УстановитьГлавныйУзел",
               "name_en":"SetMasterNode",
               "description":"Устанавливает главный узел распределенной информационной базы для текущей информационной базы или отменяет назначение главного узла.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ГлавныйУзел)",
                     "Параметры":{
                        "ГлавныйУзел":"ПланОбменаСсылка/Неопределено, Если в качестве значения параметра передается значение типа ПланОбменаСсылка или ПланОбменаОбъект, то план обмена, к которому относится ссылка или объект должен быть планом обмена распределенной информационной базы.  Если в качестве значения передано значение Неопределено, то назначение главного узла отменяется."
                     }
                  }
               }
            }
         },
         "objMethods":{                        
            "Заблокирован":{
               "name":"Заблокирован",
               "name_en":"IsLocked",
               "description":"Определяет, заблокирован ли узел данным объектом.",
               "returns":"Булево, Истина - элемент заблокирован; Ложь - в противном случае."
            },
            "Заблокировать":{
               "name":"Заблокировать",
               "name_en":"Lock",
               "description":"Выполняет блокировку объекта от изменения другими режимами или пользователями."
            },
            "Записать":{
               "name":"Записать",
               "name_en":"Write",
               "description":"Записывает узел в базу данных."
            },
            "Заполнить":{
               "name":"Заполнить",
               "name_en":"Fill",
               "description":"Заполняет данные элемента данными из другого объекта. Инициирует событие ОбработкаЗаполнения и вызов его процедуры-обработчика в модуле плана счетов. В ней может размещаться алгоритм, заполняющий данные элемента из переданного значения.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ДанныеЗаполнения) ",
                     "Параметры":{
                        "ДанныеЗаполнения":"Произвольный, Значение, на основании которого выполняется заполнение счета."
                     }
                  }
               }
            },
            "Метаданные":{
               "name":"Метаданные",
               "name_en":"Metadata",               
               "description":"Предоставляет доступ к объекту описания метаданных плана обмена. Другой путь получения того же значения - через свойство глобального контекста Метаданные. Например: Метаданные.ПланыОбменов.Офисы.",
               "returns":"ОбъектМетаданных"               
            },
            "Модифицированность":{
               "name":"Модифицированность",
               "name_en":"Modified",               
               "description":"Определяет, был ли изменен объект после считывания из базы данных.",
               "returns":"Истина - объект изменен; Ложь - в противном случае."
            },
            "ПолучитьМакет":{
               "name":"ПолучитьМакет",
               "name_en":"GetTemplate",
               "description":"Получает макет плана обмена.",
               "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Макет) : Объект",
                     "Параметры":{
                        "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                     }
                  }
               }
            },            
            "ПолучитьСсылкуНового":{
               "name":"ПолучитьСсылкуНового",
               "name_en":"GetNewObjectRef",
               "description":"Позволяет для нового (созданного и еще не записанного) объекта получить ранее установленное методом УстановитьСсылкуНового значение ссылки.",
               "returns":"ПланОбменаСсылка"               
            },
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму плана обмена, которая содержит данный объект встроенного языка.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },            
            "ПроверитьЗаполнение":{
               "name":"ПроверитьЗаполнение",
               "name_en":"CheckFilling",
               "description":"Проверяет заполнение реквизитов. Для реквизитов, у которых при конфигурировании свойство 'Проверка заполнения' установлено в значение 'Показывать ошибку' и реквизит не заполнен, будет сформировано сообщение об ошибке.",
               "returns":"Булево, Истина - ошибок не обнаружено, Ложь - в противном случае."               
            },
            "Прочитать":{
               "name":"Прочитать",
               "name_en":"Read",
               "description":"Считывает данные узла из базы данных."               
            },
            "Разблокировать":{
               "name":"Разблокировать",
               "name_en":"Unlock",
               "description":"Выполняет разблокировку узла, если он заблокирован данным объектом."               
            },
            "Скопировать":{
               "name":"Скопировать",
               "name_en":"Copy",
               "description":"Создает новую узел копированием существующего.",
               "returns":"ПланОбменаОбъект"
            },
            "Удалить":{
               "name":"Удалить",
               "name_en":"Delete",
               "description":"Удаляет узел из базы данных. Важно! В отличие от метода УстановитьПометкуУдаления, данный метод производит непосредственное удаление элемента плана счетов без возможности восстановления и без проверки ссылочной целостности. Использовать данный метод нужно крайне осмотрительно."               
            },            
            "УстановитьНовыйКод":{
               "name":"УстановитьНовыйКод",
               "name_en":"SetNewCode",
               "description":"Устанавливает новый код. Если в коде присутствует числовая часть, то новый код автоматически устанавливается следующим за имеющимся максимальным. При этом определяется текущий максимальный код среди узлов данного плана обмена. Если передан префикс, то новый код устанавливается следующим образом: выполняется поиск максимального кода среди кодов, имеющих данный префикс, новый код выбирается как следующий от найденного кода.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ПрефиксКода?)",
                     "Параметры":{
                        "ПрефиксКода":"Строковое значение префикса. Если префикс указан, то новый код будет формироваться с учетом префикса."
                     }
                  }
               }
            },
            "УстановитьПометкуУдаления":{
               "name":"УстановитьПометкуУдаления",
               "name_en":"SetDeletionMark",
               "description":"Устанавливает/снимет пометку на удаление. Объект при этом не удаляется из базы данных. Окончательное удаление помеченных счетов происходит при удалении помеченных объектов.",               
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ПометкаУдаления)",
                     "Параметры":{
                        "ПометкаУдаления":"Булево, Признак установки / снятие пометки на удаление. Истина - пометка будет установлена; Ложь - пометка будет снята."
                     }
                  }
               }
            },
            "УстановитьСсылкуНового":{
               "name":"УстановитьСсылкуНового",
               "name_en":"SetNewObjectRef",
               "description":"Устанавливает значение для нового (созданного и еще не записанного) объекта, которое будет назначено при записи в качестве ссылки. Значение не может равняться ссылке какого-либо из имеющихся в базе данных объекта данного типа. Уникальность ссылки проверяется при записи объекта.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Ссылка)",
                     "Параметры":{
                        "Ссылка":"ПланОбменаСсылка, Ссылка, которая будет назначена при записи нового объекта. "
                     }
                  }
               }
            },
            "ЭтоНовый":{
               "name":"ЭтоНовый",
               "name_en":"IsNew",
               "description":"Определяет, записан ли узел в базу данных.",
               "returns":"Булево, Истина - изменяется еще ни разу не записанный элемент; Ложь - элемент уже записан."
            }            
         },
         "refMethods":{               
            "Метаданные":{
               "name":"Метаданные",
               "name_en":"Metadata",               
               "description":"Предоставляет доступ к объекту описания метаданных плана обмена. Другой путь получения того же значения - через свойство глобального контекста Метаданные. Например: Метаданные.ПланыОбмена.",
               "returns":"ОбъектМетаданных"               
            },               
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму плана обмена, на который указывает ссылка.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },                           
            "Скопировать":{
               "name":"Скопировать",
               "name_en":"Copy",
               "description":"Создает новый план обмена копированием существующего",
               "returns":"ПланОбменаОбъект"
            },                           
            "ПолучитьОбъект":{
               "name":"ПолучитьОбъект",
               "name_en":"GetObject",
               "description":"Получает по ссылке объект, предназначенный для модификации докумнгьа.",
               "returns":"ПланОбменаОбъект/Неопределено, Неопределено - объекта в базе нет (например, при обмене данными или после непосредственного удаления объекта, на который есть ссылки)."
            },
            "Пустая":{
               "name":"Пустая",
               "name_en":"GetObject",
               "description":"Определяет, является ли ссылка пустой или нет.",
               "returns":"Булево, Истина - ссылка не указывает ни на какой объект (пустая ссылка); Ложь - в противном случае."
            },
            "УникальныйИдентификатор":{
               "name":"УникальныйИдентификатор",
               "name_en":"UUID",
               "description":"Получает уникальный идентификатор ссылки. Ссылка может быть получена из уникального идентификатора с помощью метода менеджера ПолучитьСсылку.",
               "returns":"УникальныйИдентификатор"
            }
         }
      },
      "chartsOfCharacteristicTypes": {
         "name":"ПланыВидовХарактеристик",
         "name_en":"ChartsOfCharacteristicTypes",
         "query_name":"ПланВидовХарактеристик",
         "query_name_en":"ChartOfCharacteristicTypes",
         "items":{
            "ХозрасчеВидыСубконтоХозрасчетныетный":{
               "properties":{
                  "Реквизит1":{
                     "name": "Реквизит №1"
                  },
                  "Реквизит2":{
                     "name": "Реквизит №2"
                  },
                  "Реквизит3":{
                     "name": "Реквизит №3"
                  }
               }
            }
         },
         "methods":{
            "Выбрать":{
               "name":"Выбрать",
               "name_en":"Select",
               "description":"Формирует выборку элементов вида характеристики по заданным условиям.",
               "returns":"ПланВидовХарактеристикВыборка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Родитель?, Отбор?, Порядок?) : ПланВидовХарактеристикВыборка",
                     "Параметры":{
                        "Родитель":"ПланВидовХарактеристикСсылка, Отбор по родителю. Если параметр не задан, то отбор по родителю не производится. ",
                        "Отбор":"Структура, Задает поле и значение отбора открываемой выборки. Ключ структуры описывает имя поля, а значение структуры - значение отбора по этому полю. В качестве полей для отбора могут задаваться только поля 'Код', 'Наименование' и реквизиты счета для которых в конфигураторе признак индексирования установлен в значение 'Индексировать' или в значение 'Индексировать с доп. упорядоч.'. Важно! Структура может содержать только один элемент. Если параметр не указан, то отбор не используется. ",
                        "Порядок":"Строка с именем реквизита счета, определяющая упорядочивание элементов в выборке. Может быть указано 'Код', 'Наименование' или имя одного из реквизитов примитивного типа (Число, Строка, Дата, Булево), для которого установлен признак 'Индексирование' в значение 'Индексировать' или в 'Индексировать с дополнительным упорядочиванием' в конфигураторе. После имени реквизита через пробел может быть указано направление сортировки. Направление определяется: 'Убыв' ('Desc') - упорядочивать по убыванию; 'Возр' ('Asc') - упорядочивать по возрастанию. По умолчанию сортировка производится по возрастанию. Если параметр не указан, то порядок определяется основным представлением счета."
                     }
                  }
               }
            },
            "ВыбратьИерархически":{
               "name":"ВыбратьИерархически",
               "name_en":"SelectHierarchically",
               "description":"Формирует иерархическую выборку элементов справочника по заданным условиям. При иерархической выборке для каждого элемента сначала выбираются элементы, для которых он является родителем, а затем уже выбираются элементы следующего уровня.",
               "returns":"ПланВидовХарактеристикВыборка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Родитель?, Отбор?, Порядок?) : ПланВидовХарактеристикВыборка",
                     "Параметры":{
                        "Родитель":"ПланВидовХарактеристикСсылка, Отбор по родителю. Если параметр не задан, то отбор по родителю не производится. ",
                        "Отбор":"Структура, Задает поле и значение отбора открываемой выборки. Ключ структуры описывает имя поля, а значение структуры - значение отбора по этому полю. В качестве полей для отбора могут задаваться только поля 'Код', 'Наименование' и реквизиты счета для которых в конфигураторе признак индексирования установлен в значение 'Индексировать' или в значение 'Индексировать с доп. упорядоч.'. Важно! Структура может содержать только один элемент. Если параметр не указан, то отбор не используется. ",
                        "Порядок":"Строка с именем реквизита счета, определяющая упорядочивание элементов в выборке. Может быть указано 'Код', 'Наименование' или имя одного из реквизитов примитивного типа (Число, Строка, Дата, Булево), для которого установлен признак 'Индексирование' в значение 'Индексировать' или в 'Индексировать с дополнительным упорядочиванием' в конфигураторе. После имени реквизита через пробел может быть указано направление сортировки. Направление определяется: 'Убыв' ('Desc') - упорядочивать по убыванию; 'Возр' ('Asc') - упорядочивать по возрастанию. По умолчанию сортировка производится по возрастанию. Если параметр не указан, то порядок определяется основным представлением счета."
                     }
                  }
               }
            },
            "НайтиПоКоду":{
               "name":"НайтиПоКоду",
               "name_en":"FindByCode",
               "description":"Осуществляет поиск элемента по его коду.",
               "returns":"ПланВидовХарактеристикСсылка; Неопределено",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Код, Родитель) : ПланВидовХарактеристикСсылка; Неопределено",
                     "Параметры":{
                        "Код":"Число/Строка, Искомый код",                        
                        "Родитель":"ПланВидовХарактеристикСсылка, Родитель, в пределах которого нужно выполнять поиск. Если не указан, то во всем плане видов характеристик. "
                     }
                  }
               }
            },
            "НайтиПоНаименованию":{
               "name":"НайтиПоНаименованию",
               "name_en":"FindByDescription",
               "description":"Осуществляет поиск элемента по его наименованию.",
               "returns":"ПланВидовХарактеристикСсылка; Неопределено",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Наименование, ТочноеСоответствие?, Родитель?) : ПланВидовХарактеристикСсылка; Неопределено",
                     "Параметры":{
                        "Наименование":"Строка, содержащая искомое наименование",
                        "ТочноеСоответствие":"Определяет режим поиска по полному соответствию. Поиск будет успешным, если строка поиска: в случае значения параметра Ложь - будет соответствовать левой части наименования; в случае значения параметра Истина - будет полностью совпадать с наименованием (за исключением 'хвостовых'' пробелов в наименовании).",
                        "Родитель":"ПланВидовХарактеристикСсылка, Родитель, в пределах которого нужно выполнять поиск. Если не указан, то поиск будет проводиться во всем плане счетов."                        
                     }
                  }
               }
            },
            "НайтиПоРеквизиту":{
               "name":"НайтиПоРеквизиту",
               "name_en":"FindByAttribute",
               "description":"Осуществляет поиск элемента по значению реквизита.",
               "returns":"ПланВидовХарактеристикСсылка; Неопределено",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ИмяРеквизита, ЗначениеРеквизита, Родитель?) : ПланВидовХарактеристикСсылка; Неопределено",
                     "Параметры":{
                        "ИмяРеквизита":"Имя реквизита, как он задан в конфигураторе, по значению которого осуществляется поиск. Тип значения произвольный, кроме ХранилищеЗначения и строк произвольной длины.",
                        "ЗначениеРеквизита":"Значение реквизита, по которому должен выполняться поиск. ",
                        "Родитель":"ПланВидовХарактеристикСсылка, Родитель, в пределах которого нужно выполнять поиск. Если не указан, то поиск будет проводиться во всем плане счетов."
                     }
                  }
               }
            },
            "ПолучитьДанныеВыбора":{
               "name":"ПолучитьДанныеВыбора",
               "name_en":"GetChoiceData",
               "description":"Формирует список значений данных выбора при вводе по строке, автоподборе текста и быстром выборе.",
               "returns":"СписокЗначений",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Параметры) : СписокЗначений",
                     "Параметры":{
                        "Параметры":"Содержит параметры для формирования списка значений: Структура, в которой обязательно должны содержаться следующие ключи:  Отбор (Filter) - отбор, используемый для поиска данных, тип Структура; значения элементов отбора могут иметь тип Массив или иной тип, не являющийся коллекцией; для типа Массив сравнение выполняется с видом сравнения ВСписке, иначе вид сравнения Равно;  СтрокаПоиска (SearchString) - содержит строку, используемую при поиске данных; для быстрого выбора содержит значение Неопределено;  ВыборГруппИЭлементов (ChoiceFoldersAndItems) - указывается использование групп и элементов (только для иерархических данных); тип ИспользованиеГруппИЭлементов."
                     }
                  }
               }
            },
            "ПолучитьИнициализациюПредопределенныхДанных":{
               "name":"ПолучитьИнициализациюПредопределенныхДанных",
               "name_en":"GetPredefinedDataInitialization",
               "description":"Получает признак того, что предопределенные данные области инициализированы.",
               "returns":"Строка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Область) : Строка",
                     "Параметры":{
                        "Область":"Соответствие, Данный параметр позволяет задать область объекта, в которой необходимо получить признак проинициализированности. Область описывается соответствием: разделитель - значение. Могут быть использованы только разделители, разделяющие данные в режиме НезависимоИСовместно. Ключом соответствия может быть объект метаданных или имя разделителя. Если разделители, переданные в этом параметре, установлены и используются в сеансе, то они игнорируются. Значение по умолчанию: Неопределено."
                     }
                  }
               }
            },            
            "ПолучитьМакет":{
               "name":"ПолучитьМакет",
               "name_en":"GetTemplate",
               "description":"Получает макет счета.",
               "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Макет) : Объект",
                     "Параметры":{
                        "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                     }
                  }
               }
            },
            "ПолучитьОбновлениеПредопределенныхДанных":{
               "name":"ПолучитьОбновлениеПредопределенныхДанных",
               "name_en":"GetPredefinedDataUpdate",
               "description":"Получает текущее значение режима обновления предопределенных элементов. Вычисляется из значений, установленных в метаданных и в данных.",
               "returns":"ОбновлениеПредопределенныхДанных"               
            },
            "ПолучитьСсылку":{
               "name":"ПолучитьСсылку",
               "name_en":"GetRef",
               "description":"Формирует ссылку из значения типа УникальныйИдентификатор. Данный уникальный идентификатор может быть в дальнейшем получен из ссылки методом УникальныйИдентификатор.",
               "returns":"ПланВидовХарактеристикСсылка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(УникальныйИдентификатор) : ПланВидовХарактеристикСсылка",
                     "Параметры":{
                        "УникальныйИдентификатор":"Уникальный идентификатор, из которого будет формироваться ссылка."
                     }
                  }
               }
            },
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму вида характеристики. Если получаемая форма - форма для редактирования элемента или группы вида характеристики то будет получена форма нового элемента или группы.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПолучитьФормуВыбора":{
               "name":"ПолучитьФормуВыбора",
               "name_en":"GetChoiceForm",
               "description":"Получает форму списка для выбора элементов вида характеристики",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПолучитьФормуВыбораГруппы":{
               "name":"ПолучитьФормуВыбораГруппы",
               "name_en":"GetChoiceForm",
               "description":"Получает форму списка для выбора группы вида характеристики.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПолучитьФормуНовогоЭлемента":{
               "name":"ПолучитьФормуНовогоЭлемента",
               "name_en":"GetNewItemForm",
               "description":"Получает форму нового элемента вида характеристики.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПолучитьФормуНовойГруппы":{
               "name":"ПолучитьФормуНовойГруппы",
               "name_en":"GetNewFolderForm",
               "description":"Получает форму новой группы.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПолучитьФормуСписка":{
               "name":"ПолучитьФормуСписка",
               "name_en":"GetListForm",
               "description":"Получает форму списка элементов вида характеристики.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПустаяСсылка":{
               "name":"ПустаяСсылка",
               "name_en":"EmptyRef",
               "description":"Получает пустое значение ссылки на план видов характеристик данного вида.",
               "returns":"ПланВидовХарактеристикСсылка"
            },            
            "СоздатьГруппу":{
               "name":"СоздатьГруппу",
               "name_en":"CreateFolder",
               "description":"Создает новую группу вида характеристики.",
               "returns":"ПланВидовХарактеристикОбъект"
            },
            "СоздатьЭлемент":{
               "name":"СоздатьЭлемент",
               "name_en":"CreateItem",
               "description":"Создает новый элемент вида характеристики.",
               "returns":"ПланВидовХарактеристикОбъект"
            },
            "УстановитьИнициализациюПредопределенныхДанных":{
               "name":"УстановитьИнициализациюПредопределенныхДанных",
               "name_en":"SetPredefinedDataInitialization",
               "description":"Устанавливает признак инициализации предопределенных данных области. Если значение параметра Инициализированы = Ложь, то предопределенные данные должны фактически отсутствовать.",               
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Область?, Инициализированы?) ",
                     "Параметры":{
                        "Область":"Соответствие, Данный параметр позволяет задать область объекта, в которой необходимо изменить признак проинициализированности. Область описывается соответствием: разделитель - значение. Могут быть использованы только разделители, разделяющие данные в режиме НезависимоИСовместно. Ключом соответствия может быть объект метаданных или имя разделителя. Если разделители, переданные в этом параметре, установлены и используются в сеансе, то они игнорируются. Значение по умолчанию: Неопределено. ",
                        "Инициализированы":"Булево, Указывает, инициализированы ли предопределенные данные в области или нет."
                     }
                  }
               }
            },
            "УстановитьОбновлениеПредопределенныхДанных":{
               "name":"УстановитьОбновлениеПредопределенныхДанных",
               "name_en":"SetPredefinedDataUpdate",
               "description":"Устанавливает режим обновления предопределенных элементов в данных. Для выполнения требуются права администратора информационной базы.",               
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ОбновлениеПредопределенных?) ",
                     "Параметры":{
                        "ОбновлениеПредопределенных":"ОбновлениеПредопределенныхДанных, Режим обновления предопределенных данных объекта метаданных. Значение по умолчанию: Автоматически."
                     }
                  }
               }
            }
         },
         "objMethods":{
            "Заблокирован":{
               "name":"Заблокирован",
               "name_en":"IsLocked",
               "description":"Определяет, заблокирован ли элемент данным объектом.",
               "returns":"Булево, Истина - элемент заблокирован; Ложь - в противном случае."
            },
            "Заблокировать":{
               "name":"Заблокировать",
               "name_en":"Lock",
               "description":"Выполняет блокировку объекта от изменения другими режимами или пользователями."
            },
            "Записать":{
               "name":"Записать",
               "name_en":"Write",
               "description":"Записывает сЗаписывает новый или измененный объект плана видов характеристик. Инициирует события ПередЗаписью и ПриЗаписичет в базу данных."
            },
            "Заполнить":{
               "name":"Заполнить",
               "name_en":"Fill",
               "description":"Заполняет данные элемента данными из другого объекта. Инициирует событие ОбработкаЗаполнения и вызов его процедуры-обработчика в модуле плана счетов. В ней может размещаться алгоритм, заполняющий данные элемента из переданного значения.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ДанныеЗаполнения) ",
                     "Параметры":{
                        "ДанныеЗаполнения":"Произвольный, Значение, на основании которого выполняется заполнение счета."
                     }
                  }
               }
            },
            "Метаданные":{
               "name":"Метаданные",
               "name_en":"Metadata",               
               "description":"Предоставляет доступ к объекту описания метаданных плана видов характеристик. Другой путь получения того же значения - через свойство глобального контекста Метаданные. Например: Метаданные.ПланыВидовХарактеристик.СвойстваОбъектов",
               "returns":"ОбъектМетаданных"               
            },
            "Модифицированность":{
               "name":"Модифицированность",
               "name_en":"Modified",               
               "description":"Определяет, был ли изменен объект после считывания из базы данных.",
               "returns":"Истина - объект изменен; Ложь - в противном случае."
            },
            "ПолучитьМакет":{
               "name":"ПолучитьМакет",
               "name_en":"GetTemplate",
               "description":"Получает макет плана видов характеристик.",
               "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Макет) : Объект",
                     "Параметры":{
                        "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                     }
                  }
               }
            },            
            "ПолучитьСсылкуНового":{
               "name":"ПолучитьСсылкуНового",
               "name_en":"GetNewObjectRef",
               "description":"Позволяет для нового (созданного и еще не записанного) объекта получить ранее установленное методом УстановитьСсылкуНового значение ссылки.",
               "returns":"ПланВидовХарактеристикСсылка"               
            },
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму элемента плана счетов, которая содержит данный объект встроенного языка.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПринадлежитЭлементу":{
               "name":"ПринадлежитЭлементу",
               "name_en":"BelongsToItem",
               "description":"Определяет подчиненность группе непосредственно на момент вызова метода путем последовательного считывания всех вышестоящих элементов. ",
               "returns":"Булево, Истина - счет подчинен другому счету; Ложь - в противном случае. Если в качестве параметра указать сам счет, то Ложь.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Элемент) : Булево",
                     "Параметры":{
                        "Элемент":"ПланВидовХарактеристикСсылка, группа, для которой определяется принадлежность элемента."
                     }
                  }
               }
            },
            "ПроверитьЗаполнение":{
               "name":"ПроверитьЗаполнение",
               "name_en":"CheckFilling",
               "description":"Проверяет заполнение реквизитов. Для реквизитов, у которых при конфигурировании свойство 'Проверка заполнения' установлено в значение 'Показывать ошибку' и реквизит не заполнен, будет сформировано сообщение об ошибке.",
               "returns":"Булево, Истина - ошибок не обнаружено, Ложь - в противном случае."               
            },
            "Прочитать":{
               "name":"Прочитать",
               "name_en":"Read",
               "description":"Считывает данные плана видов характеристик из базы данных."               
            },
            "Разблокировать":{
               "name":"Разблокировать",
               "name_en":"Unlock",
               "description":"Выполняет разблокировку плана видов характеристик, если он заблокирован данным объектом."               
            },
            "Скопировать":{
               "name":"Скопировать",
               "name_en":"Copy",
               "description":"Создает новый счет копированием существующего.",
               "returns":"ПланВидивХарактеристикОбъект"
            },
            "Удалить":{
               "name":"Удалить",
               "name_en":"Delete",
               "description":"Удаляет план видов характеристик из базы данных. Вызывает преопределенную процедуру события ПередУдалением."               
            },
            "Уровень":{
               "name":"Уровень",
               "name_en":"Level",
               "description":"Получает уровень плана видов характеристик.",
               "returns":"Число"
            },
            "УстановитьНовыйКод":{
               "name":"УстановитьНовыйКод",
               "name_en":"SetNewCode",
               "description":"Устанавливает новый код. Если в коде присутствует числовая часть, то новый код автоматически устанавливается следующим за имеющимся максимальным. При этом определяется текущий максимальный код среди элементов данного вида характеристики.  Если передан префикс, то новый код устанавливается следующим образом: выполняется поиск максимального кода среди кодов, имеющих данный префикс, новый код выбирается как следующий от найденного кода.",               
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ПрефиксКода?)",
                     "Параметры":{
                        "ПрефиксКода":"Строка, Строковое значение префикса. Если префикс указан, то новый код будет формироваться с учетом префикса."                        
                     }
                  }
               }
            },
            "УстановитьПометкуУдаления":{
               "name":"УстановитьПометкуУдаления",
               "name_en":"SetDeletionMark",
               "description":"Устанавливает/снимет пометку на удаление. Объект при этом не удаляется из базы данных. Окончательное удаление помеченных счетов происходит при удалении помеченных объектов.",               
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ПометкаУдаления, ВключаяПодчиненные?)",
                     "Параметры":{
                        "ПометкаУдаления":"Булево, Признак установки / снятие пометки на удаление. Истина - пометка будет установлена; Ложь - пометка будет снята.",
                        "ВключаяПодчиненные":"Булево, Если параметр установлен в Истина, то будут помечены на удаление, кроме данного элемента, все его подчиненные элементы в данном счете и во всех подчиненных счетах. Если параметр установлен в Ложь, то будет помечен на удаление только данный элемент."
                     }
                  }
               }
            },
            "УстановитьСсылкуНового":{
               "name":"УстановитьСсылкуНового",
               "name_en":"SetNewObjectRef",
               "description":"Устанавливает значение для нового (созданного и еще не записанного) объекта, которое будет назначено при записи в качестве ссылки. Значение не может равняться ссылке какого-либо из имеющихся в базе данных объекта данного типа. Уникальность ссылки проверяется при записи объекта.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Ссылка)",
                     "Параметры":{
                        "Ссылка":" ПланВидовХарактеристикСсылка, Ссылка, которая будет назначена при записи нового объекта. "
                     }
                  }
               }
            },
            "ЭтоНовый":{
               "name":"ЭтоНовый",
               "name_en":"IsNew",
               "description":"Определяет, записан ли элемент в базу данных.",
               "returns":"Булево, Истина - изменяется еще ни разу не записанный элемент; Ложь - элемент уже записан."
            }            
         },
         "refMethods":{               
            "Метаданные":{
               "name":"Метаданные",
               "name_en":"Metadata",               
               "description":"Предоставляет доступ к объекту описания метаданных плана видов характеристик. Другой путь получения того же значения - через свойство глобального контекста Метаданные. Например: Метаданные.ПланыВидовХарактеристик.",
               "returns":"ОбъектМетаданных"               
            },               
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму плана видов характеристик, на который указывает ссылка.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },                           
            "Скопировать":{
               "name":"Скопировать",
               "name_en":"Copy",
               "description":"Создает новый план видов характеристик копированием существующего",
               "returns":"ПланВидивХарактеристикОбъект"
            },                           
            "ПолучитьОбъект":{
               "name":"ПолучитьОбъект",
               "name_en":"GetObject",
               "description":"Получает по ссылке объект, предназначенный для модификации докумнгьа.",
               "returns":"ПланВидивХарактеристикОбъект/Неопределено, Неопределено - объекта в базе нет (например, при обмене данными или после непосредственного удаления объекта, на который есть ссылки)."
            },
            "Пустая":{
               "name":"Пустая",
               "name_en":"GetObject",
               "description":"Определяет, является ли ссылка пустой или нет.",
               "returns":"Булево, Истина - ссылка не указывает ни на какой объект (пустая ссылка); Ложь - в противном случае."
            },
            "Уровень":{
               "name":"Уровень",
               "name_en":"Level",
               "description":"Получает уровень плана видов характеристик.",
               "returns":"Число"
            },
            "УникальныйИдентификатор":{
               "name":"УникальныйИдентификатор",
               "name_en":"UUID",
               "description":"Получает уникальный идентификатор ссылки. Ссылка может быть получена из уникального идентификатора с помощью метода менеджера ПолучитьСсылку.",
               "returns":"УникальныйИдентификатор"
            }
         }
      },
      "chartsOfCalculationTypes": {
         "name":"ПланыВидовРасчета",
         "name_en":"ChartsOfCalculationTypes",
         "query_name":"ПланВидовРасчета",
         "query_name_en":"ChartOfCalculationTypes",
         "items":{
            "ОсновныеНачисленияОрганизаций":{
               "properties":{
                  "Реквизит1":{
                     "name": "Реквизит №1"
                  },
                  "Реквизит2":{
                     "name": "Реквизит №2"
                  },
                  "Реквизит3":{
                     "name": "Реквизит №3"
                  }
               }
            }
         },
         "methods":{
            "Выбрать":{
               "name":"Выбрать",
               "name_en":"Select",
               "description":"Формирует выборку видов расчета.",
               "returns":"ПланВидовРасчетаВыборка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"( Отбор?, Порядок?) :  ПланВидовРасчетаВыборка",
                     "Параметры":{                        
                        "Отбор":"Структура, Задает поле и значение отбора открываемой выборки. Ключ структуры описывает имя поля, а значение структуры - значение отбора по этому полю. В качестве полей для отбора могут задаваться только поля 'Код', 'Наименование' и реквизиты счета для которых в конфигураторе признак индексирования установлен в значение 'Индексировать' или в значение 'Индексировать с доп. упорядоч.'. Важно! Структура может содержать только один элемент. Если параметр не указан, то отбор не используется. ",
                        "Порядок":"Строка с именем реквизита счета, определяющая упорядочивание элементов в выборке. Может быть указано 'Код', 'Наименование' или имя одного из реквизитов примитивного типа (Число, Строка, Дата, Булево), для которого установлен признак 'Индексирование' в значение 'Индексировать' или в 'Индексировать с дополнительным упорядочиванием' в конфигураторе. После имени реквизита через пробел может быть указано направление сортировки. Направление определяется: 'Убыв' ('Desc') - упорядочивать по убыванию; 'Возр' ('Asc') - упорядочивать по возрастанию. По умолчанию сортировка производится по возрастанию. Если параметр не указан, то порядок определяется основным представлением счета."
                     }
                  }
               }
            },            
            "НайтиПоКоду":{
               "name":"НайтиПоКоду",
               "name_en":"FindByCode",
               "description":"Осуществляет поиск элемента по его коду.",
               "returns":"ПланВидовРасчетаСсылка; Неопределено",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Код) : ПланВидовРасчетаСсылка; Неопределено",
                     "Параметры":{
                        "Код":"Число/Строка, Искомый код"
                     }
                  }
               }
            },
            "НайтиПоНаименованию":{
               "name":"НайтиПоНаименованию",
               "name_en":"FindByDescription",
               "description":"Осуществляет поиск вида расчета по наименованию.",
               "returns":"ПланВидовРасчетаСсылка; Неопределено",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Наименование, ТочноеСоответствие?) : ПланВидовРасчетаСсылка; Неопределено",
                     "Параметры":{
                        "Наименование":"Строка, содержащая искомое наименование",
                        "ТочноеСоответствие":"Определяет режим поиска по полному соответствию. Поиск будет успешным, если строка поиска: в случае значения параметра Ложь - будет соответствовать левой части наименования; в случае значения параметра Истина - будет полностью совпадать с наименованием (за исключением 'хвостовых'' пробелов в наименовании)."                        
                     }
                  }
               }
            },
            "НайтиПоРеквизиту":{
               "name":"НайтиПоРеквизиту",
               "name_en":"FindByAttribute",
               "description":"Осуществляет поиск элемента по значению реквизита.",
               "returns":" ПланВидовРасчетаСсылка; Неопределено",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ИмяРеквизита, ЗначениеРеквизита) :  ПланВидовРасчетаСсылка; Неопределено",
                     "Параметры":{
                        "ИмяРеквизита":"Имя реквизита, как он задан в конфигураторе, по значению которого осуществляется поиск. Тип значения произвольный, кроме ХранилищеЗначения и строк произвольной длины.",
                        "ЗначениеРеквизита":"Значение реквизита, по которому должен выполняться поиск. "                        
                     }
                  }
               }
            },
            "ПолучитьДанныеВыбора":{
               "name":"ПолучитьДанныеВыбора",
               "name_en":"GetChoiceData",
               "description":"Формирует список значений данных выбора при вводе по строке, автоподборе текста и быстром выборе.",
               "returns":"СписокЗначений",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Параметры) : СписокЗначений",
                     "Параметры":{
                        "Параметры":"Содержит параметры для формирования списка значений: Структура, в которой обязательно должны содержаться следующие ключи:  Отбор (Filter) - отбор, используемый для поиска данных, тип Структура; значения элементов отбора могут иметь тип Массив или иной тип, не являющийся коллекцией; для типа Массив сравнение выполняется с видом сравнения ВСписке, иначе вид сравнения Равно;  СтрокаПоиска (SearchString) - содержит строку, используемую при поиске данных; для быстрого выбора содержит значение Неопределено;  ВыборГруппИЭлементов (ChoiceFoldersAndItems) - указывается использование групп и элементов (только для иерархических данных); тип ИспользованиеГруппИЭлементов."
                     }
                  }
               }
            },
            "ПолучитьИнициализациюПредопределенныхДанных":{
               "name":"ПолучитьИнициализациюПредопределенныхДанных",
               "name_en":"GetPredefinedDataInitialization",
               "description":"Получает признак того, что предопределенные данные области инициализированы.",
               "returns":"Строка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Область) : Строка",
                     "Параметры":{
                        "Область":"Соответствие, Данный параметр позволяет задать область объекта, в которой необходимо получить признак проинициализированности. Область описывается соответствием: разделитель - значение. Могут быть использованы только разделители, разделяющие данные в режиме НезависимоИСовместно. Ключом соответствия может быть объект метаданных или имя разделителя. Если разделители, переданные в этом параметре, установлены и используются в сеансе, то они игнорируются. Значение по умолчанию: Неопределено."
                     }
                  }
               }
            },            
            "ПолучитьМакет":{
               "name":"ПолучитьМакет",
               "name_en":"GetTemplate",
               "description":"Получает макет плана видов расчета.",
               "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Макет) : Объект",
                     "Параметры":{
                        "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                     }
                  }
               }
            },
            "ПолучитьОбновлениеПредопределенныхДанных":{
               "name":"ПолучитьОбновлениеПредопределенныхДанных",
               "name_en":"GetPredefinedDataUpdate",
               "description":"Получает текущее значение режима обновления предопределенных элементов. Вычисляется из значений, установленных в метаданных и в данных.",
               "returns":"ОбновлениеПредопределенныхДанных"               
            },
            "ПолучитьСсылку":{
               "name":"ПолучитьСсылку",
               "name_en":"GetRef",
               "description":"Формирует ссылку из значения типа УникальныйИдентификатор. Данный уникальный идентификатор может быть в дальнейшем получен из ссылки методом УникальныйИдентификатор.",
               "returns":"ПланВидовРасчетаСсылка",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(УникальныйИдентификатор) : ПланВидовРасчетаСсылка",
                     "Параметры":{
                        "УникальныйИдентификатор":"Уникальный идентификатор, из которого будет формироваться ссылка."
                     }
                  }
               }
            },
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает произвольную форму, связанную с объектом конфигурации 'План видов расчета'",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПолучитьФормуВыбора":{
               "name":"ПолучитьФормуВыбора",
               "name_en":"GetChoiceForm",
               "description":"Получает форму выбора ссылки на вид расчета.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПолучитьФормуНовогоВидаРасчета":{
               "name":"ПолучитьФормуНовогоВидаРасчета",
               "name_en":"GetNewCalculationTypeForm",
               "description":"Получает форму нового вида расчета.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },            
            "ПолучитьФормуСписка":{
               "name":"ПолучитьФормуСписка",
               "name_en":"GetListForm",
               "description":"Получает форму списка видов расчета.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },
            "ПустаяСсылка":{
               "name":"ПустаяСсылка",
               "name_en":"EmptyRef",
               "description":"Получает пустое значение ссылки на план видов расчета данного вида.",
               "returns":" ПланВидовРасчетаСсылка"
            },                        
            "СоздатьВидРасчета":{
               "name":"СоздатьВидРасчета",
               "name_en":"CreateCalculationType",
               "description":"Создает новый вид расчета.",
               "returns":"ПланВидовРасчетаОбъект"
            },
            "УстановитьИнициализациюПредопределенныхДанных":{
               "name":"УстановитьИнициализациюПредопределенныхДанных",
               "name_en":"SetPredefinedDataInitialization",
               "description":"Устанавливает признак инициализации предопределенных данных области. Если значение параметра Инициализированы = Ложь, то предопределенные данные должны фактически отсутствовать.",               
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Область?, Инициализированы?) ",
                     "Параметры":{
                        "Область":"Соответствие, Данный параметр позволяет задать область объекта, в которой необходимо изменить признак проинициализированности. Область описывается соответствием: разделитель - значение. Могут быть использованы только разделители, разделяющие данные в режиме НезависимоИСовместно. Ключом соответствия может быть объект метаданных или имя разделителя. Если разделители, переданные в этом параметре, установлены и используются в сеансе, то они игнорируются. Значение по умолчанию: Неопределено. ",
                        "Инициализированы":"Булево, Указывает, инициализированы ли предопределенные данные в области или нет."
                     }
                  }
               }
            },
            "УстановитьОбновлениеПредопределенныхДанных":{
               "name":"УстановитьОбновлениеПредопределенныхДанных",
               "name_en":"SetPredefinedDataUpdate",
               "description":"Устанавливает режим обновления предопределенных элементов в данных. Для выполнения требуются права администратора информационной базы.",               
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ОбновлениеПредопределенных?) ",
                     "Параметры":{
                        "ОбновлениеПредопределенных":"ОбновлениеПредопределенныхДанных, Режим обновления предопределенных данных объекта метаданных. Значение по умолчанию: Автоматически."
                     }
                  }
               }
            }
         },
         "objMethods":{
            "Заблокирован":{
               "name":"Заблокирован",
               "name_en":"IsLocked",
               "description":"Определяет, заблокирован ли элемент данным объектом.",
               "returns":"Булево, Истина - элемент заблокирован; Ложь - в противном случае."
            },
            "Заблокировать":{
               "name":"Заблокировать",
               "name_en":"Lock",
               "description":"Выполняет блокировку объекта от изменения другими режимами или пользователями."
            },
            "Записать":{
               "name":"Записать",
               "name_en":"Write",
               "description":"Записывает объект вид расчета. При записи выполняется проверка правильности таблицы вытесняющих видов расчета и ведущих видов расчета. При заполнении предопределенных табличных частей ВедущиеВидыРасчета и ВытесняющиеВидыРасчета проверяется отсутствие циклических ссылок."
            },
            "Заполнить":{
               "name":"Заполнить",
               "name_en":"Fill",
               "description":"Заполняет данные элемента данными из другого объекта. Инициирует событие ОбработкаЗаполнения и вызов его процедуры-обработчика в модуле плана счетов. В ней может размещаться алгоритм, заполняющий данные элемента из переданного значения.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ДанныеЗаполнения) ",
                     "Параметры":{
                        "ДанныеЗаполнения":"Произвольный, Значение, на основании которого выполняется заполнение счета."
                     }
                  }
               }
            },
            "Метаданные":{
               "name":"Метаданные",
               "name_en":"Metadata",               
               "description":"Предоставляет доступ к объекту метаданных плана видов расчета. Другой путь получения того же значения - через свойство глобального контекста Метаданные. Например: Метаданные.ПланыВидовРасчета.ОсновныеНачисления.",
               "returns":"ОбъектМетаданных"               
            },
            "Модифицированность":{
               "name":"Модифицированность",
               "name_en":"Modified",               
               "description":"Определяет, был ли изменен объект после считывания из базы данных.",
               "returns":"Истина - объект изменен; Ложь - в противном случае."
            },
            "ПолучитьМакет":{
               "name":"ПолучитьМакет",
               "name_en":"GetTemplate",
               "description":"Получает макет вида расчета.",
               "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Макет) : Объект",
                     "Параметры":{
                        "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                     }
                  }
               }
            },            
            "ПолучитьСсылкуНового":{
               "name":"ПолучитьСсылкуНового",
               "name_en":"GetNewObjectRef",
               "description":"Позволяет для нового (созданного и еще не записанного) объекта получить ранее установленное методом УстановитьСсылкуНового значение ссылки.",
               "returns":"ПланВидовРасчетаСсылка"               
            },
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму элемента плана счетов, которая содержит данный объект встроенного языка.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },            
            "ПроверитьЗаполнение":{
               "name":"ПроверитьЗаполнение",
               "name_en":"CheckFilling",
               "description":"Проверяет заполнение реквизитов. Для реквизитов, у которых при конфигурировании свойство 'Проверка заполнения' установлено в значение 'Показывать ошибку' и реквизит не заполнен, будет сформировано сообщение об ошибке.",
               "returns":"Булево, Истина - ошибок не обнаружено, Ложь - в противном случае."               
            },
            "Прочитать":{
               "name":"Прочитать",
               "name_en":"Read",
               "description":"Считывает данные плана видов характеристик из базы данных."               
            },
            "Разблокировать":{
               "name":"Разблокировать",
               "name_en":"Unlock",
               "description":"Выполняет разблокировку плана видов характеристик, если он заблокирован данным объектом."               
            },
            "Скопировать":{
               "name":"Скопировать",
               "name_en":"Copy",
               "description":"Создает новый счет копированием существующего.",
               "returns":"ПланВидовРасчетаОбъект"
            },
            "Удалить":{
               "name":"Удалить",
               "name_en":"Delete",
               "description":"Удаляет план видов характеристик из базы данных. Вызывает преопределенную процедуру события ПередУдалением."               
            },
            "УстановитьПометкуУдаления":{
               "name":"УстановитьПометкуУдаления",
               "name_en":"SetDeletionMark",
               "description":"Устанавливает/снимет пометку на удаление. Объект при этом не удаляется из базы данных. Окончательное удаление помеченных счетов происходит при удалении помеченных объектов.",               
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(ПометкаУдаления)",
                     "Параметры":{
                        "ПометкаУдаления":"Булево, Признак установки / снятие пометки на удаление. Истина - пометка будет установлена; Ложь - пометка будет снята."                        
                     }
                  }
               }
            },
            "УстановитьСсылкуНового":{
               "name":"УстановитьСсылкуНового",
               "name_en":"SetNewObjectRef",
               "description":"Устанавливает значение для нового (созданного и еще не записанного) объекта, которое будет назначено при записи в качестве ссылки. Значение не может равняться ссылке какого-либо из имеющихся в базе данных объекта данного типа. Уникальность ссылки проверяется при записи объекта.",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Ссылка)",
                     "Параметры":{
                        "Ссылка":" ПланВидовРасчетаСсылка, Ссылка, которая будет назначена при записи нового объекта. "
                     }
                  }
               }
            },
            "ЭтоНовый":{
               "name":"ЭтоНовый",
               "name_en":"IsNew",
               "description":"Определяет, записан ли элемент в базу данных.",
               "returns":"Булево, Истина - изменяется еще ни разу не записанный элемент; Ложь - элемент уже записан."
            }            
         },
         "refMethods":{               
            "Метаданные":{
               "name":"Метаданные",
               "name_en":"Metadata",               
               "description":"Предоставляет доступ к объекту описания метаданных плана видов расчета. Другой путь получения того же значения - через свойство глобального контекста Метаданные. Например: Метаданные.ПланыВидовРасчета.",
               "returns":"ОбъектМетаданных"               
            },               
            "ПолучитьФорму":{
               "name":"ПолучитьФорму",
               "name_en":"GetForm",
               "description":"Получает форму плана видов расчета, на который указывает ссылка.",
               "returns":"Форма",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                     "Параметры":{
                        "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                        "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                        "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                     }
                  }
               }
            },                           
            "Скопировать":{
               "name":"Скопировать",
               "name_en":"Copy",
               "description":"Создает новый план видов расчета копированием существующего",
               "returns":"ПланВидовРасчетаОбъект"
            },                           
            "ПолучитьОбъект":{
               "name":"ПолучитьОбъект",
               "name_en":"GetObject",
               "description":"Получает по ссылке объект, предназначенный для модификации докумнгьа.",
               "returns":"ПланВидовРасчетаОбъект/Неопределено, Неопределено - объекта в базе нет (например, при обмене данными или после непосредственного удаления объекта, на который есть ссылки)."
            },
            "Пустая":{
               "name":"Пустая",
               "name_en":"GetObject",
               "description":"Определяет, является ли ссылка пустой или нет.",
               "returns":"Булево, Истина - ссылка не указывает ни на какой объект (пустая ссылка); Ложь - в противном случае."
            },
            "Уровень":{
               "name":"Уровень",
               "name_en":"Level",
               "description":"Получает уровень плана видов характеристик.",
               "returns":"Число"
            },
            "УникальныйИдентификатор":{
               "name":"УникальныйИдентификатор",
               "name_en":"UUID",
               "description":"Получает уникальный идентификатор ссылки. Ссылка может быть получена из уникального идентификатора с помощью метода менеджера ПолучитьСсылку.",
               "returns":"УникальныйИдентификатор"
            }
         }
      },
      "constants": {
         "name":"Константы",
         "name_en":"Constants",
         "query_name":"Константа",
         "query_name_en":"Constant",
         "items":{
            "КонстантаНомер1":{},
            "КонстантаНомер2":{}
         },
         "methods":{
            "Получить":{
               "name":"Получить",
               "name_en":"Get",
               "description":"Получает значение константы",
               "returns":"Произвольный"               
            },
            "Установить":{
               "name":"Установить",
               "name_en":"Set",
               "description":"Устанавливает значение константы в базе данных",
               "signature":{
                  "default":{
                     "СтрокаПараметров":"(Значение)",
                     "Параметры":{
                        "Значение":"Произвольный, Новое значение константы"                        
                     }
                  }
               }
            },
         }
      },
      "roles": {
         "items":{
            "РольНомер1":{},
            "РольНомер2":{}
         }
      },      
      "commonTemplates": {
         "items":{
            "ОбшийМакетНомер1":{},
            "ОбшийМакетНомер2":{}
         }
      },
      "сommonForms": {
         "items":{
            "ОбщаяФормаНомер1":{},
            "ОбщаяФормаНомер2":{}
         }
      },      
      "customObjects": {}      
   }
});